{"version":3,"file":"static/js/7170.6890a71a.chunk.js","mappings":"6LAMA,MAAMA,EAAwBC,IAAa,IAAZ,KAACC,GAAKD,EACjC,OAEIE,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACC,MAAM,eAAeC,UAC9BH,EAAAA,EAAAA,KAACI,EAAAA,EAAiB,CAACC,SAAS,MAAMJ,MAAOK,EAAAA,EAAQH,SAC5CJ,KAEH,EAIRQ,EAAiBC,IAAa,IAAZ,KAACT,GAAKS,EAC1B,OACIR,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACC,MAAM,eAAeC,UAC9BH,EAAAA,EAAAA,KAACI,EAAAA,EAAiB,CAACC,SAAS,MAAMJ,MAAOK,EAAAA,EAAQH,SAC5CJ,KAEH,EAIRU,EAAoBC,IAAa,IAAZ,KAACX,GAAKW,EAC7B,OAEIV,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACC,MAAM,eAAeC,UAC9BH,EAAAA,EAAAA,KAACI,EAAAA,EAAiB,CAACC,SAAS,SAASJ,MAAOK,EAAAA,EAAQH,SAC/CJ,KAEH,C,yFC9Bd,MAAMY,EAAYb,IAAqC,IAApC,QAACc,GAA6Bd,EAC7C,OAAQE,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CAACY,YAAa,IAAIV,SAAES,GAAe,EAGtDb,EAAI,++BA+BM,SAASe,IAErB,MAAMC,GAAWC,EAAAA,EAAAA,QAAsC,MAUvD,OACIC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAf,SAAA,EACIH,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACkB,QAAS,EAAGC,WAAY,UAAWlB,MAAO,eAAeC,UAClEH,EAAAA,EAAAA,KAACqB,EAAAA,EAAQ,CAACC,IAAKP,EAAUQ,QAASZ,EAAU,CAACC,QAAS,eAAgBY,SAAU,QAAQrB,UACpFH,EAAAA,EAAAA,KAACqB,EAAAA,EAAQ,CAACE,QAASZ,EAAU,CAACC,QAAS,YAAaa,cAAe,YAAYtB,UAC3EH,EAAAA,EAAAA,KAACqB,EAAAA,EAAQ,CAACE,QAASZ,EAAU,CAACC,QAAS,UAAWc,QAbtE,SAAiBC,GACbZ,EAASa,QAASC,QAAS5B,MAAMmB,WAAa,MAC9CL,EAASa,QAASC,QAAS5B,MAAMkB,QAAU,QAC3CJ,EAASa,QAASE,KAAM7B,MAAMmB,WAAa,SAC3CL,EAASa,QAASG,MAAO9B,MAAMmB,WAAa,MAC5CO,EAASG,KAAM7B,MAAMmB,WAAa,OACtC,WAYQpB,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,OAAAG,UACIH,EAAAA,EAAAA,KAACH,EAAAA,GAAqB,CAACE,KAAMA,QAI7C,C","sources":["ViewStorage/codeSnippetJavaScript.jsx","ViewStorage/menu/menuCore/1-8.tsx"],"sourcesContent":["\r\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport { coldarkDark as myStyle } from 'react-syntax-highlighter/dist/esm/styles/prism';\r\n\r\n\r\n\r\nconst CodeSnippetJavaScript = ({code}) => {\r\n    return (\r\n\r\n        <div style={{width:\"fit-content\"}}>\r\n            <SyntaxHighlighter language=\"jsx\" style={myStyle}  >\r\n                {code}\r\n            </SyntaxHighlighter>\r\n        </div>\r\n\r\n    );\r\n};\r\nconst CodeSnippetCss = ({code}) => {\r\n    return (\r\n        <div style={{width:\"fit-content\"}}>\r\n            <SyntaxHighlighter language=\"css\" style={myStyle} >\r\n                {code}\r\n            </SyntaxHighlighter>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst CodeSnippetDotNet = ({code}) => {\r\n    return (\r\n\r\n        <div style={{width:\"fit-content\"}}>\r\n            <SyntaxHighlighter language=\"csharp\" style={myStyle} >\r\n                {code}\r\n            </SyntaxHighlighter>\r\n        </div>\r\n    );\r\n};\r\nexport {\r\n    CodeSnippetJavaScript,CodeSnippetCss,CodeSnippetDotNet\r\n}\r\n\r\n\r\n\r\n","import MenuItem from \"bsr-menu\";\r\nimport {CodeSnippetJavaScript} from \"../../codeSnippetJavaScript\";\r\nimport React, {useRef} from \"react\";\r\n\r\nconst myContent = ({message}: { message: string }) => {\r\n    return (<span style={{paddingLeft: 10}}>{message}</span>)\r\n}\r\n/*------------------------------------*/\r\nconst code = ` \r\n// ts\r\nimport MenuItem from \"bsr-menu\";\r\nimport React, {useRef} from \"react\";\r\n\r\nconst myContent=({message}:{message:string})=>{\r\n    return (<span style={{paddingLeft:10}}>{message}</span>)\r\n}\r\n\r\nexport function P1_8() {\r\n\r\n    const mRefMenu=useRef<InstanceType<typeof MenuItem >>(null)\r\n    function myClick(menuItem:InstanceType<typeof MenuItem>){\r\n        mRefMenu.current!.wrapper!.style.background='red'\r\n        mRefMenu.current!.wrapper!.style.padding='100px'\r\n        mRefMenu.current!.menu!.style.background='yellow'\r\n        mRefMenu.current!.popUp!.style.background='red'\r\n        menuItem.menu!.style.background='green'\r\n    }\r\n\r\n    return (\r\n        <MenuItem ref={mRefMenu} content={myContent({message:'SimpleMeny'})} behavior={'click'} >\r\n             <MenuItem content={myContent({message:'level 1'})} positionPopup={'downRight'}>\r\n                   <MenuItem content={myContent({message:'click'})} onClick={myClick}/>\r\n             </MenuItem>\r\n        </MenuItem>\r\n    )\r\n}\r\n`\r\n\r\n/*------------------------------------*/\r\nexport default  function P1_8() {\r\n\r\n    const mRefMenu = useRef<InstanceType<typeof MenuItem>>(null)\r\n\r\n    function myClick(menuItem: InstanceType<typeof MenuItem>) {\r\n        mRefMenu.current!.wrapper!.style.background = 'red'\r\n        mRefMenu.current!.wrapper!.style.padding = '100px'\r\n        mRefMenu.current!.menu!.style.background = 'yellow'\r\n        mRefMenu.current!.popUp!.style.background = 'red'\r\n        menuItem.menu!.style.background = 'green'\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{padding: 5, background: \"#f1efef\", width: \"fit-content\"}}>\r\n                <MenuItem ref={mRefMenu} content={myContent({message: 'SimpleMeny'})} behavior={'click'}>\r\n                    <MenuItem content={myContent({message: 'level 1'})} positionPopup={'downRight'}>\r\n                        <MenuItem content={myContent({message: 'click'})} onClick={myClick}/>\r\n                    </MenuItem>\r\n                </MenuItem>\r\n            </div>\r\n\r\n            <br/>\r\n            <br/>\r\n            <div>\r\n                <CodeSnippetJavaScript code={code}/>\r\n            </div>\r\n        </>\r\n    )\r\n}"],"names":["CodeSnippetJavaScript","_ref","code","_jsx","style","width","children","SyntaxHighlighter","language","myStyle","CodeSnippetCss","_ref2","CodeSnippetDotNet","_ref3","myContent","message","paddingLeft","P1_8","mRefMenu","useRef","_jsxs","_Fragment","padding","background","MenuItem","ref","content","behavior","positionPopup","onClick","menuItem","current","wrapper","menu","popUp"],"sourceRoot":""}