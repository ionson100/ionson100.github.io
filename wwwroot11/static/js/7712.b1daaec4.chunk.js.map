{"version":3,"file":"static/js/7712.b1daaec4.chunk.js","mappings":"6LAMA,MAAMA,EAAwBC,IAAa,IAAZ,KAACC,GAAKD,EACjC,OAEIE,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACC,MAAM,eAAeC,UAC9BH,EAAAA,EAAAA,KAACI,EAAAA,EAAiB,CAACC,SAAS,MAAMJ,MAAOK,EAAAA,EAAQH,SAC5CJ,KAEH,EAIRQ,EAAiBC,IAAa,IAAZ,KAACT,GAAKS,EAC1B,OACIR,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACC,MAAM,eAAeC,UAC9BH,EAAAA,EAAAA,KAACI,EAAAA,EAAiB,CAACC,SAAS,MAAMJ,MAAOK,EAAAA,EAAQH,SAC5CJ,KAEH,EAIRU,EAAoBC,IAAa,IAAZ,KAACX,GAAKW,EAC7B,OAEIV,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACC,MAAM,eAAeC,UAC9BH,EAAAA,EAAAA,KAACI,EAAAA,EAAiB,CAACC,SAAS,SAASJ,MAAOK,EAAAA,EAAQH,SAC/CJ,KAEH,C,mGC7Bd,MAAMA,EAAI,uhCAiCM,SAASY,IACrB,MAAMC,GAASC,EAAAA,EAAAA,QAAsC,MACrD,OACIC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAZ,SAAA,EAEIH,EAAAA,EAAAA,KAAA,UAAQC,MAAO,CAACe,YAAa,IAAKC,QAASA,KACvCL,EAASM,QAASC,YAAWnB,EAAAA,EAAAA,KAACoB,EAAAA,IAAe,KAAIpB,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CAACoB,YAAY,IAAIlB,SAAC,WAAcH,EAAAA,EAAAA,KAACsB,EAAAA,IAAgB,IAAG,EACpHnB,SAAC,iBACHH,EAAAA,EAAAA,KAAA,UAAQC,MAAO,CAACe,YAAa,IAAKC,QAASA,KACvCL,EAASM,QAASC,gBAAWI,GAAWvB,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CAACoB,YAAY,IAAIlB,SAAC,WAAcH,EAAAA,EAAAA,KAACsB,EAAAA,IAAgB,IAAG,EAC3GnB,SAAC,iBACHH,EAAAA,EAAAA,KAAA,UAAQC,MAAO,CAACe,YAAa,IAAKC,QAASA,KACvCL,EAASM,QAASC,YAAWnB,EAAAA,EAAAA,KAACoB,EAAAA,IAAe,KAAIpB,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CAACoB,YAAY,IAAIlB,SAAC,eAAcoB,EAAU,EAC1GpB,SAAC,iBACHH,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UAGAA,EAAAA,EAAAA,KAACwB,EAAAA,EAAQ,CAACC,IAAKb,EAAUc,QAAQ,UAGjC1B,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,OAAAG,UACIH,EAAAA,EAAAA,KAACH,EAAAA,GAAqB,CAACE,KAAMA,QAI7C,C","sources":["ViewStorage/codeSnippetJavaScript.jsx","ViewStorage/menu/menuCore/1-10_.tsx"],"sourcesContent":["\r\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport { coldarkDark as myStyle } from 'react-syntax-highlighter/dist/esm/styles/prism';\r\n\r\n\r\n\r\nconst CodeSnippetJavaScript = ({code}) => {\r\n    return (\r\n\r\n        <div style={{width:\"fit-content\"}}>\r\n            <SyntaxHighlighter language=\"jsx\" style={myStyle}  >\r\n                {code}\r\n            </SyntaxHighlighter>\r\n        </div>\r\n\r\n    );\r\n};\r\nconst CodeSnippetCss = ({code}) => {\r\n    return (\r\n        <div style={{width:\"fit-content\"}}>\r\n            <SyntaxHighlighter language=\"css\" style={myStyle} >\r\n                {code}\r\n            </SyntaxHighlighter>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst CodeSnippetDotNet = ({code}) => {\r\n    return (\r\n\r\n        <div style={{width:\"fit-content\"}}>\r\n            <SyntaxHighlighter language=\"csharp\" style={myStyle} >\r\n                {code}\r\n            </SyntaxHighlighter>\r\n        </div>\r\n    );\r\n};\r\nexport {\r\n    CodeSnippetJavaScript,CodeSnippetCss,CodeSnippetDotNet\r\n}\r\n\r\n\r\n\r\n","import React, {useRef} from \"react\";\r\nimport MenuItem from \"bsr-menu\";\r\nimport {CodeSnippetJavaScript} from \"../../codeSnippetJavaScript\";\r\nimport { AiFillCaretLeft,AiFillCaretRight } from \"react-icons/ai\";\r\n/*-------------------------------------*/\r\nconst code = `\r\n//ts\r\nimport React, {useRef} from \"react\";\r\nimport MenuItem from \"bsr-menu\";\r\nimport { AiFillCaretLeft,AiFillCaretRight } from \"react-icons/ai\";\r\n\r\nexport function P1_10_() {\r\n    const mRefMenu=useRef<InstanceType<typeof MenuItem>>(null);\r\n    return (\r\n        <>\r\n\r\n            <button style={{marginRight: 10}} onClick={() => {\r\n                mRefMenu.current!.setContent(<AiFillCaretLeft/>, <span style={{paddingLeft:10}}>Test1</span>, <AiFillCaretRight/>)\r\n            }}>SetContent1</button>\r\n            <button style={{marginRight: 10}} onClick={() => {\r\n                mRefMenu.current!.setContent(undefined, <span style={{paddingLeft:10}}>Test2</span>, <AiFillCaretRight/>)\r\n            }}>SetContent2</button>\r\n            <button style={{marginRight: 10}} onClick={() => {\r\n                mRefMenu.current!.setContent(<AiFillCaretLeft/>, <span style={{paddingLeft:10}}>Test3</span>, undefined)\r\n            }}>SetContent3</button>\r\n          \r\n\r\n            <MenuItem ref={mRefMenu} content=\"Menu\" />\r\n        </>\r\n    )\r\n}\r\n`\r\n\r\n\r\n/*-------------------------------------*/\r\n\r\n\r\n\r\nexport default  function P1_10_() {\r\n    const mRefMenu=useRef<InstanceType<typeof MenuItem>>(null);\r\n    return (\r\n        <>\r\n\r\n            <button style={{marginRight: 10}} onClick={() => {\r\n                mRefMenu.current!.setContent(<AiFillCaretLeft/>, <span style={{paddingLeft:10}}>Test1</span>, <AiFillCaretRight/>)\r\n            }}>SetContent1</button>\r\n            <button style={{marginRight: 10}} onClick={() => {\r\n                mRefMenu.current!.setContent(undefined, <span style={{paddingLeft:10}}>Test2</span>, <AiFillCaretRight/>)\r\n            }}>SetContent2</button>\r\n            <button style={{marginRight: 10}} onClick={() => {\r\n                mRefMenu.current!.setContent(<AiFillCaretLeft/>, <span style={{paddingLeft:10}}>Test3</span>, undefined)\r\n            }}>SetContent3</button>\r\n            <br/>\r\n            <br/>\r\n\r\n\r\n            <MenuItem ref={mRefMenu} content=\"Menu\" />\r\n\r\n\r\n            <br/>\r\n            <br/>\r\n            <div>\r\n                <CodeSnippetJavaScript code={code}/>\r\n            </div>\r\n        </>\r\n    )\r\n}"],"names":["CodeSnippetJavaScript","_ref","code","_jsx","style","width","children","SyntaxHighlighter","language","myStyle","CodeSnippetCss","_ref2","CodeSnippetDotNet","_ref3","P1_10_","mRefMenu","useRef","_jsxs","_Fragment","marginRight","onClick","current","setContent","AiFillCaretLeft","paddingLeft","AiFillCaretRight","undefined","MenuItem","ref","content"],"sourceRoot":""}