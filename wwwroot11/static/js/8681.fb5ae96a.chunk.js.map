{"version":3,"file":"static/js/8681.fb5ae96a.chunk.js","mappings":"6LAMA,MAAMA,EAAwBC,IAAa,IAAZ,KAACC,GAAKD,EACjC,OAEIE,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACC,MAAM,eAAeC,UAC9BH,EAAAA,EAAAA,KAACI,EAAAA,EAAiB,CAACC,SAAS,MAAMJ,MAAOK,EAAAA,EAAQH,SAC5CJ,KAEH,EAIRQ,EAAiBC,IAAa,IAAZ,KAACT,GAAKS,EAC1B,OACIR,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACC,MAAM,eAAeC,UAC9BH,EAAAA,EAAAA,KAACI,EAAAA,EAAiB,CAACC,SAAS,MAAMJ,MAAOK,EAAAA,EAAQH,SAC5CJ,KAEH,EAIRU,EAAoBC,IAAa,IAAZ,KAACX,GAAKW,EAC7B,OAEIV,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACC,MAAM,eAAeC,UAC9BH,EAAAA,EAAAA,KAACI,EAAAA,EAAiB,CAACC,SAAS,SAASJ,MAAOK,EAAAA,EAAQH,SAC/CJ,KAEH,C,yFC7Bd,MAAMA,EAAI,gnCAwCK,SAASY,IACpB,MAAMC,GAAYC,EAAAA,EAAAA,UAClB,OACIC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAZ,SAAA,EACIH,EAAAA,EAAAA,KAAA,SAAOgB,IAAKJ,KACZZ,EAAAA,EAAAA,KAAA,SAAK,KAACA,EAAAA,EAAAA,KAAA,UACNA,EAAAA,EAAAA,KAAA,UAAQiB,QAASA,KACbL,EAAUM,QAAQC,UAAY,IAC9BC,EAAAA,EAAAA,IAAc,CAEVC,YAAY,CAACC,WAAW,OACxBC,UAAU,CAACD,WAAW,SACtBE,YAAY,CAACF,WAAW,UACxBrB,MAAM,CAACC,MAAM,KAEbuB,QAASzB,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CAACyB,YAAa,IAAIvB,SAAC,YACzCwB,MAAM3B,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CAACyB,YAAa,GAAGE,MAAM,OAAOzB,SAAC,mBAClD0B,QAAS,EAAE7B,EAAAA,EAAAA,KAAA,UAAQ,aAAY,EAAG,aAAY,EAAEG,SAAC,aAClD2B,MAAKC,IACJnB,EAAUM,QAAQC,UAAYa,KAAKC,UAAUF,EAAE,GACjD,EACJ5B,SAAC,UAEHH,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,OAAAG,UACIH,EAAAA,EAAAA,KAACH,EAAAA,GAAqB,CAACE,KAAMA,QAI7C,C","sources":["ViewStorage/codeSnippetJavaScript.jsx","ViewStorage/menu/dialog/4-6.js"],"sourcesContent":["\r\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport { coldarkDark as myStyle } from 'react-syntax-highlighter/dist/esm/styles/prism';\r\n\r\n\r\n\r\nconst CodeSnippetJavaScript = ({code}) => {\r\n    return (\r\n\r\n        <div style={{width:\"fit-content\"}}>\r\n            <SyntaxHighlighter language=\"jsx\" style={myStyle}  >\r\n                {code}\r\n            </SyntaxHighlighter>\r\n        </div>\r\n\r\n    );\r\n};\r\nconst CodeSnippetCss = ({code}) => {\r\n    return (\r\n        <div style={{width:\"fit-content\"}}>\r\n            <SyntaxHighlighter language=\"css\" style={myStyle} >\r\n                {code}\r\n            </SyntaxHighlighter>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst CodeSnippetDotNet = ({code}) => {\r\n    return (\r\n\r\n        <div style={{width:\"fit-content\"}}>\r\n            <SyntaxHighlighter language=\"csharp\" style={myStyle} >\r\n                {code}\r\n            </SyntaxHighlighter>\r\n        </div>\r\n    );\r\n};\r\nexport {\r\n    CodeSnippetJavaScript,CodeSnippetCss,CodeSnippetDotNet\r\n}\r\n\r\n\r\n\r\n","import React, {useRef} from \"react\";\r\nimport {ShowBsrDialog} from \"bsr-modaldialog\";\r\nimport {CodeSnippetJavaScript} from \"../../codeSnippetJavaScript\";\r\n\r\n/*-------------------------------------*/\r\nconst code = `\r\nimport React, {useRef} from \"react\";\r\nimport {ShowBsrDialog} from \"bsr-modaldialog\";\r\nimport 'bsr-modaldialog/dist/index.css'\r\n\r\nexport function P4_4() {\r\n    const mRefLabel = useRef();\r\n    return (\r\n        <>\r\n            <label ref={mRefLabel}></label>\r\n            <br/>\r\n           <button onClick={() => {\r\n                mRefLabel.current.innerText = ''\r\n                \r\n                ShowBsrDialog({\r\n                   \r\n                    styleHeader:{background:\"red\"},\r\n                    styleBody:{background:\"green\"},\r\n                    styleFooter:{background:\"yellow\"},\r\n                    style:{width:200},\r\n                  \r\n                    header: (<span style={{paddingLeft: 10}}>Dialog </span>),\r\n                    body: <span style={{paddingLeft: 10,color:\"red\"}}>Body click Esc</span>,\r\n                    buttons: [(<button data-mode={-1} data-focus={1}>close</button>)]\r\n                }).then(a => {\r\n                    mRefLabel.current.innerText = JSON.stringify(a)\r\n                })\r\n                \r\n            }}>show\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n\r\n`\r\n\r\n\r\n/*-------------------------------------*/\r\n\r\n\r\nexport default function P4_6() {\r\n    const mRefLabel = useRef();\r\n    return (\r\n        <>\r\n            <label ref={mRefLabel}></label>\r\n            <br/> <br/>\r\n            <button onClick={() => {\r\n                mRefLabel.current.innerText = ''\r\n                ShowBsrDialog({\r\n\r\n                    styleHeader:{background:\"red\"},\r\n                    styleBody:{background:\"green\"},\r\n                    styleFooter:{background:\"yellow\"},\r\n                    style:{width:200},\r\n\r\n                    header: (<span style={{paddingLeft: 10}}>Dialog </span>),\r\n                    body: <span style={{paddingLeft: 10,color:\"red\"}}>Body click Esc</span>,\r\n                    buttons: [(<button data-mode={-1} data-focus={1}>close</button>)]\r\n                }).then(a => {\r\n                    mRefLabel.current.innerText = JSON.stringify(a)\r\n                })\r\n            }}>show\r\n            </button>\r\n            <br/>\r\n            <div>\r\n                <CodeSnippetJavaScript code={code}/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n"],"names":["CodeSnippetJavaScript","_ref","code","_jsx","style","width","children","SyntaxHighlighter","language","myStyle","CodeSnippetCss","_ref2","CodeSnippetDotNet","_ref3","P4_6","mRefLabel","useRef","_jsxs","_Fragment","ref","onClick","current","innerText","ShowBsrDialog","styleHeader","background","styleBody","styleFooter","header","paddingLeft","body","color","buttons","then","a","JSON","stringify"],"sourceRoot":""}