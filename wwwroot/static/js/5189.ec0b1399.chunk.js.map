{"version":3,"file":"static/js/5189.ec0b1399.chunk.js","mappings":"wMAKA,MAAMA,EAAI,8/BAiDJC,EAAK,m4BAmCX,MAAMC,UAAmBC,EAAAA,GACrBC,WAAAA,CAAYC,GACRC,MAAMD,EACV,CAOAE,QAAAA,CAASC,GACN,OAAO,CACV,CAQAC,OAAAA,CAAQD,GAEJ,MAAO,CACHE,KAAM,aACNF,KAAMA,EAGd,CAEAG,SAAAA,CAAUH,GACNF,MAAMK,UAAUH,EACpB,CAGAI,MAAAA,GACI,OACIC,EAAAA,EAAAA,KAAA,UAAQC,QAASA,KACbC,KAAKJ,UAAU,MAAM,EACvBK,SAAC,0BAEX,EAGW,SAASC,IACpB,MAAMC,GAAYC,EAAAA,EAAAA,UAElB,OACIC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACII,EAAAA,EAAAA,MAAA,KAAAJ,SAAA,CAAG,eACYH,EAAAA,EAAAA,KAAA,SAAK,sBACEA,EAAAA,EAAAA,KAAA,SAAK,qBACNA,EAAAA,EAAAA,KAAA,SAAK,oBACNA,EAAAA,EAAAA,KAAA,SAAK,8BACKA,EAAAA,EAAAA,KAAA,SAAK,4BACPA,EAAAA,EAAAA,KAAA,aAE5BA,EAAAA,EAAAA,KAAA,SAAOS,UAAW,aAAeC,IAAKL,KAEtCL,EAAAA,EAAAA,KAAA,SAAK,KAACA,EAAAA,EAAAA,KAAA,UAENA,EAAAA,EAAAA,KAAA,UAAQC,QAASA,KACbI,EAAUM,QAAQC,UAAY,IAC9BC,EAAAA,EAAAA,IAAc,CACVC,OAAO,EACPC,QAASf,EAAAA,EAAAA,KAAA,QAAMgB,MAAO,CAACC,YAAa,IAAId,SAAC,qBACzCe,MAAMlB,EAAAA,EAAAA,KAACX,EAAU,IACjB8B,UAAW,CAACC,QAAS,IACrBC,QAAS,EACJrB,EAAAA,EAAAA,KAAA,UAAQ,YAAW,EAAEG,SAAC,QACtBH,EAAAA,EAAAA,KAAA,UAAQ,aAAY,EAAEG,SAAC,aAE7BmB,MAAKC,IACJlB,EAAUM,QAAQC,UAAYY,KAAKC,UAAUF,EAAE,GACjD,EACJpB,SAAC,UAEHH,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,OAAAG,UACIH,EAAAA,EAAAA,KAAC0B,EAAAA,GAAqB,CAACvC,KAAMA,OAEjCa,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,OAAAG,UACIH,EAAAA,EAAAA,KAAC0B,EAAAA,GAAqB,CAACvC,KAAMC,QAI7C,C","sources":["ViewStorage/menu/dialog/4-11.js"],"sourcesContent":["import React, {useRef} from \"react\";\r\nimport {ShowBsrDialog, BaseBodyDialog} from \"bsr-modaldialog\";\r\nimport {CodeSnippetJavaScript} from \"../../codeSnippetJavaScript\";\r\n\r\n/*-------------------------------------*/\r\nconst code = `\r\nimport React, {useRef} from \"react\";\r\nimport {ShowBsrDialog,BaseBodyDialog} from \"bsr-modaldialog\";\r\nimport 'bsr-modaldialog/dist/index.css'\r\n\r\nclass BodyDialog extends BaseBodyDialog {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    /**\r\n     * Checking the completion of data, making a decision to continue\r\n     * @param mode data-mode attribute value\r\n     * @returns {boolean} true - continue false break\r\n     */\r\n    validate(mode) {\r\n        return true\r\n    }\r\n\r\n\r\n    /**\r\n     * Receiving data from a dialog to pass it outside\r\n     * @param mode data-mode attribute value\r\n     * @returns {object} data body\r\n     */\r\n    getData(mode) {\r\n\r\n        return {\r\n            data: 'self close',\r\n            mode: mode\r\n        }\r\n\r\n    }\r\n\r\n    selfClose(mode) {\r\n        super.selfClose(mode);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <button onClick={() => {\r\n                this.selfClose('123')\r\n            }}> Self Close (mode:123)</button>\r\n        )\r\n    }\r\n}\r\n\r\n`\r\nconst code2 = `\r\n\r\nexport function P4_11() {\r\n    const mRefLabel = useRef();\r\n\r\n    return (\r\n        <>\r\n            <label ref={mRefLabel}></label>\r\n            <br/>\r\n\r\n            <button onClick={() => {\r\n                mRefLabel.current.innerText = ''\r\n                \r\n                ShowBsrDialog({\r\n                    modal: true,\r\n                    header: (<span style={{paddingLeft: 10}}>Dialog SelfClose</span>),\r\n                    body: <BodyDialog/>,\r\n                    styleBody: {padding: 20},\r\n                    buttons: [\r\n                        (<button data-mode={1}>ok</button>),\r\n                        (<button data-mode={-1}>close</button>)\r\n                    ]\r\n                }).then(a => {\r\n                    mRefLabel.current.innerText = JSON.stringify(a)\r\n                })\r\n                \r\n            }}>show\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n`\r\n\r\n\r\n/*-------------------------------------*/\r\nclass BodyDialog extends BaseBodyDialog {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    /**\r\n     * Checking the completion of data, making a decision to continue\r\n     * @param mode data-mode attribute value\r\n     * @returns {boolean} true - continue false break\r\n     */\r\n    validate(mode) {\r\n       return true\r\n    }\r\n\r\n\r\n    /**\r\n     * Receiving data from a dialog to pass it outside\r\n     * @param mode data-mode attribute value\r\n     * @returns {object} data body\r\n     */\r\n    getData(mode) {\r\n\r\n        return {\r\n            data: 'self close',\r\n            mode: mode\r\n        }\r\n\r\n    }\r\n\r\n    selfClose(mode) {\r\n        super.selfClose(mode);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <button onClick={() => {\r\n                this.selfClose('123')\r\n            }}> Self Close (mode:123)</button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default function P4_11() {\r\n    const mRefLabel = useRef();\r\n\r\n    return (\r\n        <>\r\n            <p>\r\n                Self close:<br/>\r\n                1. call SelfClose.<br/>\r\n                2. call validate.<br/>\r\n                3. call getData.<br/>\r\n                4. Formation of a promise.<br/>\r\n                5. Closing the dialogue.<br/>\r\n            </p>\r\n            <label className={'label-then'}  ref={mRefLabel}></label>\r\n\r\n            <br/> <br/>\r\n\r\n            <button onClick={() => {\r\n                mRefLabel.current.innerText = ''\r\n                ShowBsrDialog({\r\n                    modal: true,\r\n                    header: (<span style={{paddingLeft: 10}}>Dialog SelfClose</span>),\r\n                    body: <BodyDialog/>,\r\n                    styleBody: {padding: 20},\r\n                    buttons: [\r\n                        (<button data-mode={1}>ok</button>),\r\n                        (<button data-mode={-1}>close</button>)\r\n                    ]\r\n                }).then(a => {\r\n                    mRefLabel.current.innerText = JSON.stringify(a)\r\n                })\r\n            }}>show\r\n            </button>\r\n            <br/>\r\n            <div>\r\n                <CodeSnippetJavaScript code={code}/>\r\n            </div>\r\n            <br/>\r\n            <div>\r\n                <CodeSnippetJavaScript code={code2}/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n"],"names":["code","code2","BodyDialog","BaseBodyDialog","constructor","props","super","validate","mode","getData","data","selfClose","render","_jsx","onClick","this","children","P4_11","mRefLabel","useRef","_jsxs","_Fragment","className","ref","current","innerText","ShowBsrDialog","modal","header","style","paddingLeft","body","styleBody","padding","buttons","then","a","JSON","stringify","CodeSnippetJavaScript"],"sourceRoot":""}