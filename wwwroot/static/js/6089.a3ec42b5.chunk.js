"use strict";(self.webpackChunkionson100_github_io=self.webpackChunkionson100_github_io||[]).push([[6089],{6089:(e,n,t)=>{t.r(n),t.d(n,{default:()=>a});var s=t(65043),o=t(60913),i=t(6720),r=t(60184),c=t(1141),u=t(70579);const l='\nimport React, {useRef} from "react";\nimport {MenuItem, TreeMenu} from "bsr-tree-virtual";\nimport {CreateItem} from "bsr-tree-virtual";\nimport "bsr-tree-virtual/dist/index.css"\nimport {MdOutlineSubdirectoryArrowRight} from "react-icons/md";\nimport {FaRegMinusSquare, FaRegPlusSquare} from "react-icons/fa";\n\n\nfunction getListItem() {\n    const listItem: MenuItem[] = [];\n    const m = new MenuItem();\n    m.content = "root"\n    {\n        const sub_m = new MenuItem();\n        sub_m.content = "sub_item:1"\n        m.items?.push(sub_m)\n    }\n    {\n        const sub_m = new MenuItem();\n        sub_m.content = "sub_item:2"\n        m.items?.push(sub_m)\n    }\n\n    listItem.push(m)\n    return listItem;\n}\n\nexport default function P5_19() {\n    const mRefTree = useRef<InstanceType<typeof TreeMenu>>(null);\n   \n    return (\n        <div style={{width:600}} >\n            <TreeMenu\n                ref={mRefTree}\n                wight={600}\n                style={{marginTop:5}}\n                iconTree={<MdOutlineSubdirectoryArrowRight color={"black"} size={20}/>}\n                iconClose={<FaRegPlusSquare color={"black"} size={20}/>}\n                iconOpen={<FaRegMinusSquare color={"black"} size={20}/>}\n                items={getListItem()}\n                onClickMenuItem={(s,o)=>{\n                    console.log(\'clicked: \'+o.item.id)\n                }}\n            />\n            <br/>\n            <br/>\n            <button onClick={()=>{\n                const listItem=mRefTree.current.GetListItems()\n                const m=CreateItem({content:"add"})\n                listItem.push(m)\n                mRefTree.current.RefreshMenu()\n\n            }}>Add Items manual</button>\n            <button onClick={()=>{\n                mRefTree.current.DeleteAllItems()\n            }}>Delete all items</button>\n\n            <button onClick={()=>{\n               const newList:MenuItem[]=getListItem();\n               mRefTree.current.RewriteItems(...newList)\n            }}>Replaces list to now list</button>\n        </div>\n    )\n}\n\n';function m(){const e=[],n=new o.Dr;n.content="root";{var t;const e=new o.Dr;e.content="sub_item:1",null===(t=n.items)||void 0===t||t.push(e)}{var s;const e=new o.Dr;e.content="sub_item:2",null===(s=n.items)||void 0===s||s.push(e)}return e.push(n),e}function a(){const e=(0,s.useRef)(null);return(0,u.jsxs)("div",{style:{width:600},children:[(0,u.jsx)(o.sQ,{ref:e,wight:600,style:{marginTop:5},iconTree:(0,u.jsx)(i.UqJ,{color:"black",size:20}),iconClose:(0,u.jsx)(r.fFF,{color:"black",size:20}),iconOpen:(0,u.jsx)(r.vli,{color:"black",size:20}),items:m(),onClickMenuItem:(e,n)=>{console.log("clicked: "+n.item.id)}}),(0,u.jsx)("br",{}),(0,u.jsx)("button",{onClick:()=>{const n=e.current.GetListItems(),t=(0,o.iZ)({content:"add"});n.push(t),e.current.RefreshMenu()},children:"Add Items manual"}),(0,u.jsx)("button",{onClick:()=>{e.current.DeleteAllItems()},children:"Delete all items"}),(0,u.jsx)("button",{onClick:()=>{const n=m();e.current.RewriteItems(...n)},children:"Replaces list to now list"}),(0,u.jsx)("br",{}),(0,u.jsx)("div",{children:(0,u.jsx)(c.MM,{code:l})})]})}}}]);
//# sourceMappingURL=6089.a3ec42b5.chunk.js.map