{"version":3,"file":"static/js/3968.9399de08.chunk.js","mappings":"8LAIe,SAASA,IACpB,OAEIC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EAEIF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,8DAA0DC,EAAAA,EAAAA,KAAA,SAAK,iEACDA,EAAAA,EAAAA,KAAA,SAAK,iEAGtEA,EAAAA,EAAAA,KAAA,UAEAA,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACC,EAAAA,GAAiB,CAACC,KAAI,y/DAoFvC,C","sources":["ViewStorage/menu/orm/6-12.tsx"],"sourcesContent":["import {CodeSnippetDotNet} from \"../../codeSnippetJavaScript\";\r\nimport React from \"react\";\r\n\r\n\r\nexport default function P6_12() {\r\n    return (\r\n\r\n        <>\r\n\r\n            <p>In this example I connect to another database (Postgres), <br/>\r\n                create a table, and copy data from one database to another,  <br/>\r\n                the other database could be database: MySql, MSSQL, Sqlite</p>\r\n\r\n            <br/>\r\n\r\n            <div>\r\n                <CodeSnippetDotNet code={` internal class Super\r\n {\r\n     [MapPrimaryKey(\"id\", Generator.Assigned)]\r\n     public Guid Id { get; set; } = Guid.NewGuid();\r\n\r\n     [MapColumn(\"name\")] \r\n     public string Name { get; set; }\r\n\r\n     [MapColumn(\"age\")] \r\n     public int Age { get; set; }\r\n\r\n }\r\n\r\n [MapTable(\"table_12\")]\r\n internal class Table1 : Super\r\n {\r\n }\r\n\r\n [MapTable(\"table_12\")]\r\n internal class Table2 : Super\r\n {\r\n   \r\n }\r\n\r\n public class MyDbPostgres : IOtherDataBaseFactory\r\n {\r\n     private static readonly Lazy<DbProviderFactory> DbProviderFactory =\r\n         new Lazy<DbProviderFactory>(() => Npgsql.NpgsqlFactory.Instance);\r\n     public ProviderName GetProviderName()\r\n     {\r\n         return ProviderName.PostgreSql;\r\n     }\r\n     public string GetConnectionString()\r\n     {\r\n         return \"Server=localhost;Port=5432;Database=test123_1;User Id=postgres;Password=postgres;\";\r\n     }\r\n\r\n     public DbProviderFactory GetDbProviderFactories()\r\n     {\r\n         return DbProviderFactory.Value;\r\n     }\r\n }\r\n \r\n //---------------------------------//\r\n \r\nusing ORM_1_21_;\r\n \r\nstring? path = null;\r\n#if DEBUG\r\npath = \"SqlLog.txt\";\r\n#endif\r\nvar _ = new Configure(\"Server=localhost;Port=5432;Database=test123;User Id=postgres;Password=postgres;\",\r\n    ProviderName.PostgreSql, path);\r\n\r\n// create table from database:test123\r\nusing var session = Configure.Session;\r\nsession.DropTableIfExists<Table1>();\r\nsession.TableCreate<Table1>();\r\n\r\n// create table from database:test123_1\r\nusing var sessionOther = Configure.GetSession<MyDbPostgres>();\r\nsessionOther.DropTableIfExists<Table2>();\r\nsessionOther.TableCreate<Table2>();\r\n\r\n// insert data to table database test123\r\nfor (int i = 0; i < 10; i++)\r\n{\r\n    session.Insert(new Table1 { Name = $\"Name_{i}\", Age = 10 + i });\r\n}\r\n\r\nvar listTable1 = session.Query<Table1>().ToList();\r\n\r\n//Copying data from one database to another\r\nforeach (Table1 table1 in listTable1)\r\n{\r\n    sessionOther.Insert(new Table2 { Name = table1.Name,Age = table1.Age });\r\n}\r\nvar listTable2=sessionOther.Query<Table2>().ToList();`}/>\r\n            </div>\r\n\r\n        </>\r\n\r\n\r\n    )\r\n}"],"names":["P6_12","_jsxs","_Fragment","children","_jsx","CodeSnippetDotNet","code"],"sourceRoot":""}