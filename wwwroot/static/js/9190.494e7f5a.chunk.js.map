{"version":3,"file":"static/js/9190.494e7f5a.chunk.js","mappings":"8LAIe,SAASA,IACpB,OAEIC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,MAAA,WAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,WAASC,MAAO,CAACC,OAAO,WAAWH,SAAC,mBACpCC,EAAAA,EAAAA,KAAA,OAAAD,UAEIC,EAAAA,EAAAA,KAACG,EAAAA,GAAqB,CAACC,KAAM,g2IAyIrCJ,EAAAA,EAAAA,KAAA,UACAH,EAAAA,EAAAA,MAAA,WAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,WAASC,MAAO,CAACC,OAAO,WAAWH,SAAC,mBACpCC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACK,EAAAA,GAAiB,CAACD,KAAM,y5BAkCjCJ,EAAAA,EAAAA,KAAA,UACAH,EAAAA,EAAAA,MAAA,WAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,WAASC,MAAO,CAACC,OAAO,WAAWH,SAAC,sBACpCC,EAAAA,EAAAA,KAAA,OAAAD,UAEIC,EAAAA,EAAAA,KAACM,EAAAA,GAAe,CAACF,KAAM,qkGAwJ3C,C","sources":["ViewStorage/menu/orm/6-18.tsx"],"sourcesContent":["import {CodeSnippetDotNet, CodeSnippetJavaScript, CodeSnippetJson} from \"../../codeSnippetJavaScript\";\r\nimport React from \"react\";\r\n\r\n\r\nexport default function P6_18() {\r\n    return (\r\n\r\n        <>\r\n            <details>\r\n                <summary style={{cursor:\"pointer\"}}>Source client</summary>\r\n                <div>\r\n\r\n                    <CodeSnippetJavaScript code={`import {Component} from \"react\";\r\nimport React from \"react\";\r\nimport Map from 'ol/Map.js';\r\nimport View from 'ol/View.js';\r\nimport {\r\n    Circle as CircleStyle,\r\n    Fill,\r\n    Style,\r\n    Text,\r\n} from 'ol/style.js';\r\nimport {Cluster, OSM, Vector as VectorSource} from 'ol/source.js';\r\nimport {Tile as TileLayer, Vector as VectorLayer} from 'ol/layer.js';\r\nimport {Icon, Stroke} from \"ol/style\";\r\nimport {GeoJSON} from \"ol/format\";\r\nimport {json} from \"./map/features\"\r\nimport {boundingExtent} from 'ol/extent.js';\r\n\r\nconst canvasE=(w)=>{\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = w+20;\r\n    canvas.height = 20;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.fillStyle = 'yellow';\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    return canvas;\r\n}\r\n\r\n\r\nexport default class MyMap extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.source = new VectorSource({});\r\n        this.raster = new TileLayer({\r\n            source: new OSM(),\r\n        });\r\n        this.clusterSource = new Cluster({\r\n            distance: 60,\r\n            minDistance: 0,\r\n            source: this.source,\r\n        });\r\n        this.clusters = new VectorLayer({\r\n            source: this.clusterSource,\r\n            style: this.styleFunction,\r\n        });\r\n        this.map = new Map({\r\n            layers: [this.raster, this.clusters],\r\n            view: new View({\r\n                center: [1608429.01, 6461053.51],\r\n                zoom: 14.34,\r\n            }),\r\n        });\r\n        this.map.on(\"pointermove\", function (evt) {\r\n            const hit = this.forEachFeatureAtPixel(evt.pixel, function (feature, layer) {\r\n                return true;\r\n            });\r\n            if (hit) {\r\n                this.getTargetElement().style.cursor = 'pointer';\r\n            } else {\r\n                this.getTargetElement().style.cursor = '';\r\n            }\r\n        });\r\n        this.map.on('click', (e) => {\r\n            this.clusters.getFeatures(e.pixel).then((clickedFeatures) => {\r\n                if (clickedFeatures.length) {\r\n                    // Get clustered Coordinates\r\n                    const features = clickedFeatures[0].get('features');\r\n                    if (features.length > 1) {\r\n                        const extent = boundingExtent(\r\n                            features.map((r) => r.getGeometry().getCoordinates())\r\n                        );\r\n                        this.map.getView().fit(extent, {duration: 300, padding: [300, 300, 300, 300]});\r\n                    }else {\r\n                        alert('client id:'+ features[0].get('id')} +'\\\\nprice:      '+features[0].get('price'))\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    styleFunction(feature) {\r\n        const size = feature.get('features').length;\r\n        if (size > 1) {\r\n            return new Style({\r\n                image: new CircleStyle({\r\n                    radius: 20,\r\n                    fill: new Fill({\r\n                        color: 'rgb(61,88,224)',\r\n                    }),\r\n                }),\r\n                text: new Text({\r\n                    text: size.toString(),\r\n                    font: 'bold 15px sans-serif',\r\n                    fill: new Fill({\r\n                        color: 'rgba(248,245,215,0.94)'\r\n                    })\r\n                }),\r\n            });\r\n        } else {\r\n            const originalFeature = feature.get('features')[0];\r\n            const str = originalFeature.get('price');\r\n            let w=str.length*5.5;\r\n            return new Style({\r\n                image: new Icon({\r\n                    img: canvasE(w)\r\n                }),\r\n                text: new Text({\r\n                    text: str,\r\n                    font: 'bold 15px Calibri,sans-serif',\r\n                    fill: new Fill({\r\n                        color: 'black',\r\n                    }),\r\n                }),\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.map.setTarget('my-map')\r\n         fetch('GetFeatures').then(response=>{\r\n             const format = new GeoJSON();\r\n             const features = format.readFeatures(response.json());\r\n             this.source.addFeatures(features)\r\n         })\r\n    }\r\n\r\n    render() {\r\n        return (<div style={{width: \"100%\", height: \"100%\"}} id={'my-map'}></div>)\r\n    }\r\n}`}/>\r\n                </div>\r\n            </details>\r\n\r\n            <br/>\r\n            <details>\r\n                <summary style={{cursor:\"pointer\"}}>Source server</summary>\r\n                <div>\r\n                    <CodeSnippetDotNet code={`[MapTable(\"sale_map\")]\r\nclass SaleMap\r\n{\r\n    [MapPrimaryKey(\"id\", Generator.Assigned)]\r\n    public Guid Id { get; set; } = Guid.NewGuid();\r\n\r\n    [MapColumn(\"price\")]\r\n    public decimal Price { get; set; }\r\n\r\n    [MapColumn(\"id_p\")]\r\n    public Guid PublicId { get; set; }\r\n\r\n    [MapColumn(\"geo_shape\")] public IGeoShape Shape { get; set; }\r\n\r\n}\r\n\r\nasync Task<string> GetFeatures()\r\n{\r\n    using var session = await Configure.SessionAsync;\r\n    var listSale = await session.Query<SaleMap>().ToListAsync();\r\n    List<object> listFeature = new(listSale.Count);\r\n    foreach (SaleMap saleMap in listSale)\r\n    {\r\n        string p = $\"{saleMap.Price:C0}\";\r\n        listFeature.Add(saleMap.Shape.GetGeoJson(new { id = saleMap.PublicId.ToString(), price = p }));\r\n    }\r\n    var collection = FactoryGeo.GetFeatureCollection(listFeature);\r\n    var res = JsonConvert.SerializeObject(collection);\r\n    return res;\r\n}`}/>\r\n\r\n                </div>\r\n            </details>\r\n\r\n            <br/>\r\n            <details>\r\n                <summary style={{cursor:\"pointer\"}}>GeoJson Features</summary>\r\n                <div>\r\n\r\n                    <CodeSnippetJson code={`{\r\n  \"type\": \"FeatureCollection\",\r\n  \"features\": [\r\n    {\r\n      \"type\": \"Feature\",\r\n      \"geometry\": {\r\n        \"type\": \"Point\",\r\n        \"coordinates\": [\r\n          1608195.40566334,\r\n          6461203.24980751\r\n        ]\r\n      },\r\n      \"properties\": {\r\n        \"id\": \"1e62e9ad-9575-4641-a25a-f2870412adc1\",\r\n        \"price\": \"$357,001\"\r\n      }\r\n    },\r\n    {\r\n      \"type\": \"Feature\",\r\n      \"geometry\": {\r\n        \"type\": \"Point\",\r\n        \"coordinates\": [\r\n          1606073.01192508,\r\n          6463206.85285146\r\n        ]\r\n      },\r\n      \"properties\": {\r\n        \"id\": \"8985a34d-3b4e-4f9d-854b-ed6d67e7d58e\",\r\n        \"price\": \"$90,864\"\r\n      }\r\n    },\r\n    {\r\n      \"type\": \"Feature\",\r\n      \"geometry\": {\r\n        \"type\": \"Point\",\r\n        \"coordinates\": [\r\n          1606397.70648952,\r\n          6463191.01409222\r\n        ]\r\n      },\r\n      \"properties\": {\r\n        \"id\": \"42370d22-8bc8-44d6-ae5f-4ab5b1f7ea69\",\r\n        \"price\": \"$469,839\"\r\n      }\r\n    },\r\n    {\r\n      \"type\": \"Feature\",\r\n      \"geometry\": {\r\n        \"type\": \"Point\",\r\n        \"coordinates\": [\r\n          1606627.36849851,\r\n          6463396.91796235\r\n        ]\r\n      },\r\n      \"properties\": {\r\n        \"id\": \"ac6ccb88-9c4f-4252-9cdb-ca4e58ddd5bd\",\r\n        \"price\": \"$138,881\"\r\n      }\r\n    },\r\n    {\r\n      \"type\": \"Feature\",\r\n      \"geometry\": {\r\n        \"type\": \"Point\",\r\n        \"coordinates\": [\r\n          1606967.90182219,\r\n          6463682.01562868\r\n        ]\r\n      },\r\n      \"properties\": {\r\n        \"id\": \"da7c4d67-b3ec-4960-812f-38dd024f69bd\",\r\n        \"price\": \"$11,824\"\r\n      }\r\n    },\r\n    {\r\n      \"type\": \"Feature\",\r\n      \"geometry\": {\r\n        \"type\": \"Point\",\r\n        \"coordinates\": [\r\n          1606999.57934067,\r\n          6463301.8854069\r\n        ]\r\n      },\r\n      \"properties\": {\r\n        \"id\": \"42a8c98f-e114-4eb1-a67f-81de57e69635\",\r\n        \"price\": \"$39,236\"\r\n      }\r\n    },\r\n    {\r\n      \"type\": \"Feature\",\r\n      \"geometry\": {\r\n        \"type\": \"Point\",\r\n        \"coordinates\": [\r\n          1606714.48167433,\r\n          6462319.88233398\r\n        ]\r\n      },\r\n      \"properties\": {\r\n        \"id\": \"4ec64f60-f820-4232-9b03-75308a66a30c\",\r\n        \"price\": \"$90,665\"\r\n      }\r\n    },\r\n    {\r\n      \"type\": \"Feature\",\r\n      \"geometry\": {\r\n        \"type\": \"Point\",\r\n        \"coordinates\": [\r\n          1607245.0801089,\r\n          6462288.2048155\r\n        ]\r\n      },\r\n      \"properties\": {\r\n        \"id\": \"70f4853d-9c6f-4379-b7e7-246ead4d2c31\",\r\n        \"price\": \"$351,594\"\r\n      }\r\n    },\r\n    {\r\n      \"type\": \"Feature\",\r\n      \"geometry\": {\r\n        \"type\": \"Point\",\r\n        \"coordinates\": [\r\n          1606532.33594307,\r\n          6462058.54280651\r\n        ]\r\n      },\r\n      \"properties\": {\r\n        \"id\": \"c845f1ae-23ae-415f-9a00-2d94cbaa92f4\",\r\n        \"price\": \"$124,766\"\r\n      }\r\n    },\r\n    {\r\n      \"type\": \"Feature\",\r\n      \"geometry\": {\r\n        \"type\": \"Point\",\r\n        \"coordinates\": [\r\n          1607878.63047853,\r\n          6460767.68392839\r\n        ]\r\n      },\r\n      \"properties\": {\r\n        \"id\": \"040dacc3-096a-422f-a553-82eddb110bba\",\r\n        \"price\": \"$43,764\"\r\n      }\r\n    }\r\n  ]\r\n}`}/>\r\n                </div>\r\n            </details>\r\n\r\n        </>\r\n\r\n\r\n    )\r\n}"],"names":["P6_18","_jsxs","_Fragment","children","_jsx","style","cursor","CodeSnippetJavaScript","code","CodeSnippetDotNet","CodeSnippetJson"],"sourceRoot":""}