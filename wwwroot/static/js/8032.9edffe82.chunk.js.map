{"version":3,"file":"static/js/8032.9edffe82.chunk.js","mappings":"8NASA,MAAMA,EAAK,0iFA4EX,SAASC,IACL,MAAMC,EAAuB,GACvBC,EAAI,IAAIC,EAAAA,GACdD,EAAEE,QAAU,OACZ,CAAC,IAADC,EACI,MAAMC,EAAQ,IAAIH,EAAAA,GAClBG,EAAMF,QAAU,WACT,QAAPC,EAAAH,EAAEK,aAAK,IAAAF,GAAPA,EAASG,KAAKF,EAClB,CACA,CAAC,IAADG,EACI,MAAMH,EAAQ,IAAIH,EAAAA,GAClBG,EAAMF,QAAU,WACT,QAAPK,EAAAP,EAAEK,aAAK,IAAAE,GAAPA,EAASD,KAAKF,EAClB,CAGA,OADAL,EAASO,KAAKN,GACPD,CACX,CAEe,SAASS,IACpB,MAAMC,GAAWC,EAAAA,EAAAA,QAAsC,MACjDC,GAAUD,EAAAA,EAAAA,QAAyB,MACzC,OACIE,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAACC,MAAM,KAAKC,SAAA,EACpBC,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CACLC,IAAKT,EACLU,MAAO,IACPN,MAAO,CAACO,UAAU,GAClBC,UAAUL,EAAAA,EAAAA,KAACM,EAAAA,IAA+B,CAACC,MAAO,QAASC,KAAM,KACjEC,WAAWT,EAAAA,EAAAA,KAACU,EAAAA,IAAe,CAACH,MAAO,QAASC,KAAM,KAClDG,UAAUX,EAAAA,EAAAA,KAACY,EAAAA,IAAgB,CAACL,MAAO,QAASC,KAAM,KAClDnB,MAAOP,IACP+B,gBAAiBA,CAACC,EAAEC,KAChBpB,EAAUqB,QAASC,MAAMF,EAAEG,KAAMC,EAAE,KAG3CnB,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,SAAAD,SAAO,SACPC,EAAAA,EAAAA,KAAA,SAAOE,IAAKP,EAAWyB,KAAM,OAAQvB,MAAO,CAACC,MAAM,IAAIuB,SAAS,OAChErB,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UAAQsB,QAASA,KACb,MAAMtC,EAAI,IAAIC,EAAAA,GAAS,SACvBD,EAAEa,MAAQ,CAACU,MAAO,MAAOgB,WAAY,QACrCvC,EAAEwC,QAAQ,IAAIvC,EAAAA,GAAS,YAClBuC,QAAQ,IAAIvC,EAAAA,GAAS,gBACjBuC,QAAQ,IAAIvC,EAAAA,GAAS,SACjBuC,QAAQ,IAAIvC,EAAAA,GAAS,aACjBuC,QAAQ,IAAIvC,EAAAA,GAAS,WACtCQ,EAASuB,QAASS,SAASzC,GAC3BW,EAAUqB,QAASC,MAAM,EAAE,EAC7BlB,SAAC,eACHC,EAAAA,EAAAA,KAAA,UAAQsB,QAASA,KACT3B,EAAUqB,QAASC,OAIvBxB,EAASuB,QAASU,WAAW/B,EAAUqB,QAASC,OAChDtB,EAAUqB,QAASC,MAAM,IAJrBU,MAAM,cAIiB,EAC7B5B,SAAC,kBACHC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAC4B,EAAAA,GAAqB,CAAC/C,KAAMA,QAI7C,C","sources":["ViewStorage/menu/bsrtree/5-14.tsx"],"sourcesContent":["import React, {useRef} from \"react\";\r\nimport {MenuItem, TreeMenu} from \"bsr-tree-virtual\";\r\nimport {MdOutlineSubdirectoryArrowRight} from \"react-icons/md\";\r\nimport {FaRegMinusSquare, FaRegPlusSquare} from \"react-icons/fa\";\r\nimport {CodeSnippetJavaScript} from \"../../codeSnippetJavaScript\";\r\nimport {CreateItem} from \"bsr-left-sidebar\";\r\nimport { LiaElementor } from \"react-icons/lia\";\r\n\r\n/**----------------------------------------**/\r\nconst code=`\r\nimport React, {useRef} from \"react\";\r\nimport {MenuItem, TreeMenu} from \"bsr-tree-virtual\";\r\nimport \"bsr-tree-virtual/dist/index.css\"\r\nimport {MdOutlineSubdirectoryArrowRight} from \"react-icons/md\";\r\nimport {FaRegMinusSquare, FaRegPlusSquare} from \"react-icons/fa\";\r\nimport {CodeSnippetJavaScript} from \"../../codeSnippetJavaScript\";\r\n\r\nfunction getListItem() {\r\n    const listItem: MenuItem[] = [];\r\n    const m = new MenuItem();\r\n    m.content = \"root\"\r\n    {\r\n        const sub_m = new MenuItem();\r\n        sub_m.content = \"sub_item\"\r\n        m.items?.push(sub_m)\r\n    }\r\n    {\r\n        const sub_m = new MenuItem();\r\n        sub_m.content = \"sub_item\"\r\n        m.items?.push(sub_m)\r\n    }\r\n\r\n    listItem.push(m)\r\n    return listItem;\r\n}\r\nexport default function P5_14() {\r\n    const mRefTree = useRef<InstanceType<typeof TreeMenu>>(null);\r\n    const mRefInput=useRef<HTMLInputElement>(null)\r\n    return (\r\n        <div style={{width:600}} >\r\n            <TreeMenu\r\n                ref={mRefTree}\r\n                wight={600}\r\n                style={{marginTop:5}}\r\n                iconTree={<MdOutlineSubdirectoryArrowRight color={\"black\"} size={20}/>}\r\n                iconClose={<FaRegPlusSquare color={\"black\"} size={20}/>}\r\n                iconOpen={<FaRegMinusSquare color={\"black\"} size={20}/>}\r\n                items={getListItem()}\r\n                onClickMenuItem={(s,o)=>{\r\n                    mRefInput.current.value=o.item.id\r\n                }}\r\n            />\r\n            <br/>\r\n            <label>id:</label>\r\n            <input ref={mRefInput} type={'text'} style={{width:300,fontSize:18}}/>\r\n            <br/>\r\n            <br/>\r\n            <button onClick={()=>{\r\n                const m = new MenuItem('Addin');\r\n                m.style = {color: \"red\", fontWeight: \"bold\"}\r\n                m.AddItem(new MenuItem('sub_test')\r\n                    .AddItem(new MenuItem('sub_sub_test')\r\n                        .AddItem(new MenuItem('final')\r\n                            .AddItem(new MenuItem('sub_final')\r\n                                .AddItem(new MenuItem('45'))))));\r\n                mRefTree.current.AddItems(m)\r\n                mRefInput.current.value=''\r\n            }}> Add item</button>\r\n            <button onClick={()=>{\r\n                if(!mRefInput.current.value){\r\n                    alert('id is empty')\r\n                    return\r\n                }\r\n                mRefTree.current.DeleteItem(mRefInput.current.value)\r\n                mRefInput.current.value=''\r\n            }}>Delete by id</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n`\r\n\r\n/**----------------------------------------**/\r\n\r\nfunction getListItem() {\r\n    const listItem: MenuItem[] = [];\r\n    const m = new MenuItem();\r\n    m.content = \"root\"\r\n    {\r\n        const sub_m = new MenuItem();\r\n        sub_m.content = \"sub_item\"\r\n        m.items?.push(sub_m)\r\n    }\r\n    {\r\n        const sub_m = new MenuItem();\r\n        sub_m.content = \"sub_item\"\r\n        m.items?.push(sub_m)\r\n    }\r\n\r\n    listItem.push(m)\r\n    return listItem;\r\n}\r\n\r\nexport default function P5_14() {\r\n    const mRefTree = useRef<InstanceType<typeof TreeMenu>>(null);\r\n    const mRefInput=useRef<HTMLInputElement>(null)\r\n    return (\r\n        <div style={{width:600}} >\r\n            <TreeMenu\r\n                ref={mRefTree}\r\n                wight={600}\r\n                style={{marginTop:5}}\r\n                iconTree={<MdOutlineSubdirectoryArrowRight color={\"black\"} size={20}/>}\r\n                iconClose={<FaRegPlusSquare color={\"black\"} size={20}/>}\r\n                iconOpen={<FaRegMinusSquare color={\"black\"} size={20}/>}\r\n                items={getListItem()}\r\n                onClickMenuItem={(s,o)=>{\r\n                    mRefInput.current!.value=o.item!.id\r\n                }}\r\n            />\r\n            <br/>\r\n            <label>id:</label>\r\n            <input ref={mRefInput} type={'text'} style={{width:300,fontSize:18}}/>\r\n            <br/>\r\n            <br/>\r\n            <button onClick={()=>{\r\n                const m = new MenuItem('Addin');\r\n                m.style = {color: \"red\", fontWeight: \"bold\"}\r\n                m.AddItem(new MenuItem('sub_test')\r\n                    .AddItem(new MenuItem('sub_sub_test')\r\n                        .AddItem(new MenuItem('final')\r\n                            .AddItem(new MenuItem('sub_final')\r\n                                .AddItem(new MenuItem('45'))))));\r\n                mRefTree.current!.AddItems(m)\r\n                mRefInput.current!.value=''\r\n            }}> Add item</button>\r\n            <button onClick={()=>{\r\n                if(!mRefInput.current!.value){\r\n                    alert('id is empty')\r\n                    return\r\n                }\r\n                mRefTree.current!.DeleteItem(mRefInput.current!.value)\r\n                mRefInput.current!.value=''\r\n            }}>Delete by id</button>\r\n            <br/>\r\n            <div>\r\n                <CodeSnippetJavaScript code={code}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n"],"names":["code","getListItem","listItem","m","MenuItem","content","_m$items","sub_m","items","push","_m$items2","P5_14","mRefTree","useRef","mRefInput","_jsxs","style","width","children","_jsx","TreeMenu","ref","wight","marginTop","iconTree","MdOutlineSubdirectoryArrowRight","color","size","iconClose","FaRegPlusSquare","iconOpen","FaRegMinusSquare","onClickMenuItem","s","o","current","value","item","id","type","fontSize","onClick","fontWeight","AddItem","AddItems","DeleteItem","alert","CodeSnippetJavaScript"],"sourceRoot":""}