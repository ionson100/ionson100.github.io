{"version":3,"file":"static/js/468.aa7fb194.chunk.js","mappings":"wOACA,SACEA,WAFiC,qBAAXC,QAA0BA,OAAOD,YAAcC,OAAOD,WAAWE,KAAKD,SCI9F,IAAIE,EACAC,EAAQ,IAAIC,WAAW,IACZ,SAASC,IAEtB,IAAKH,KAEHA,EAAoC,qBAAXF,QAA0BA,OAAOE,iBAAmBF,OAAOE,gBAAgBD,KAAKD,SAEvG,MAAM,IAAIM,MAAM,4GAGpB,OAAOJ,EAAgBC,EACzB,CCTA,IADA,IAAII,EAAY,GACPC,EAAI,EAAGA,EAAI,MAAOA,EACzBD,EAAUE,MAAMD,EAAI,KAAOE,SAAS,IAAIC,MAAM,IAEzC,SAASC,EAAgBC,GAAiB,IAAZC,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAM5C,OAAQR,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAM,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAM,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAM,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAM,IAAMP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,MAAMI,aACvf,CCOA,QArBA,SAAYC,EAASC,EAAKN,GACxB,GAAIO,EAAOtB,aAAeqB,IAAQD,EAChC,OAAOE,EAAOtB,aAGhB,IAAIuB,GADJH,EAAUA,GAAW,CAAC,GACHI,SAAWJ,EAAQd,KAAOA,KAO7C,GAJAiB,EAAK,GAAe,GAAVA,EAAK,GAAY,GAC3BA,EAAK,GAAe,GAAVA,EAAK,GAAY,IAGvBF,EAAK,CACPN,EAASA,GAAU,EACnB,IAAK,IAAIN,EAAI,EAAGA,EAAI,KAAMA,EACxBY,EAAIN,EAASN,GAAKc,EAAKd,GAEzB,OAAOY,CACT,CACA,OAAOR,EAAgBU,EACzB,E,eCZA,MAAME,EAAI,utEAuEV,SAASC,IACL,MAAMC,EAAuB,GACvBC,EAAI,IAAIC,EAAAA,GACdD,EAAEE,QAAU,OACZ,CAAC,IAADC,EACI,MAAMC,EAAQ,IAAIH,EAAAA,GAClBG,EAAMF,QAAU,aACT,QAAPC,EAAAH,EAAEK,aAAK,IAAAF,GAAPA,EAASrB,KAAKsB,EAClB,CACA,CAAC,IAADE,EACI,MAAMF,EAAQ,IAAIH,EAAAA,GAClBG,EAAMF,QAAU,aACT,QAAPI,EAAAN,EAAEK,aAAK,IAAAC,GAAPA,EAASxB,KAAKsB,EAClB,CAGA,OADAL,EAASjB,KAAKkB,GACPD,CACX,CAEe,SAASQ,IACpB,MAAMC,GAAWC,EAAAA,EAAAA,QAAsC,MAEvD,OACIC,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAACC,MAAO,KAAKC,SAAA,EACrBC,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CACLC,IAAKR,EACLS,aAAa,EACbC,MAAO,IACPP,MAAO,CAACQ,UAAW,GACnBC,UAAUN,EAAAA,EAAAA,KAACO,EAAAA,IAA+B,CAACC,MAAO,QAASC,KAAM,KACjEC,WAAWV,EAAAA,EAAAA,KAACW,EAAAA,IAAe,CAACH,MAAO,QAASC,KAAM,KAClDG,UAAUZ,EAAAA,EAAAA,KAACa,EAAAA,IAAgB,CAACL,MAAO,QAASC,KAAM,KAClDlB,MAAOP,IACP8B,gBAAiBA,CAACC,EAAGC,KACjBC,QAAQC,IAAI,YAAcF,EAAEG,KAAMC,GAAG,KAG7CpB,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,KAAAD,SAAG,iCACHC,EAAAA,EAAAA,KAAA,UAAQqB,QAASA,KAAO,IAADC,EACnB,MAAMC,EAAO,IAAIpC,EAAAA,GACjBoC,EAAKC,MAAOxB,EAAAA,EAAAA,KAACyB,EAAAA,IAAW,CAACjB,MAAO,SAChCe,EAAKnC,SAAUY,EAAAA,EAAAA,KAAA,OAAAD,SAAK,UACpBwB,EAAKH,GAAKM,IACVH,EAAK1B,MAAQ,CAACW,MAAO,MAAMmB,WAAW,QACtCJ,EAAKK,UAAY,KACjBL,EAAKM,MAAQ,QACbN,EAAKO,IAAM,0BACXP,EAAKQ,OAAS,SACdR,EAAKS,QAAO,EACZT,EAAKU,UAAS,EACJ,QAAVX,EAAAC,EAAKhC,aAAK,IAAA+B,GAAVA,EAAYtD,MAAKkE,EAAAA,EAAAA,IAAW,CAAC9C,QAAS,MAAM6C,UAAS,KACrDvC,EAASyC,QAASC,SAASb,EAAK,EAClCxB,SAAC,cAGHC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACqC,EAAAA,GAAqB,CAACtD,KAAMA,QAI7C,C","sources":["../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js","ViewStorage/menu/bsrtree/5-30.tsx"],"sourcesContent":["var randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  //\n  // Note to future-self: No, you can't remove the `toLowerCase()` call.\n  // REF: https://github.com/uuidjs/uuid/pull/677#issuecomment-1757351351\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n  var uuid = unsafeStringify(arr, offset);\n  // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n  return uuid;\n}\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    offset = offset || 0;\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n    return buf;\n  }\n  return unsafeStringify(rnds);\n}\nexport default v4;","import React, {useRef} from \"react\";\r\nimport {MenuItem, TreeMenu} from \"bsr-tree-virtual\";\r\nimport {MdOutlineSubdirectoryArrowRight} from \"react-icons/md\";\r\nimport {FaRegMinusSquare, FaRegPlusSquare} from \"react-icons/fa\";\r\nimport {CodeSnippetJavaScript} from \"../../codeSnippetJavaScript\";\r\nimport {CreateItem} from \"bsr-left-sidebar\";\r\nimport {LiaElementor} from \"react-icons/lia\";\r\nimport {CgMenuBoxed} from \"react-icons/cg\";\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\n/**----------------------------------------**/\r\nconst code = `\r\nimport React, {useRef} from \"react\";\r\nimport {MenuItem, TreeMenu} from \"bsr-tree-virtual\";\r\nimport \"bsr-tree-virtual/dist/index.css\"\r\nimport {MdOutlineSubdirectoryArrowRight} from \"react-icons/md\";\r\nimport {FaRegMinusSquare, FaRegPlusSquare} from \"react-icons/fa\";\r\nimport {CodeSnippetJavaScript} from \"../../codeSnippetJavaScript\";\r\n\r\nfunction getListItem() {\r\n    const listItem: MenuItem[] = [];\r\n    const m = new MenuItem();\r\n    m.content = \"root\"\r\n    {\r\n        const sub_m = new MenuItem();\r\n        sub_m.content = \"sub_item:1\"\r\n        m.items?.push(sub_m)\r\n    }\r\n    {\r\n        const sub_m = new MenuItem();\r\n        sub_m.content = \"sub_item:2\"\r\n        m.items?.push(sub_m)\r\n    }\r\n\r\n    listItem.push(m)\r\n    return listItem;\r\n}\r\nexport default function P5_30() {\r\n    const mRefTree = useRef<InstanceType<typeof TreeMenu>>(null);\r\n\r\n    return (\r\n        <div style={{width: 600}}>\r\n            <TreeMenu\r\n                ref={mRefTree}\r\n                wight={600}\r\n                style={{marginTop: 5}}\r\n                iconTree={<MdOutlineSubdirectoryArrowRight color={\"black\"} size={20}/>}\r\n                iconClose={<FaRegPlusSquare color={\"black\"} size={20}/>}\r\n                iconOpen={<FaRegMinusSquare color={\"black\"} size={20}/>}\r\n                items={getListItem()}\r\n                onClickMenuItem={(s, o) => {\r\n                    console.log('clicked: ' + o.item.id)\r\n                }}\r\n            />\r\n            <br/>\r\n            <p>press the key Alt+Shift+2+2</p>\r\n            <button onClick={() => {\r\n                const menu = new MenuItem()\r\n                menu.icon = <CgMenuBoxed color={'blue'}/>\r\n                menu.content = <div>added</div>\r\n                menu.id = uuidv4();\r\n                menu.style = {color: \"red\",fontWeight:\"bold\"}\r\n                menu.accessKey = \"22\"\r\n                menu.title = 'added'\r\n                menu.url = 'https://www.google.com/'\r\n                menu.target = '_blank'\r\n                menu.isOpen=true;\r\n                menu.selected=true;\r\n                menu.items?.push(CreateItem({content: \"sub\",selected:true}))\r\n                mRefTree.current.AddItems(menu)\r\n            }}>Add Item\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n`\r\n\r\n/**----------------------------------------**/\r\n\r\nfunction getListItem() {\r\n    const listItem: MenuItem[] = [];\r\n    const m = new MenuItem();\r\n    m.content = \"root\"\r\n    {\r\n        const sub_m = new MenuItem();\r\n        sub_m.content = \"sub_item:1\"\r\n        m.items?.push(sub_m)\r\n    }\r\n    {\r\n        const sub_m = new MenuItem();\r\n        sub_m.content = \"sub_item:2\"\r\n        m.items?.push(sub_m)\r\n    }\r\n\r\n    listItem.push(m)\r\n    return listItem;\r\n}\r\n\r\nexport default function P5_30() {\r\n    const mRefTree = useRef<InstanceType<typeof TreeMenu>>(null);\r\n\r\n    return (\r\n        <div style={{width: 600}}>\r\n            <TreeMenu\r\n                ref={mRefTree}\r\n                useCheckBox={true}\r\n                wight={600}\r\n                style={{marginTop: 5}}\r\n                iconTree={<MdOutlineSubdirectoryArrowRight color={\"black\"} size={20}/>}\r\n                iconClose={<FaRegPlusSquare color={\"black\"} size={20}/>}\r\n                iconOpen={<FaRegMinusSquare color={\"black\"} size={20}/>}\r\n                items={getListItem()}\r\n                onClickMenuItem={(s, o) => {\r\n                    console.log('clicked: ' + o.item!.id)\r\n                }}\r\n            />\r\n            <br/>\r\n            <p>press the key Alt+Shift+2+2</p>\r\n            <button onClick={() => {\r\n                const menu = new MenuItem()\r\n                menu.icon = <CgMenuBoxed color={'blue'}/>\r\n                menu.content = <div>added</div>\r\n                menu.id = uuidv4();\r\n                menu.style = {color: \"red\",fontWeight:\"bold\"}\r\n                menu.accessKey = \"22\"\r\n                menu.title = 'added'\r\n                menu.url = 'https://www.google.com/'\r\n                menu.target = '_blank'\r\n                menu.isOpen=true;\r\n                menu.selected=true;\r\n                menu.items?.push(CreateItem({content: \"sub\",selected:true}))\r\n                mRefTree.current!.AddItems(menu)\r\n            }}>Add Item\r\n            </button>\r\n\r\n            <div>\r\n                <CodeSnippetJavaScript code={code}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n"],"names":["randomUUID","crypto","bind","getRandomValues","rnds8","Uint8Array","rng","Error","byteToHex","i","push","toString","slice","unsafeStringify","arr","offset","arguments","length","undefined","toLowerCase","options","buf","native","rnds","random","code","getListItem","listItem","m","MenuItem","content","_m$items","sub_m","items","_m$items2","P5_30","mRefTree","useRef","_jsxs","style","width","children","_jsx","TreeMenu","ref","useCheckBox","wight","marginTop","iconTree","MdOutlineSubdirectoryArrowRight","color","size","iconClose","FaRegPlusSquare","iconOpen","FaRegMinusSquare","onClickMenuItem","s","o","console","log","item","id","onClick","_menu$items","menu","icon","CgMenuBoxed","uuidv4","fontWeight","accessKey","title","url","target","isOpen","selected","CreateItem","current","AddItems","CodeSnippetJavaScript"],"sourceRoot":""}