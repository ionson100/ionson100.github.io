"use strict";(self.webpackChunkionson100_github_io=self.webpackChunkionson100_github_io||[]).push([[8119],{28119:(n,e,t)=>{t.r(e),t.d(e,{default:()=>d});var o=t(65043),s=t(35616),a=t(23156),r=t(1141),i=t(70579);const l='\nimport React, {useRef} from "react";\nimport {ShowBsrDialog} from "bsr-modaldialog";\nimport \'bsr-modaldialog/dist/index.css\'\nimport { FaReact } from "react-icons/fa6";\n\nexport function P4_4() {\n    const mRefLabel = useRef();\n    return (\n        <>\n            <label ref={mRefLabel}></label>\n            <br/>\n            <button onClick={() => {\n                mRefLabel.current.innerText = \'\'\n                ShowBsrDialog({\n                    icon: <FaReact/>,\n                    header: (<span style={{paddingLeft: 10}}>Dialog </span>),\n                    body: <span style={{paddingLeft: 10}}>Body</span>,\n                    buttons: [(<button data-mode={-1} data-focus={1}>close</button>)]\n                }).then(a => {\n                    mRefLabel.current.innerText = JSON.stringify(a)\n                })\n            }}>show\n            </button>\n        </>\n    )\n}\n\n';function d(){const n=(0,o.useRef)();return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("label",{className:"label-then",ref:n}),(0,i.jsx)("br",{})," ",(0,i.jsx)("br",{}),(0,i.jsx)("button",{onClick:()=>{n.current.innerText="",(0,s.fG)({icon:(0,i.jsx)(a.rMV,{color:"red",size:20}),header:(0,i.jsx)("span",{style:{paddingLeft:10},children:"Dialog "}),body:(0,i.jsx)("span",{style:{paddingLeft:10},children:"Body"}),buttons:[(0,i.jsx)("button",{"data-mode":-1,"data-focus":1,children:"close"})]}).then((e=>{n.current.innerText=JSON.stringify(e)}))},children:"show"}),(0,i.jsx)("br",{}),(0,i.jsx)("div",{children:(0,i.jsx)(r.MM,{code:l})})]})}}}]);
//# sourceMappingURL=8119.983fb0f4.chunk.js.map