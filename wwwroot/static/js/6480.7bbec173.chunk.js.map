{"version":3,"file":"static/js/6480.7bbec173.chunk.js","mappings":"iLAIA,MAAMA,UAAsBC,EAAAA,GACxBC,OAAAA,CAAQC,GAER,CAEAC,QAAAA,CAASD,GACL,OAAO,CACX,CAEAE,MAAAA,GACI,OACIC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIC,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAACC,UAAW,SAAUC,QAAS,IAAIJ,SAAA,CAAC,YACpCF,EAAAA,EAAAA,KAAA,UACRA,EAAAA,EAAAA,KAAA,UAAQO,QAASA,KACbC,KAAKC,UAAU,MAAM,EACvBP,SAAC,kBAQnB,EAIGQ,eAAeC,IAClB,MAAMC,EAAsB,GAE5B,OADAA,EAAIC,MAAKb,EAAAA,EAAAA,KAAA,UAASc,UAAW,YAAa,aAAY,EAAG,cAAY,EAAKZ,SAAC,iBAEjEa,EAAAA,EAAAA,IAAc,CAChBC,SAAU,MACVZ,MAAM,CAACa,MAAM,KACbC,MAAMlB,EAAAA,EAAAA,KAACmB,EAAAA,IAAY,IACnBC,QAASpB,EAAAA,EAAAA,KAAA,QAAMI,MAAO,CAACiB,YAAa,IAAInB,SAAC,cACzCoB,MAAMtB,EAAAA,EAAAA,KAACN,EAAa,IACpB6B,QAASX,GAGrB,C,+FC1Ce,SAASY,EAAWC,GAAc,IAAZ,SAACC,GAASD,EAE3C,OACIzB,EAAAA,EAAAA,KAAA,UAAQO,QAASA,KACbmB,EAAS,KACTX,EAAAA,EAAAA,IAAc,CACVG,MAAKlB,EAAAA,EAAAA,KAAC2B,EAAAA,IAAO,IACbP,QAAOpB,EAAAA,EAAAA,KAAA,QAAMI,MAAO,CAACiB,YAAY,IAAInB,SAAC,iBACtCoB,MAAKtB,EAAAA,EAAAA,KAAA,OAAKI,MAAO,CAACE,QAAS,IAAIJ,SAAC,oBAChC0B,UAAU,CAACtB,QAAQ,IACnBiB,QAAQ,EAACvB,EAAAA,EAAAA,KAAA,UAAQ,aAAY,EAAG,aAAY,EAAGc,UAAW,YAAYZ,SAAC,aACxE2B,MAAKC,IACLJ,EAASK,KAAKC,UAAUF,GAAG,GAC5B,EACJ5B,SAAC,yBAKX,CCnBe,SAAS+B,EAAoBR,GAAc,IAAZ,SAACC,GAASD,EAEpD,OACIzB,EAAAA,EAAAA,KAAA,UAAQO,QAASA,KACbmB,EAAS,KACTX,EAAAA,EAAAA,IAAc,CACVG,MAAKlB,EAAAA,EAAAA,KAAC2B,EAAAA,IAAO,IACbO,kCAAiC,EACjCd,QAAOpB,EAAAA,EAAAA,KAAA,QAAMI,MAAO,CAACiB,YAAY,IAAInB,SAAC,iBACtCoB,MAAKtB,EAAAA,EAAAA,KAAA,OAAKI,MAAO,CAACE,QAAS,IAAIJ,SAAC,4BAChC0B,UAAU,CAACtB,QAAQ,IACnBiB,QAAQ,EAACvB,EAAAA,EAAAA,KAAA,UAAQ,aAAY,EAAG,aAAY,EAAGc,UAAW,YAAYZ,SAAC,aACxE2B,MAAKC,IACJJ,EAASK,KAAKC,UAAUF,GAAG,GAC7B,EACJ5B,SAAC,yBAKX,CCpBe,SAASiC,EAAcV,GAAc,IAAZ,SAACC,GAASD,EAE9C,OACIzB,EAAAA,EAAAA,KAAA,UAAQO,QAASA,KACbmB,EAAS,KACTX,EAAAA,EAAAA,IAAc,CACVqB,OAAM,EACNlB,MAAKlB,EAAAA,EAAAA,KAAC2B,EAAAA,IAAO,IACbP,QAAOpB,EAAAA,EAAAA,KAAA,QAAMI,MAAO,CAACiB,YAAY,IAAInB,SAAC,WACtCoB,MAAKtB,EAAAA,EAAAA,KAAA,OAAKI,MAAO,CAACE,QAAS,IAAIJ,SAAC,SAChC0B,UAAU,CAACtB,QAAQ,IACnBiB,QAAQ,EAACvB,EAAAA,EAAAA,KAAA,UAAQ,aAAY,EAAG,aAAY,EAAGc,UAAW,YAAYZ,SAAC,aACxE2B,MAAKC,IACJJ,EAASK,KAAKC,UAAUF,GAAG,GAC7B,EACJ5B,SAAC,kBAKX,CCpBe,SAASR,EAAa+B,GAAc,IAAZ,SAACC,GAASD,EAE7C,OACIzB,EAAAA,EAAAA,KAAA,UAAQO,QAASA,KACbmB,EAAS,KACTX,EAAAA,EAAAA,IAAc,CACVG,MAAKlB,EAAAA,EAAAA,KAAC2B,EAAAA,IAAO,IACbP,QAAOpB,EAAAA,EAAAA,KAAA,QAAMI,MAAO,CAACiB,YAAY,IAAInB,SAAC,mBACtCoB,MAAKtB,EAAAA,EAAAA,KAAA,OAAKI,MAAO,CAACE,QAAS,IAAIJ,SAAC,oBAChC0B,UAAU,CAACtB,QAAQ,IACnBiB,QAAS,EACLvB,EAAAA,EAAAA,KAAA,UAAQ,YAAW,EAAIc,UAAW,YAAYZ,SAAC,YAC/CF,EAAAA,EAAAA,KAAA,UAAQ,YAAW,EAAIc,UAAW,YAAYZ,SAAC,YAC/CF,EAAAA,EAAAA,KAAA,UAAQ,YAAW,EAAIc,UAAW,YAAYZ,SAAC,YAC/CF,EAAAA,EAAAA,KAAA,UAAQ,aAAY,EAAG,aAAY,EAAGc,UAAW,YAAYZ,SAAC,aAEnE2B,MAAKC,IACJJ,EAASK,KAAKC,UAAUF,GAAG,GAC7B,EACJ5B,SAAC,kBAKX,C,eCtBA,MAAMR,UAAsBC,EAAAA,GACxB0C,WAAAA,CAAYC,GACRC,MAAMD,GACN9B,KAAKgC,UAAUC,EAAAA,YACfjC,KAAKkC,cAAcD,EAAAA,YACnBjC,KAAKmC,aAAaF,EAAAA,WACtB,CACA3C,QAAAA,CAASD,GAGL,GAFAW,KAAKgC,UAAUI,QAAQC,UAAU,GAEvB,MAAPhD,EAAW,CAET,GAAiB,IADNW,KAAKkC,cAAcE,QAAQE,MAC9BC,OAKJ,OAJAvC,KAAKgC,UAAUI,QAAQC,UAAU,oBCfnCnC,eAA6BsC,SAC3BjC,EAAAA,EAAAA,IAAc,CACfC,SAAS,MACTE,MAAKlB,EAAAA,EAAAA,KAACiD,EAAAA,IAAe,CAACC,MAAO,QAC7B9B,QAAOpB,EAAAA,EAAAA,KAAA,QAAMI,MAAO,CAACiB,YAAY,IAAInB,SAAC,WACtCoB,MAAKtB,EAAAA,EAAAA,KAAA,OAAKI,MAAO,CAACE,QAAS,IAAIJ,SAAE8C,IACjCpB,UAAU,CAACtB,QAAQ,IACnBF,MAAM,CAACa,MAAM,KACbM,QAAQ,EAACvB,EAAAA,EAAAA,KAAA,UAAQ,aAAY,EAAG,aAAY,EAAGc,UAAW,YAAYZ,SAAC,YAEvF,CDMiBiD,CAAY,qBAAqBtB,MAAKC,IAClCtB,KAAKkC,cAAcE,QAAQQ,OAAO,KAE/B,CAEhB,CACA,OAAO,CACX,CACAxD,OAAAA,CAAQC,GACJ,GAAU,MAAPA,EACC,MAAO,CACHwD,UAAU7C,KAAKkC,cAAcE,QAAQE,MACrCQ,SAAS9C,KAAKmC,aAAaC,QAAQE,MAK/C,CACAS,iBAAAA,GACGC,YAAW,KACPhD,KAAKkC,cAAcE,QAAQQ,OAAO,GAEzC,CAEArD,MAAAA,GACI,OACII,EAAAA,EAAAA,MAAA,YAAUC,MAAO,CAACa,MAAM,IAAIwC,OAAO,GAAGvD,SAAA,EAClCF,EAAAA,EAAAA,KAAA,SAAO0D,IAAKlD,KAAKgC,UAAWpC,MAAO,CAAC8C,MAAO,UAC3C/C,EAAAA,EAAAA,MAAA,OAAKW,UAAU,QAAOZ,SAAA,EAClBC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,eAAWF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,UACvBF,EAAAA,EAAAA,KAAA,SAAO0D,IAAKlD,KAAKkC,cAAeiB,YAAY,mBAEhDxD,EAAAA,EAAAA,MAAA,OAAKW,UAAU,QAAOZ,SAAA,EAClBF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,eACPF,EAAAA,EAAAA,KAAA,SAAO0D,IAAKlD,KAAKmC,aAAcgB,YAAY,mBAI3D,EAGW,SAASC,EAAanC,GAAc,IAAb,SAACC,GAASD,EAE5C,OACIzB,EAAAA,EAAAA,KAAA,UAAQO,QAASA,KACbmB,EAAS,KACTX,EAAAA,EAAAA,IAAc,CACVG,MAAMlB,EAAAA,EAAAA,KAAC2B,EAAAA,IAAO,IACdP,QAAQpB,EAAAA,EAAAA,KAAA,QAAMI,MAAO,CAACiB,YAAa,IAAInB,SAAC,kBACxCoB,MAAMtB,EAAAA,EAAAA,KAACN,EAAa,IACpBkC,UAAW,CAACtB,QAAS,IACrBiB,QAAS,EACLvB,EAAAA,EAAAA,KAAA,UAAQ,YAAW,EAAIc,UAAW,YAAYZ,SAAC,QAC/CF,EAAAA,EAAAA,KAAA,UAAQ,aAAY,EAAGc,UAAW,YAAYZ,SAAC,aAEpD2B,MAAKC,IACJJ,EAASK,KAAKC,UAAUF,GAAG,GAC7B,EACJ5B,SAAC,iBAKX,C,qCE5Ee,SAAS2D,EAAYpC,GAAc,IAAZ,SAACC,GAASD,EAC5C,MAAMb,EAAI,GAQV,OAPAA,EAAIC,MAAKb,EAAAA,EAAAA,KAAA,KAAGI,MAAO,CAAC0D,SAAS,IAAKC,KAAK,0EAAyE7D,SAAC,uBACjHU,EAAIC,MAAKb,EAAAA,EAAAA,KAAA,UAAQc,UAAW,YAAa,YAAW,IAAKP,QAASA,MAC9DI,EAAAA,EAAAA,IAAgB,EAEnBT,SAAC,eACFU,EAAIC,MAAKb,EAAAA,EAAAA,KAAA,UAAQc,UAAW,YAAa,YAAW,EAAEZ,SAAC,cACvDU,EAAIC,MAAKb,EAAAA,EAAAA,KAAA,UAASc,UAAW,YAAa,aAAY,EAAG,cAAY,EAAKZ,SAAC,YAEvEF,EAAAA,EAAAA,KAAA,UAAQO,QAASA,KACbmB,EAAS,KACTX,EAAAA,EAAAA,IAAc,CACVX,MAAO,CAACa,MAAO,KACfD,SAAU,SACVE,MAAMlB,EAAAA,EAAAA,KAACmB,EAAAA,IAAY,IACnBC,QAASpB,EAAAA,EAAAA,KAAA,QAAMI,MAAO,CAACiB,YAAa,IAAInB,SAAC,uBACzCoB,MAAMtB,EAAAA,EAAAA,KAACgE,EAAAA,EAAM,IACbzC,QAASX,IACViB,MAAKC,IACJJ,EAASK,KAAKC,UAAUF,GAAG,GAC7B,EACJ5B,SAAC,qBAKX,C,eC9Be,SAAS+D,EAAUxC,GAAc,IAAZ,SAACC,GAASD,EAE1C,OACIzB,EAAAA,EAAAA,KAAA,UAAQO,QAASA,KACbmB,EAAS,KACTX,EAAAA,EAAAA,IAAc,CACVD,UAAW,oBACXsB,OAAO,EACP8B,QAAS,IACTC,mBAAoB,OACpBC,sBAAuB,OACvBC,cAAe,eAEf/C,MAAMnB,EAAAA,EAAAA,MAAA,OAAKW,UAAW,YAAYZ,SAAA,EAC9BF,EAAAA,EAAAA,KAACsE,EAAAA,IAAI,CAACC,KAAM,MACZvE,EAAAA,EAAAA,KAAA,OAAKI,MAAO,CAACiB,YAAa,IAAInB,SAAC,+BAGpC2B,MAAKC,IACJJ,EAASK,KAAKC,UAAUF,GAAG,GAC7B,EACJ5B,SAAC,SAKX,CCde,SAASsE,EAAW/C,GAAc,IAAZ,SAACC,GAASD,EAE3C,OACIzB,EAAAA,EAAAA,KAAA,UAAQO,QAASA,KACbmB,EAAS,KACTX,EAAAA,EAAAA,IAAc,CACVG,MAAKlB,EAAAA,EAAAA,KAAC2B,EAAAA,IAAO,IACbP,QAAOpB,EAAAA,EAAAA,KAAA,QAAMI,MAAO,CAACiB,YAAY,IAAInB,SAAC,iBACtCoB,MAjBRnB,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAACqE,UAAU,SAASC,UAAU,OAAOC,OAAO,QAAQtD,YAAY,EAAEuD,aAAa,GAAG1E,SAAA,EAC1FF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,8qBACHF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,8qBACHF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,grBAeC0B,UAAU,CAACtB,QAAQ,IACnBiB,QAAQ,EAACvB,EAAAA,EAAAA,KAAA,UAAQ,aAAY,EAAG,aAAY,EAAGc,UAAW,YAAYZ,SAAC,aACxE2B,MAAKC,IACJJ,EAASK,KAAKC,UAAUF,GAAG,GAC7B,EACJ5B,SAAC,gBAKX,CCnBe,SAAS2E,IACpB,MAAMC,GAAUC,EAAAA,EAAAA,QAAyB,MACiCtC,EAAAA,OAA+C,MACzH,OACItC,EAAAA,EAAAA,MAAAF,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAOc,UAAW,aAAc4C,IAAKoB,KACrC9E,EAAAA,EAAAA,KAAA,UAAKA,EAAAA,EAAAA,KAAA,UACLG,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAC4E,QAAS,QAAQ9E,SAAA,EAC1BF,EAAAA,EAAAA,KAACwB,EAAW,CAACE,SAAWuD,IACpBH,EAAUlC,QAASC,UAAYoC,CAAC,KAEpCjF,EAAAA,EAAAA,KAACiC,EAAoB,CAACP,SAAWuD,IAC7BH,EAAUlC,QAASC,UAAYoC,CAAC,KAEpCjF,EAAAA,EAAAA,KAACmC,EAAc,CAACT,SAAWuD,IACpBH,EAAUlC,UACTkC,EAAUlC,QAAQC,UAAYoC,EAAC,KAEvCjF,EAAAA,EAAAA,KAACN,EAAa,CAACgC,SAAWuD,IACnBH,EAAUlC,UACTkC,EAAUlC,QAAQC,UAAYoC,EAAC,KAEvCjF,EAAAA,EAAAA,KAAC4D,EAAa,CAAClC,SAAWuD,IACnBH,EAAUlC,UACTkC,EAAUlC,QAAQC,UAAYoC,EAAC,KAEvCjF,EAAAA,EAAAA,KAAC6D,EAAY,CAACnC,SAAWuD,IAClBH,EAAUlC,UACTkC,EAAUlC,QAAQC,UAAYoC,EAAC,KAEvCjF,EAAAA,EAAAA,KAACiE,EAAU,CAACvC,SAAWuD,IAChBH,EAAUlC,UACTkC,EAAUlC,QAAQC,UAAYoC,EAAC,QAI3CjF,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,OAAKI,MAAO,CAAC4E,QAAS,QAAQ9E,UAC1BF,EAAAA,EAAAA,KAACwE,EAAW,CAAC9C,SAAWuD,IACjBH,EAAUlC,UACTkC,EAAUlC,QAAQC,UAAYoC,EAAC,QAUvD,C,sGC3DO,MAAMjB,UAAerE,EAAAA,GAAe0C,WAAAA,GAAA,SAAA6C,WAAA,KAEhCxC,cAAmDD,EAAAA,YAAmC,KACtF0C,UAA+C1C,EAAAA,YAAmC,KAClF2C,aAAkD3C,EAAAA,YAAmC,KACrF4C,SAA+C5C,EAAAA,YAAoC,KACnFD,UAA+CC,EAAAA,WAAoC,CAG1F3C,QAAAA,CAASD,GAIL,OAHAW,KAAKgC,UAAUI,QAASC,UAAY,GAGvB,QAAThD,KAICA,GAAiB,OAATA,GAA0B,OAATA,GAIjB,MAATA,IAG0C,KAAtCW,KAAKkC,cAAcE,QAASE,OAC5BtC,KAAKgC,UAAUI,QAASC,UAAY,oBACV,QAA1ByC,EAAA9E,KAAKkC,cAAcE,eAAO,IAAA0C,GAA1BA,EAA4BlC,SACrB,GAE2B,KAAlC5C,KAAK2E,UAAUvC,QAASE,OACxBtC,KAAKgC,UAAUI,QAASC,UAAY,eACd,QAAtB0C,EAAA/E,KAAK2E,UAAUvC,eAAO,IAAA2C,GAAtBA,EAAwBnC,SACjB,GAE8B,KAArC5C,KAAK4E,aAAaxC,QAASE,OACF,QAAzB0C,EAAAhF,KAAK4E,aAAaxC,eAAO,IAAA4C,GAAzBA,EAA2BpC,QAC3B5C,KAAKgC,UAAUI,QAASC,UAAY,mBAC7B,GAEkC,IAAzCrC,KAAK6E,SAASzC,QAAS6C,eACF,QAArBC,EAAAlF,KAAK6E,SAASzC,eAAO,IAAA8C,GAArBA,EAAuBtC,QACvB5C,KAAKgC,UAAUI,QAASC,UAAY,sBAC7B,IAIXW,YAAW,KACPhD,KAAKC,UAAU,MAAM,GACtB,MACI,KAzBwC,IAAD6E,EAKJC,EAKGC,EAKGE,CAexD,CAEA9F,OAAAA,CAAQC,GAA+C,IAAD8F,EAAAC,EAAAC,EAAAC,EAClD,GAAa,OAATjG,GAA0B,OAATA,EAErB,MAAO,CACHkG,SAAoC,QAA5BJ,EAAEnF,KAAKkC,cAAcE,eAAO,IAAA+C,OAAA,EAA1BA,EAA4B7C,MACtCkD,MAA6B,QAAxBJ,EAAEpF,KAAK2E,UAAUvC,eAAO,IAAAgD,OAAA,EAAtBA,EAAwB9C,MAC/BmD,SAAmC,QAA3BJ,EAAErF,KAAK4E,aAAaxC,eAAO,IAAAiD,OAAA,EAAzBA,EAA2B/C,MACrCoD,KAA2B,QAAvBJ,EAAEtF,KAAK6E,SAASzC,eAAO,IAAAkD,OAAA,EAArBA,EAAuBhD,MAErC,CAEAS,iBAAAA,GAEIC,YAAW,KACPhD,KAAKkC,cAAeE,QAASQ,OAAO,GACrC,IACP,CAEArD,MAAAA,GACI,OACIC,EAAAA,EAAAA,KAAA,OAAKI,MAAO,CAAC+F,WAAY,EAAGC,cAAe,GAAGlG,UAE1CC,EAAAA,EAAAA,MAAA,YAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAO0D,IAAKlD,KAAKgC,UAAWpC,MAAO,CAAC8C,MAAO,UAC3ClD,EAAAA,EAAAA,KAAA,MAAAE,SAAI,aACJC,EAAAA,EAAAA,MAAA,OAAKW,UAAU,QAAOZ,SAAA,EAClBC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,eAAWF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,UACvBF,EAAAA,EAAAA,KAAA,SAAO0D,IAAKlD,KAAKkC,cAAeiB,YAAY,mBAEhDxD,EAAAA,EAAAA,MAAA,OAAKW,UAAU,QAAOZ,SAAA,EAClBF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,eACPF,EAAAA,EAAAA,KAAA,SAAO2D,YAAY,kBAEvBxD,EAAAA,EAAAA,MAAA,OAAKW,UAAU,QAAOZ,SAAA,EAClBC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,kBAAcF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,UAC1BF,EAAAA,EAAAA,KAAA,SAAO0D,IAAKlD,KAAK2E,UAAWxB,YAAY,sBAE5CxD,EAAAA,EAAAA,MAAA,OAAKW,UAAU,QAAOZ,SAAA,EAClBC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,aAASF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,UACrBF,EAAAA,EAAAA,KAAA,SAAO0D,IAAKlD,KAAK4E,aAAciB,KAAK,WAAW1C,YAAY,iBAE/DxD,EAAAA,EAAAA,MAAA,OAAKW,UAAU,QAAOZ,SAAA,EAClBC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,SAAKF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,UACjBC,EAAAA,EAAAA,MAAA,UAAQuD,IAAKlD,KAAK6E,SAASnF,SAAA,EACvBF,EAAAA,EAAAA,KAAA,UAAQ8C,MAAM,OAAM5C,SAAC,UACrBF,EAAAA,EAAAA,KAAA,UAAQ8C,MAAM,aAAY5C,SAAC,gBAC3BF,EAAAA,EAAAA,KAAA,UAAQ8C,MAAM,WAAU5C,SAAC,uBAOjD,EAGG,SAASoG,IACZ,MAAMxB,GAAYC,EAAAA,EAAAA,QAAyB,MACrCnE,EAAsB,GAU5B,OATAA,EAAIC,MAAKb,EAAAA,EAAAA,KAAA,KAAGI,MAAO,CAAC0D,SAAS,IAAKC,KAAK,0EAAyE7D,SAAC,uBACjHU,EAAIC,MAAKb,EAAAA,EAAAA,KAAA,UAAQc,UAAW,YAAa,YAAW,IAAKP,QAASA,MAC9DI,EAAAA,EAAAA,IAAgB,EAEnBT,SAAC,eACFU,EAAIC,MAAKb,EAAAA,EAAAA,KAAA,UAAQc,UAAW,YAAa,YAAW,EAAEZ,SAAC,cACvDU,EAAIC,MAAKb,EAAAA,EAAAA,KAAA,UAASc,UAAW,YAAa,aAAY,EAAG,cAAY,EAAKZ,SAAC,YAIvEC,EAAAA,EAAAA,MAAAF,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAOc,UAAW,aAAc4C,IAAKoB,KACrC9E,EAAAA,EAAAA,KAAA,SAAK,KAACA,EAAAA,EAAAA,KAAA,UACNA,EAAAA,EAAAA,KAAA,UAAQO,QAASA,KACbuE,EAAUlC,QAASC,UAAY,IAE/B9B,EAAAA,EAAAA,IAAc,CACVX,MAAO,CAACa,MAAO,KACfD,SAAU,SACVE,MAAMlB,EAAAA,EAAAA,KAACmB,EAAAA,IAAY,IACnBC,QAASpB,EAAAA,EAAAA,KAAA,QAAMI,MAAO,CAACiB,YAAa,IAAInB,SAAC,uBACzCoB,MAAMtB,EAAAA,EAAAA,KAACgE,EAAM,IACbzC,QAASX,IACViB,MAAKC,IACJgD,EAAUlC,QAASC,UAAYd,KAAKC,UAAUF,EAAE,GAClD,EACJ5B,SAAC,aAIf,C","sources":["ViewStorage/menu/confirmDialog.tsx","ViewStorage/menu/dialog/examprs/SimpleDialog.js","ViewStorage/menu/dialog/examprs/SinpleModalClickPage.jsx","ViewStorage/menu/dialog/examprs/SimpleNotModal.jsx","ViewStorage/menu/dialog/examprs/ConfirmDialog.jsx","ViewStorage/menu/dialog/examprs/PromtDialog.jsx","ViewStorage/menu/dialog/examprs/Alert.jsx","ViewStorage/menu/dialog/examprs/FormRegister.jsx","ViewStorage/menu/dialog/examprs/Panel.jsx","ViewStorage/menu/dialog/examprs/InnerScroll.js","ViewStorage/menu/dialog/4-1.tsx","ViewStorage/menu/registerForm.tsx"],"sourcesContent":["import {ReactElement} from \"react\";\r\nimport {BaseBodyDialog, ShowBsrDialog} from \"bsr-modaldialog\";\r\nimport {FaUserSecret} from \"react-icons/fa\";\r\n\r\nclass ConfirmDialog extends BaseBodyDialog {\r\n    getData(mode: string | undefined): object | undefined {\r\n        return undefined;\r\n    }\r\n\r\n    validate(mode: string | undefined): boolean | undefined {\r\n        return true\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div style={{textAlign: \"center\", padding: 10}}>\r\n                    Close me<br/>\r\n                    <button onClick={() => {\r\n                        this.selfClose(\"333\")\r\n                    }}>\r\n                        selfClose\r\n                    </button>\r\n                </div>\r\n\r\n\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport async function ConfirmDialogF() {\r\n    const but: ReactElement[] = []\r\n    but.push(< button className={'button-10'} data-mode={-1} data-focus={true}>close</button>)\r\n    return (\r\n        await ShowBsrDialog({\r\n            position: 'top',\r\n            style:{width:300},\r\n            icon: <FaUserSecret/>,\r\n            header: (<span style={{paddingLeft: 30}}>Close me:</span>),\r\n            body: <ConfirmDialog/>,\r\n            buttons: but\r\n        })\r\n    )\r\n}","import React from \"react\";\r\nimport {ShowBsrDialog} from \"bsr-modaldialog\";\r\nimport { FaReact } from \"react-icons/fa6\";\r\nexport default function SimpleModal ({callback}){\r\n\r\n    return(\r\n        <button onClick={()=>{\r\n            callback('')\r\n            ShowBsrDialog({\r\n                icon:<FaReact/>,\r\n                header:<span style={{paddingLeft:10}}>Modal Dialog</span>,\r\n                body:<div style={{padding: 10}}>Body, click Esc</div>,\r\n                bodyStyle:{padding:20},\r\n                buttons:[<button data-mode={-1} data-focus={1} className={'button-10'}>close</button>]\r\n            }).then(a=>{\r\n               callback(JSON.stringify(a))\r\n            })\r\n        }}>\r\n            Simple modal dialog 1\r\n        </button>\r\n    )\r\n\r\n}\r\n","import React from \"react\";\r\nimport {ShowBsrDialog} from \"bsr-modaldialog\";\r\nimport { FaReact } from \"react-icons/fa6\";\r\nexport default function SimpleModalClickPage ({callback}){\r\n\r\n    return(\r\n        <button onClick={()=>{\r\n            callback('')\r\n            ShowBsrDialog({\r\n                icon:<FaReact/>,\r\n                closeModalDialogClickForeignArea:true,\r\n                header:<span style={{paddingLeft:10}}>Modal Dialog</span>,\r\n                body:<div style={{padding: 10}}>Body, click page or Esc</div>,\r\n                bodyStyle:{padding:20},\r\n                buttons:[<button data-mode={-1} data-focus={1} className={'button-10'}>close</button>]\r\n            }).then(a=>{\r\n                callback(JSON.stringify(a))\r\n            })\r\n        }}>\r\n            Simple modal dialog 2\r\n        </button>\r\n    )\r\n\r\n}\r\n","import React from \"react\";\r\nimport {ShowBsrDialog} from \"bsr-modaldialog\";\r\nimport { FaReact } from \"react-icons/fa6\";\r\nexport default function SimpleNotModal ({callback}){\r\n\r\n    return(\r\n        <button onClick={()=>{\r\n            callback('')\r\n            ShowBsrDialog({\r\n                modal:false,\r\n                icon:<FaReact/>,\r\n                header:<span style={{paddingLeft:10}}>Dialog</span>,\r\n                body:<div style={{padding: 10}}>Body</div>,\r\n                bodyStyle:{padding:20},\r\n                buttons:[<button data-mode={-1} data-focus={1} className={'button-10'}>close</button>]\r\n            }).then(a=>{\r\n                callback(JSON.stringify(a))\r\n            })\r\n        }}>\r\n            Simple  dialog\r\n        </button>\r\n    )\r\n\r\n}\r\n","import React from \"react\";\r\nimport {ShowBsrDialog} from \"bsr-modaldialog\";\r\nimport { FaReact } from \"react-icons/fa6\";\r\nexport default function ConfirmDialog ({callback}){\r\n\r\n    return(\r\n        <button onClick={()=>{\r\n            callback('')\r\n            ShowBsrDialog({\r\n                icon:<FaReact/>,\r\n                header:<span style={{paddingLeft:10}}>Confirm dialog</span>,\r\n                body:<div style={{padding: 10}}>Body, click Esc</div>,\r\n                bodyStyle:{padding:20},\r\n                buttons: [\r\n                    <button data-mode={1}  className={'button-10'}>mode 1</button>,\r\n                    <button data-mode={2}  className={'button-10'}>mode 2</button>,\r\n                    <button data-mode={3}  className={'button-10'}>mode 3</button>,\r\n                    <button data-mode={-1} data-focus={1} className={'button-10'}>close</button>\r\n                ]\r\n            }).then(a => {\r\n                callback(JSON.stringify(a))\r\n            })\r\n        }}>\r\n            Confirm dialog\r\n        </button>\r\n    )\r\n\r\n}\r\n","\r\nimport {ShowBsrDialog,BaseBodyDialog} from \"bsr-modaldialog\";\r\nimport { FaReact } from \"react-icons/fa6\";\r\nimport React from \"react\";\r\nimport SimpleAlert from \"./Alert\";\r\nclass ConfirmDialog extends BaseBodyDialog {\r\n    constructor(props) {\r\n        super(props);\r\n        this.mRefError=React.createRef();\r\n        this.mRefFirstName=React.createRef();\r\n        this.mRefLastName=React.createRef();\r\n    }\r\n    validate(mode) {\r\n        this.mRefError.current.innerText=''\r\n\r\n        if(mode===\"1\"){\r\n             const text=this.mRefFirstName.current.value;\r\n             if(text.length===0){\r\n                 this.mRefError.current.innerText='First name empty.'\r\n                 SimpleAlert('First name empty.').then(a=>{\r\n                     this.mRefFirstName.current.focus()\r\n                 })\r\n                 return false;\r\n             }\r\n        }\r\n        return true;\r\n    }\r\n    getData(mode) {\r\n        if(mode===\"1\"){\r\n            return {\r\n                firstName:this.mRefFirstName.current.value,\r\n                lastName:this.mRefLastName.current.value,\r\n            }\r\n        }\r\n        return undefined\r\n\r\n    }\r\n    componentDidMount() {\r\n       setTimeout(()=>{\r\n           this.mRefFirstName.current.focus()\r\n       })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <fieldset style={{width:460,margin:2}}>\r\n                <label ref={this.mRefError} style={{color: \"red\"}}/>\r\n                <div className=\"Field\">\r\n                    <label>First name <sup>*</sup></label>\r\n                    <input ref={this.mRefFirstName} placeholder=\"First name\"/>\r\n                </div>\r\n                <div className=\"Field\">\r\n                    <label>Last name</label>\r\n                    <input ref={this.mRefLastName} placeholder=\"Last name\"/>\r\n                </div>\r\n            </fieldset>\r\n        )\r\n    }\r\n}\r\n\r\nexport default function SimpleConfirm({callback}) {\r\n\r\n    return (\r\n        <button onClick={() => {\r\n            callback('')\r\n            ShowBsrDialog({\r\n                icon: <FaReact/>,\r\n                header: <span style={{paddingLeft: 10}}>Prompt Dialog</span>,\r\n                body: <ConfirmDialog/>,\r\n                bodyStyle: {padding: 20},\r\n                buttons: [\r\n                    <button data-mode={1}  className={'button-10'}>ok</button>,\r\n                    <button data-mode={-1} className={'button-10'}>close</button>\r\n                ]\r\n            }).then(a => {\r\n                callback(JSON.stringify(a))\r\n            })\r\n        }}>\r\n            prompt dialog\r\n        </button>\r\n    )\r\n\r\n}\r\n","import React from \"react\";\r\nimport {ShowBsrDialog} from \"bsr-modaldialog\";\r\nimport { BiSolidErrorAlt } from \"react-icons/bi\";\r\nexport default async function  SimpleAlert (text){\r\n           await ShowBsrDialog({\r\n                position:\"top\",\r\n                icon:<BiSolidErrorAlt color={\"red\"}/>,\r\n                header:<span style={{paddingLeft:10}}>Error:</span>,\r\n                body:<div style={{padding: 10}}>{text}</div>,\r\n                bodyStyle:{padding:20},\r\n                style:{width:300},\r\n                buttons:[<button data-mode={-1} data-focus={1} className={'button-10'}>close</button>]\r\n            })\r\n}\r\n","import React, {ReactElement} from \"react\";\r\nimport {ShowBsrDialog} from \"bsr-modaldialog\";\r\nimport { FaReact } from \"react-icons/fa6\";\r\nimport {FaUserSecret} from \"react-icons/fa\";\r\nimport {MyForm} from \"../../registerForm\";\r\nimport {ConfirmDialogF} from \"../../confirmDialog\";\r\nexport default function FormRegister ({callback}){\r\n    const but=[]\r\n    but.push(<a style={{fontSize:20}} href=\"https://medium.com/@ericapantojacs/react-registration-form-d298b3b7e75d\">Visit source code</a>)\r\n    but.push(<button className={'button-10'} data-mode={100} onClick={()=>{\r\n        ConfirmDialogF()\r\n    }\r\n    }>showModal</button>)\r\n    but.push(<button className={'button-10'} data-mode={1}>register</button>)\r\n    but.push(< button className={'button-10'} data-mode={-1} data-focus={true}>close</button>);\r\n    return(\r\n        <button onClick={()=>{\r\n            callback('')\r\n            ShowBsrDialog({\r\n                style: {width: 520},\r\n                position: 'center',\r\n                icon: <FaUserSecret/>,\r\n                header: (<span style={{paddingLeft: 30}}>User registration:</span>),\r\n                body: <MyForm/>,\r\n                buttons: but\r\n            }).then(a=>{\r\n                callback(JSON.stringify(a))\r\n            })\r\n        }}>\r\n            User registration\r\n        </button>\r\n    )\r\n\r\n}\r\n","import React from \"react\";\r\nimport {ShowBsrDialog} from \"bsr-modaldialog\";\r\nimport {FcOk} from \"react-icons/fc\";\r\nexport default function AlertPanel ({callback}){\r\n\r\n    return(\r\n        <button onClick={()=>{\r\n            callback('')\r\n            ShowBsrDialog({\r\n                className: 'main-dialog-alert',\r\n                modal: false,\r\n                timeOut: 2000,\r\n                classNameTopStripe: \"none\",\r\n                classNameBottomStripe: \"none\",\r\n                classNameBody: \"m-body-alert\",\r\n\r\n                body: <div className={'body-test'}>\r\n                    <FcOk size={50}/>\r\n                    <div style={{paddingLeft: 20}}>Simple alert  2000 ms</div>\r\n                </div>,\r\n\r\n            }).then(a=>{\r\n                callback(JSON.stringify(a))\r\n            })\r\n        }}>\r\n            Panel\r\n        </button>\r\n    )\r\n\r\n}\r\n","import React from \"react\";\r\nimport {ShowBsrDialog} from \"bsr-modaldialog\";\r\nimport { FaReact } from \"react-icons/fa6\";\r\n\r\nfunction getBody(){\r\n    return (\r\n        <div style={{overflowX:\"hidden\",overflowY:'auto',height:\"300px\",paddingLeft:5,paddingRight:5}}>\r\n            <p>Some text to enable scrolling.. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>\r\n            <p>Some text to enable scrolling.. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>\r\n            <p>Some text to enable scrolling.. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>\r\n        </div>\r\n        )\r\n\r\n}\r\n\r\nexport default function InnerScroll ({callback}){\r\n\r\n    return(\r\n        <button onClick={()=>{\r\n            callback('')\r\n            ShowBsrDialog({\r\n                icon:<FaReact/>,\r\n                header:<span style={{paddingLeft:10}}>Modal Dialog</span>,\r\n                body:getBody(),\r\n                bodyStyle:{padding:20},\r\n                buttons:[<button data-mode={-1} data-focus={1} className={'button-10'}>close</button>]\r\n            }).then(a=>{\r\n                callback(JSON.stringify(a))\r\n            })\r\n        }}>\r\n            inner scroll\r\n        </button>\r\n    )\r\n\r\n}\r\n","import React, {useRef} from \"react\";\r\nimport {ModalDialog} from \"bsr-modaldialog\";\r\n\r\nimport SimpleModal from \"./examprs/SimpleDialog\";\r\nimport SimpleModalClickPage from \"./examprs/SinpleModalClickPage\";\r\nimport SimpleNotModal from \"./examprs/SimpleNotModal\";\r\nimport ConfirmDialog from \"./examprs/ConfirmDialog\";\r\nimport SimpleConfirm from \"./examprs/PromtDialog\";\r\nimport FormRegister from \"./examprs/FormRegister\";\r\nimport AlertPanel from \"./examprs/Panel\";\r\nimport InnerScroll from \"./examprs/InnerScroll\";\r\nimport OuterScroll from \"./examprs/OuterScroll\";\r\n\r\nlet dialog:HTMLDivElement|undefined=undefined;\r\n\r\nexport default function P4_1(){\r\n    const mRefLabel=useRef<HTMLLabelElement>(null);\r\n    const mRefDialog:React.RefObject<InstanceType<typeof ModalDialog>> | null=React.useRef<InstanceType<typeof ModalDialog>>(null)\r\n    return (\r\n        <>\r\n            <label className={'label-then'} ref={mRefLabel}></label>\r\n            <br/><br/>\r\n            <div style={{display: \"flex\"}}>\r\n                <SimpleModal callback={(s: string) => {\r\n                    mRefLabel.current!.innerText = s;\r\n                }}/>\r\n                <SimpleModalClickPage callback={(s: string) => {\r\n                    mRefLabel.current!.innerText = s;\r\n                }}/>\r\n                <SimpleNotModal callback={(s: string) => {\r\n                    if(mRefLabel.current)\r\n                        mRefLabel.current.innerText = s;\r\n                }}/>\r\n                <ConfirmDialog callback={(s: string) => {\r\n                    if(mRefLabel.current)\r\n                        mRefLabel.current.innerText = s;\r\n                }}/>\r\n                <SimpleConfirm callback={(s: string) => {\r\n                    if(mRefLabel.current)\r\n                        mRefLabel.current.innerText = s;\r\n                }}/>\r\n                <FormRegister callback={(s: string) => {\r\n                    if(mRefLabel.current)\r\n                        mRefLabel.current.innerText = s;\r\n                }}/>\r\n                <AlertPanel callback={(s: string) => {\r\n                    if(mRefLabel.current)\r\n                        mRefLabel.current.innerText = s;\r\n                }}/>\r\n\r\n            </div>\r\n            <br/>\r\n            <div style={{display: \"flex\"}}>\r\n                <InnerScroll callback={(s: string) => {\r\n                    if(mRefLabel.current)\r\n                        mRefLabel.current.innerText = s;\r\n                }}/>\r\n                {/*<OuterScroll callback={(s: string) => {*/}\r\n                {/*    if(mRefLabel.current)*/}\r\n                {/*        mRefLabel.current.innerText = s;*/}\r\n                {/*}}/>*/}\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n","import {BaseBodyDialog, ShowBsrDialog} from \"bsr-modaldialog\";\r\nimport React, {ReactElement, useRef} from \"react\";\r\nimport {FaUserSecret} from \"react-icons/fa\";\r\nimport {ConfirmDialogF} from \"./confirmDialog\";\r\n\r\n\r\nexport class MyForm extends BaseBodyDialog {\r\n\r\n    public mRefFirstName: React.RefObject<HTMLInputElement> = React.createRef<HTMLInputElement>()\r\n    public mRefEmail: React.RefObject<HTMLInputElement> = React.createRef<HTMLInputElement>()\r\n    public mRefPassword: React.RefObject<HTMLInputElement> = React.createRef<HTMLInputElement>()\r\n    public mRefRole: React.RefObject<HTMLSelectElement> = React.createRef<HTMLSelectElement>()\r\n    public mRefError: React.RefObject<HTMLLabelElement> = React.createRef<HTMLLabelElement>();\r\n\r\n\r\n    validate(mode: string | undefined): boolean {\r\n        this.mRefError.current!.innerText = ''\r\n\r\n\r\n        if (mode === '100') {\r\n            return false;\r\n        }\r\n\r\n        if (!mode || mode === '-2' || mode === '-1') {\r\n            return true;\r\n        }\r\n\r\n        if (mode === '1') {// click register\r\n\r\n\r\n            if (this.mRefFirstName.current!.value === '') {\r\n                this.mRefError.current!.innerText = 'First name empty.'\r\n                this.mRefFirstName.current?.focus()\r\n                return false;\r\n            }\r\n            if (this.mRefEmail.current!.value === '') {\r\n                this.mRefError.current!.innerText = 'Email empty.'\r\n                this.mRefEmail.current?.focus()\r\n                return false;\r\n            }\r\n            if (this.mRefPassword.current!.value === '') {\r\n                this.mRefPassword.current?.focus()\r\n                this.mRefError.current!.innerText = 'Password empty.'\r\n                return false;\r\n            }\r\n            if (this.mRefRole.current!.selectedIndex === 0) {\r\n                this.mRefRole.current?.focus()\r\n                this.mRefError.current!.innerText = 'Role not selected.'\r\n                return false;\r\n            }\r\n\r\n            //Simulating a request to the server\r\n            setTimeout(() => {\r\n                this.selfClose('200')\r\n            }, 1000)\r\n            return false\r\n        }\r\n        return false;\r\n\r\n\r\n    }\r\n\r\n    getData(mode: string | undefined): object | undefined {\r\n        if (mode === '-1' || mode === '-2')\r\n            return undefined\r\n        return {\r\n            userName: this.mRefFirstName.current?.value,\r\n            email: this.mRefEmail.current?.value,\r\n            password: this.mRefPassword.current?.value,\r\n            role: this.mRefRole.current?.value\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.validate = this.validate.bind(this);\r\n        setTimeout(() => {\r\n            this.mRefFirstName!.current!.focus()// override focus button dialog :close\r\n        }, 100)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{paddingTop: 2, paddingBottom: 2}}>\r\n\r\n                <fieldset>\r\n                    <label ref={this.mRefError} style={{color: \"red\"}}/>\r\n                    <h2>Sign Up</h2>\r\n                    <div className=\"Field\">\r\n                        <label>First name <sup>*</sup></label>\r\n                        <input ref={this.mRefFirstName} placeholder=\"First name\"/>\r\n                    </div>\r\n                    <div className=\"Field\">\r\n                        <label>Last name</label>\r\n                        <input placeholder=\"Last name\"/>\r\n                    </div>\r\n                    <div className=\"Field\">\r\n                        <label>Email address <sup>*</sup></label>\r\n                        <input ref={this.mRefEmail} placeholder=\"Email address\"/>\r\n                    </div>\r\n                    <div className=\"Field\">\r\n                        <label>Password <sup>*</sup></label>\r\n                        <input ref={this.mRefPassword} type=\"password\" placeholder=\"Password\"/>\r\n                    </div>\r\n                    <div className=\"Field\">\r\n                        <label>Role <sup>*</sup></label>\r\n                        <select ref={this.mRefRole}>\r\n                            <option value=\"role\">Role</option>\r\n                            <option value=\"individual\">Individual</option>\r\n                            <option value=\"business\">Business</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                </fieldset>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport function GetRegisterDialog() {\r\n    const mRefLabel = useRef<HTMLLabelElement>(null)\r\n    const but: ReactElement[] = []\r\n    but.push(<a style={{fontSize:20}} href=\"https://medium.com/@ericapantojacs/react-registration-form-d298b3b7e75d\">Visit source code</a>)\r\n    but.push(<button className={'button-10'} data-mode={100} onClick={()=>{\r\n        ConfirmDialogF()\r\n    }\r\n    }>showModal</button>)\r\n    but.push(<button className={'button-10'} data-mode={1}>register</button>)\r\n    but.push(< button className={'button-10'} data-mode={-1} data-focus={true}>close</button>);\r\n\r\n\r\n    return (\r\n        <>\r\n            <label className={'label-then'} ref={mRefLabel}></label>\r\n            <br/> <br/>\r\n            <button onClick={() => {\r\n                mRefLabel.current!.innerText = ''\r\n\r\n                ShowBsrDialog({\r\n                    style: {width: 520},\r\n                    position: 'center',\r\n                    icon: <FaUserSecret/>,\r\n                    header: (<span style={{paddingLeft: 30}}>User registration:</span>),\r\n                    body: <MyForm/>,\r\n                    buttons: but\r\n                }).then(a => {\r\n                    mRefLabel.current!.innerText = JSON.stringify(a);\r\n                })\r\n            }}> Click\r\n            </button>\r\n        </>\r\n    )\r\n}"],"names":["ConfirmDialog","BaseBodyDialog","getData","mode","validate","render","_jsx","_Fragment","children","_jsxs","style","textAlign","padding","onClick","this","selfClose","async","ConfirmDialogF","but","push","className","ShowBsrDialog","position","width","icon","FaUserSecret","header","paddingLeft","body","buttons","SimpleModal","_ref","callback","FaReact","bodyStyle","then","a","JSON","stringify","SimpleModalClickPage","closeModalDialogClickForeignArea","SimpleNotModal","modal","constructor","props","super","mRefError","React","mRefFirstName","mRefLastName","current","innerText","value","length","text","BiSolidErrorAlt","color","SimpleAlert","focus","firstName","lastName","componentDidMount","setTimeout","margin","ref","placeholder","SimpleConfirm","FormRegister","fontSize","href","MyForm","AlertPanel","timeOut","classNameTopStripe","classNameBottomStripe","classNameBody","FcOk","size","InnerScroll","overflowX","overflowY","height","paddingRight","P4_1","mRefLabel","useRef","display","s","arguments","mRefEmail","mRefPassword","mRefRole","_this$mRefFirstName$c","_this$mRefEmail$curre","_this$mRefPassword$cu","selectedIndex","_this$mRefRole$curren","_this$mRefFirstName$c2","_this$mRefEmail$curre2","_this$mRefPassword$cu2","_this$mRefRole$curren2","userName","email","password","role","paddingTop","paddingBottom","type","GetRegisterDialog"],"sourceRoot":""}