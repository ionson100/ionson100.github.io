"use strict";(self.webpackChunkionson100_github_io=self.webpackChunkionson100_github_io||[]).push([[818],{50818:(n,e,s)=>{s.r(e),s.d(e,{default:()=>d});s(65043);var a=s(35616),t=(s(14464),s(1141)),r=s(70579);const o='import React from "react";\nimport {ShowBsrDialog,BaseBodyDialog} from "bsr-modaldialog";\nimport \'bsr-modaldialog/dist/index.css\'\n\ntype \'ModalBodyProps={\n    firstName:string\n    laseName:string\n}\n\ntype ReturningModalBody={\n    firstName:string\n    laseName:string\n}\n\nclass ModalBody extends BaseBodyDialog<ModalBodyProps>{\n\n    getData(mode: string | undefined): ReturningModalBody {\n        return {\n            firstName:this.props.firstName,\n            laseName:this.props.laseName\n        }\n    }\n    validate(mode: string | undefined): boolean {\n        return true;\n    }\n    render() {\n        return <div>\n            First Name:{this.props.firstName}<br/>\n            Last Name:{this.props.laseName}<br/>\n        </div>;\n    }\n}\n\nexport default function P4_16(){\n\n    return (\n        <div>\n            <button onClick={() => {\n                ShowBsrDialog({\n                    header:(<span style={{paddingLeft:10}}>Dialog </span>),\n                    body:<ModalBody firstName={"myForest Name"} laseName={"myLast Name"}/>,\n                    buttons:[(<button data-mode={-1} data-focus={1}>Ok</button>)]\n                }).then(res=>{\n                    const returning=res.dataBody as ReturningModalBody\n                    alert([returning.firstName,returning.laseName].join(\' \'))\n                })\n            }}>show\n            </button>\n        </div>\n    )\n}';class i extends a.qk{getData(n){return{firstName:this.props.firstName,laseName:this.props.laseName}}validate(n){return!0}render(){return(0,r.jsxs)("div",{style:{padding:20},children:["First Name:",this.props.firstName,(0,r.jsx)("br",{}),"Last Name:",this.props.laseName,(0,r.jsx)("br",{})]})}}function d(){return(0,r.jsxs)("div",{children:[(0,r.jsx)("br",{}),(0,r.jsx)("button",{onClick:()=>{(0,a.fG)({header:(0,r.jsx)("span",{style:{paddingLeft:10},children:"Dialog "}),body:(0,r.jsx)(i,{firstName:"myForest Name",laseName:"myLast Name"}),buttons:[(0,r.jsx)("button",{"data-mode":-1,"data-focus":1,children:"Ok"})]}).then((n=>{const e=n.dataBody;alert([e.firstName,e.laseName].join(" "))}))},children:"show"}),(0,r.jsx)("br",{}),(0,r.jsx)("br",{}),(0,r.jsx)(t.MM,{code:o})]})}}}]);
//# sourceMappingURL=818.ec928f51.chunk.js.map