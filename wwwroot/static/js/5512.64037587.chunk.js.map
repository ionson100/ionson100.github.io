{"version":3,"file":"static/js/5512.64037587.chunk.js","mappings":"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","sources":["ViewStorage/menu/bsrtree/ItemFactory.ts","ViewStorage/menu/bsrtree/Examples/Fragment1.tsx","ViewStorage/menu/bsrtree/Examples/Fragment2.tsx","ViewStorage/menu/bsrtree/Examples/Fragment3.tsx","ViewStorage/menu/bsrtree/Examples/Fragment4.tsx","ViewStorage/menu/bsrtree/5-1.tsx"],"sourcesContent":["import {MenuItem, CreateItem} from \"bsr-tree-virtual\";\r\n\r\n\r\nexport function GetSimpleCollection(count: number, icon?: any) {\r\n\r\nlet index=0\r\n    let List: Array<MenuItem> = [];\r\n    for (let i = 0; i < count; i++) {\r\n        index+=1\r\n        const root = CreateItem({content: \"root : \" + i, style: {color: \"green\",fontWeight:\"bold\"},icon: icon});\r\n\r\n        for (let j = 0; j < count; j++) {\r\n            index+=1\r\n            const subRoot = CreateItem({content: `item:${i} ${j}`,icon: icon});\r\n\r\n            for (let k = 0; k < count; k++) {\r\n                index+=1\r\n                const subRoot1 = CreateItem({content: `item:${i} ${j} ${k}`, icon:icon})\r\n\r\n                for (let l = 0; l < count; l++) {\r\n                    index+=1\r\n                    const subRoot2 = CreateItem({content: `item:${i} ${j} ${k} ${l}`,icon:icon});\r\n                    for (let m = 0; m < count; m++) {\r\n                        const subRoot3 = CreateItem({content: `item:${i} ${j} ${k} ${l} ${m}`, style: {color: \"red\"},icon:icon,accessKey:\"44\"});\r\n                        subRoot2.items?.push(subRoot3)\r\n                    }\r\n\r\n                    subRoot1.items?.push(subRoot2)\r\n                }\r\n\r\n                subRoot.items?.push(subRoot1)\r\n            }\r\n            root.items!.push(subRoot);\r\n        }\r\n        List.push(root)\r\n    }\r\n    console.log(index)\r\n    return List\r\n}\r\n","import React, {useRef} from \"react\";\r\nimport {MenuItem, TreeMenu} from \"bsr-tree-virtual\";\r\nimport {MdOutlineSubdirectoryArrowRight} from \"react-icons/md\";\r\nimport {FaRegMinusSquare, FaRegPlusSquare} from \"react-icons/fa\";\r\nimport {GetSimpleCollection} from \"../ItemFactory\";\r\n\r\nimport { FcViewDetails } from \"react-icons/fc\";\r\n\r\n\r\n\r\n\r\nexport default  function Fragment1(){\r\n    const menu = useRef<InstanceType<typeof TreeMenu>>(null)\r\n    const label = useRef<HTMLDivElement>(null)\r\n    const input = useRef<HTMLInputElement>(null)\r\n    return(\r\n        <div style={{display: \"flex\",width:\"100%\",height:\"100%\",padding:5}}>\r\n            <TreeMenu\r\n\r\n                style={{marginTop:10}}\r\n                useCheckBox={false}\r\n                ref={menu}\r\n                marginItem={20}\r\n                callbackVirtualSize={() => {\r\n                    return {\r\n                        wight: 600,\r\n                        height: 250\r\n                    }\r\n                }}\r\n                itemSize={30}\r\n\r\n                iconTree={<MdOutlineSubdirectoryArrowRight color={\"black\"} size={20}/>}\r\n                iconClose={<FaRegPlusSquare  color={\"black\"} size={20}/>}\r\n                iconOpen={<FaRegMinusSquare  color={\"black\"} size={20}/>}\r\n\r\n                items={GetSimpleCollection(4,<FcViewDetails/>)}\r\n                onClickMenuItem={(menu, obj) => {\r\n                    label.current!.innerText = JSON.stringify({\r\n                        id: obj.item?.id,\r\n                        text: obj.item?.content,\r\n                        isOpen: obj.item?.isOpen,\r\n                        url: obj.item?.url\r\n                    })\r\n                    input.current!.value = obj.item!.id\r\n                }}\r\n\r\n            />\r\n            <div style={{width: \"100%\", height: \"100%\", padding: 10, display: \"block\"}}>\r\n\r\n                <button onClick={() => {\r\n                    menu.current!.Expand()\r\n                }}>\r\n                    Expand\r\n                </button>\r\n                <button onClick={() => {\r\n                    menu.current!.Collapse()\r\n                }}>\r\n                    Collapse\r\n                </button>\r\n\r\n                <button onClick={() => {\r\n                    const m = new MenuItem('Addin');\r\n                    m.style = {color: \"red\", fontWeight: \"bold\"}\r\n                    m.AddItem(new MenuItem('sub_test')\r\n                        .AddItem(new MenuItem('sub_sub_test')\r\n                            .AddItem(new MenuItem('final')\r\n                                .AddItem(new MenuItem('sub_final')\r\n                                    .AddItem(new MenuItem('45'))))));\r\n                    menu.current!.AddItems(m)\r\n                }}>\r\n                    Add item\r\n                </button>\r\n\r\n                <button onClick={() => {\r\n                    if (input.current!.value && input.current!.value.length > 10) {\r\n                        menu.current!.DeleteItem(input.current!.value)\r\n                        input.current!.value = ''\r\n                        label.current!.innerText = ''\r\n\r\n                    } else {\r\n                        alert(\"id empty\")\r\n                    }\r\n\r\n                }}>\r\n                    Delete by id\r\n                </button>\r\n\r\n                <button onClick={() => {\r\n                    if (input.current!.value && input.current!.value.length > 10) {\r\n                        menu.current!.OpenMenuItemAndClick(input.current!.value)\r\n                    } else {\r\n                        alert(\"id empty\")\r\n                    }\r\n\r\n                }}>\r\n                    Find by id and click\r\n                </button>\r\n                <br/> <br/>\r\n                <input ref={input} type={\"text\"} style={{width: 400}}/>\r\n                <br/> <br/>\r\n                <div style={{width: \"100%\"}} ref={label}></div>\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n","import React, {useRef} from \"react\";\r\nimport {MenuItem, TreeMenu} from \"bsr-tree-virtual\";\r\nimport {MdOutlineSubdirectoryArrowRight} from \"react-icons/md\";\r\nimport {FaRegMinusSquare, FaRegPlusSquare} from \"react-icons/fa\";\r\n\r\nlet list:Array<MenuItem>=[]\r\nconst m= new MenuItem('test');\r\nm.style={color:\"green\",fontWeight:\"bold\"}\r\nm.AddItem(new MenuItem('sub_test')\r\n    .AddItem(new MenuItem('sub_sub_test')\r\n        .AddItem(new MenuItem('final')\r\n            .AddItem(new MenuItem('sub_final')\r\n                .AddItem(new MenuItem('45'))))));\r\n\r\nm.AddItem(new MenuItem('sub_test')\r\n    .AddItem(new MenuItem('sub_sub_test')\r\n        .AddItem(new MenuItem('final')\r\n            .AddItem(new MenuItem('sub_final')\r\n                .AddItem(new MenuItem('45'))))));\r\n\r\nm.AddItem(new MenuItem('sub_test')\r\n    .AddItem(new MenuItem('sub_sub_test')\r\n        .AddItem(new MenuItem('final')\r\n            .AddItem(new MenuItem('sub_final')\r\n                .AddItem(new MenuItem('45'))))));\r\nm.accessKey=\"22\"\r\nlist.push(m);\r\n\r\n\r\nexport default  function Fragment2(){\r\n    const menu = useRef<InstanceType<typeof TreeMenu>>(null)\r\n    const label = useRef<HTMLDivElement>(null)\r\n    const input = useRef<HTMLInputElement>(null)\r\n    return(\r\n        <div style={{display: \"flex\",width:\"100%\",height:\"100%\",padding:5}}>\r\n            <TreeMenu\r\n                style={{marginTop:10}}\r\n                useCheckBox={true}\r\n                ref={menu}\r\n                marginItem={20}\r\n                callbackVirtualSize={() => {\r\n                    return {\r\n                        wight: 600,\r\n                        height: 250\r\n                    }\r\n                }}\r\n                itemSize={33}\r\n                iconTree={<MdOutlineSubdirectoryArrowRight color={\"black\"} size={20}/>}\r\n                iconClose={<FaRegPlusSquare  color={\"black\"} size={20}/>}\r\n                iconOpen={<FaRegMinusSquare  color={\"black\"} size={20}/>}\r\n\r\n                items={list}\r\n                onClickMenuItem={(menu, obj) => {\r\n                    label.current!.innerText = JSON.stringify({\r\n                        id: obj.item?.id,\r\n                        text: obj.item?.content,\r\n                        isOpen: obj.item?.isOpen,\r\n                        url: obj.item?.url\r\n                    })\r\n                    input.current!.value = obj.item!.id\r\n                }}\r\n\r\n            />\r\n            <div style={{width: \"100%\", height: \"100%\", padding: 10, display: \"block\"}}>\r\n\r\n                <button onClick={() => {\r\n                    menu.current!.Expand()\r\n                }}>\r\n                    Expand\r\n                </button>\r\n                <button onClick={() => {\r\n                    menu.current!.Collapse()\r\n                }}>\r\n                    Collapse\r\n                </button>\r\n\r\n                <button onClick={() => {\r\n                    const m = new MenuItem('Addin');\r\n                    m.style = {color: \"red\", fontWeight: \"bold\"}\r\n                    m.AddItem(new MenuItem('sub_test')\r\n                        .AddItem(new MenuItem('sub_sub_test')\r\n                            .AddItem(new MenuItem('final')\r\n                                .AddItem(new MenuItem('sub_final')\r\n                                    .AddItem(new MenuItem('45'))))));\r\n                    menu.current!.AddItems(m)\r\n                }}>\r\n                    Add item\r\n                </button>\r\n\r\n                <button onClick={() => {\r\n                    if (input.current!.value && input.current!.value.length > 10) {\r\n                        menu.current!.DeleteItem(input.current!.value)\r\n                        input.current!.value = ''\r\n                        label.current!.innerText = ''\r\n\r\n                    } else {\r\n                        alert(\"id empty\")\r\n                    }\r\n\r\n                }}>\r\n                    Delete by id\r\n                </button>\r\n\r\n                <button onClick={() => {\r\n                    if (input.current!.value && input.current!.value.length > 10) {\r\n                        menu.current!.OpenMenuItemAndClick(input.current!.value)\r\n                    } else {\r\n                        alert(\"id empty\")\r\n                    }\r\n\r\n                }}>\r\n                    Find by id and click\r\n                </button>\r\n                <br/> <br/>\r\n                <input ref={input} type={\"text\"} style={{width: 400}}/>\r\n                <br/> <br/>\r\n                <div style={{width: \"100%\"}} ref={label}></div>\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n","import React, {useRef} from \"react\";\r\nimport {MenuItem, TreeMenu} from \"bsr-tree-virtual\";\r\nimport {FaRegMinusSquare, FaRegPlusSquare} from \"react-icons/fa\";\r\n\r\nlet list:Array<MenuItem>=[]\r\nconst m= new MenuItem('test');\r\nm.style={color:\"green\",fontWeight:\"bold\"}\r\nm.AddItem(new MenuItem('sub_test')\r\n    .AddItem(new MenuItem('sub_sub_test')\r\n        .AddItem(new MenuItem('final')\r\n            .AddItem(new MenuItem('sub_final')\r\n                .AddItem(new MenuItem('45'))))));\r\n\r\nm.AddItem(new MenuItem('sub_test')\r\n    .AddItem(new MenuItem('sub_sub_test')\r\n        .AddItem(new MenuItem('final')\r\n            .AddItem(new MenuItem('sub_final')\r\n                .AddItem(new MenuItem('45'))))));\r\n\r\nm.AddItem(new MenuItem('sub_test')\r\n    .AddItem(new MenuItem('sub_sub_test')\r\n        .AddItem(new MenuItem('final')\r\n            .AddItem(new MenuItem('sub_final')\r\n                .AddItem(new MenuItem('45'))))));\r\nm.accessKey=\"22\"\r\nlist.push(m);\r\n\r\n\r\nexport default  function Fragment3(){\r\n    const menu = useRef<InstanceType<typeof TreeMenu>>(null)\r\n    const label = useRef<HTMLDivElement>(null)\r\n    const input = useRef<HTMLInputElement>(null)\r\n    return(\r\n        <div style={{display: \"flex\",width:\"100%\",height:\"100%\",padding:5}}>\r\n            <TreeMenu\r\n\r\n                style={{marginTop:10}}\r\n                useCheckBox={false}\r\n                ref={menu}\r\n                marginItem={20}\r\n                callbackVirtualSize={() => {\r\n                    return {\r\n                        wight: 600,\r\n                        height: 250\r\n                    }\r\n                }}\r\n                itemSize={30}\r\n\r\n                iconClose={<FaRegPlusSquare  color={\"black\"} size={20}/>}\r\n                iconOpen={<FaRegMinusSquare  color={\"black\"} size={20}/>}\r\n\r\n                items={list}\r\n                onClickMenuItem={(menu, obj) => {\r\n                    label.current!.innerText = JSON.stringify({\r\n                        id: obj.item?.id,\r\n                        text: obj.item?.content,\r\n                        isOpen: obj.item?.isOpen,\r\n                        url: obj.item?.url\r\n                    })\r\n                    input.current!.value = obj.item!.id\r\n                }}\r\n\r\n            />\r\n            <div style={{width: \"100%\", height: \"100%\", padding: 10, display: \"block\"}}>\r\n\r\n                <button onClick={() => {\r\n                    menu.current!.Expand()\r\n                }}>\r\n                    Expand\r\n                </button>\r\n                <button onClick={() => {\r\n                    menu.current!.Collapse()\r\n                }}>\r\n                    Collapse\r\n                </button>\r\n\r\n                <button onClick={() => {\r\n                    const m = new MenuItem('Addin');\r\n                    m.style = {color: \"red\", fontWeight: \"bold\"}\r\n                    m.AddItem(new MenuItem('sub_test')\r\n                        .AddItem(new MenuItem('sub_sub_test')\r\n                            .AddItem(new MenuItem('final')\r\n                                .AddItem(new MenuItem('sub_final')\r\n                                    .AddItem(new MenuItem('45'))))));\r\n                    menu.current!.AddItems(m)\r\n                }}>\r\n                    Add item\r\n                </button>\r\n\r\n                <button onClick={() => {\r\n                    if (input.current!.value && input.current!.value.length > 10) {\r\n                        menu.current!.DeleteItem(input.current!.value)\r\n                        input.current!.value = ''\r\n                        label.current!.innerText = ''\r\n\r\n                    } else {\r\n                        alert(\"id empty\")\r\n                    }\r\n\r\n                }}>\r\n                    Delete by id\r\n                </button>\r\n\r\n                <button onClick={() => {\r\n                    if (input.current!.value && input.current!.value.length > 10) {\r\n                        menu.current!.OpenMenuItemAndClick(input.current!.value)\r\n                    } else {\r\n                        alert(\"id empty\")\r\n                    }\r\n\r\n                }}>\r\n                    Find by id and click\r\n                </button>\r\n                <br/> <br/>\r\n                <input ref={input} type={\"text\"} style={{width: 400}}/>\r\n                <br/> <br/>\r\n                <div style={{width: \"100%\"}} ref={label}></div>\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n","import React, {useRef} from \"react\";\r\nimport {MenuItem, TreeMenu} from \"bsr-tree-virtual\";\r\n\r\nimport { FaAngleDoubleRight } from \"react-icons/fa\";\r\nimport { FaAngleDoubleDown } from \"react-icons/fa\";\r\nimport { FcViewDetails } from \"react-icons/fc\";\r\n\r\nlet list:Array<MenuItem>=[]\r\nconst m= new MenuItem('test');\r\nm.style={color:\"green\",fontWeight:\"bold\"}\r\nm.AddItem(new MenuItem('sub_test',<FcViewDetails/>)\r\n    .AddItem(new MenuItem('sub_sub_test',<FcViewDetails/>)\r\n        .AddItem(new MenuItem('final',<FcViewDetails/>)\r\n            .AddItem(new MenuItem('sub_final',<FcViewDetails/>)\r\n                .AddItem(new MenuItem('45',<FcViewDetails/>))))));\r\n\r\nm.AddItem(new MenuItem('sub_test',<FcViewDetails/>)\r\n    .AddItem(new MenuItem('sub_sub_test',<FcViewDetails/>)\r\n        .AddItem(new MenuItem('final',<FcViewDetails/>)\r\n            .AddItem(new MenuItem('sub_final')\r\n                .AddItem(new MenuItem('45'))))));\r\n\r\nm.AddItem(new MenuItem('sub_test',<FcViewDetails/>)\r\n    .AddItem(new MenuItem('sub_sub_test',<FcViewDetails/>)\r\n        .AddItem(new MenuItem('final',<FcViewDetails/>)\r\n            .AddItem(new MenuItem('sub_final',<FcViewDetails/>)\r\n                .AddItem(new MenuItem('45',<FcViewDetails/>))))));\r\nm.accessKey=\"22\"\r\nm.icon=<FcViewDetails/>\r\nlist.push(m);\r\n\r\n\r\nexport default  function Fragment1(){\r\n    const menu = useRef<InstanceType<typeof TreeMenu>>(null)\r\n    const label = useRef<HTMLDivElement>(null)\r\n    const input = useRef<HTMLInputElement>(null)\r\n    return(\r\n        <div style={{display: \"flex\",width:\"100%\",height:\"100%\",padding:5}}>\r\n            <TreeMenu\r\n                style={{marginTop:10}}\r\n                useCheckBox={true}\r\n                ref={menu}\r\n                marginItem={20}\r\n                callbackVirtualSize={() => {\r\n                    return {\r\n                        wight: 600,\r\n                        height: 250\r\n                    }\r\n                }}\r\n                itemSize={33}\r\n\r\n\r\n                iconClose={<FaAngleDoubleRight  color={\"black\"} size={15}/>}\r\n                iconOpen={<FaAngleDoubleDown  color={\"black\"} size={15}/>}\r\n\r\n                items={list}\r\n                onClickMenuItem={(menu, obj) => {\r\n                    label.current!.innerText = JSON.stringify({\r\n                        id: obj.item?.id,\r\n                        text: obj.item?.content,\r\n                        isOpen: obj.item?.isOpen,\r\n                        url: obj.item?.url\r\n                    })\r\n                    input.current!.value = obj.item!.id\r\n                }}\r\n\r\n            />\r\n            <div style={{width: \"100%\", height: \"100%\", padding: 10, display: \"block\"}}>\r\n\r\n                <button onClick={() => {\r\n                    menu.current!.Expand()\r\n                }}>\r\n                    Expand\r\n                </button>\r\n                <button onClick={() => {\r\n                    menu.current!.Collapse()\r\n                }}>\r\n                    Collapse\r\n                </button>\r\n\r\n                <button onClick={() => {\r\n                    const m = new MenuItem('Addin');\r\n                    m.style = {color: \"red\", fontWeight: \"bold\"}\r\n                    m.AddItem(new MenuItem('sub_test')\r\n                        .AddItem(new MenuItem('sub_sub_test')\r\n                            .AddItem(new MenuItem('final')\r\n                                .AddItem(new MenuItem('sub_final')\r\n                                    .AddItem(new MenuItem('45'))))));\r\n                    menu.current!.AddItems(m)\r\n                }}>\r\n                    Add item\r\n                </button>\r\n\r\n                <button onClick={() => {\r\n                    if (input.current!.value && input.current!.value.length > 10) {\r\n                        menu.current!.DeleteItem(input.current!.value)\r\n                        input.current!.value = ''\r\n                        label.current!.innerText = ''\r\n\r\n                    } else {\r\n                        alert(\"id empty\")\r\n                    }\r\n\r\n                }}>\r\n                    Delete by id\r\n                </button>\r\n\r\n                <button onClick={() => {\r\n                    if (input.current!.value && input.current!.value.length > 10) {\r\n                        menu.current!.OpenMenuItemAndClick(input.current!.value)\r\n                    } else {\r\n                        alert(\"id empty\")\r\n                    }\r\n\r\n                }}>\r\n                    Find by id and click\r\n                </button>\r\n                <br/> <br/>\r\n                <input ref={input} type={\"text\"} style={{width: 400}}/>\r\n                <br/> <br/>\r\n                <div style={{width: \"100%\"}} ref={label}></div>\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n","\r\n\r\n\r\n\r\nimport Fragment1 from \"./Examples/Fragment1\";\r\nimport Fragment2 from \"./Examples/Fragment2\";\r\nimport Fragment3 from \"./Examples/Fragment3\";\r\nimport Fragment4 from \"./Examples/Fragment4\";\r\n\r\n\r\nexport default function P5_1(){\r\n    return(\r\n        <div style={{display:\"block\",width:\"100%\"}}>\r\n            <Fragment1/>\r\n            <Fragment2/>\r\n            <Fragment3/>\r\n            <Fragment4/>\r\n        </div>\r\n    )\r\n\r\n}\r\n"],"names":["GetSimpleCollection","count","icon","index","List","i","root","CreateItem","content","style","color","fontWeight","j","subRoot","concat","k","_subRoot$items","subRoot1","l","_subRoot1$items","subRoot2","m","_subRoot2$items","subRoot3","accessKey","items","push","console","log","Fragment1","menu","useRef","label","input","_jsxs","display","width","height","padding","children","_jsx","TreeMenu","marginTop","useCheckBox","ref","marginItem","callbackVirtualSize","wight","itemSize","iconTree","MdOutlineSubdirectoryArrowRight","size","iconClose","FaRegPlusSquare","iconOpen","FaRegMinusSquare","FcViewDetails","onClickMenuItem","obj","_obj$item","_obj$item2","_obj$item3","_obj$item4","current","innerText","JSON","stringify","id","item","text","isOpen","url","value","onClick","Expand","Collapse","MenuItem","AddItem","AddItems","length","DeleteItem","alert","OpenMenuItemAndClick","type","list","Fragment2","Fragment3","FaAngleDoubleRight","FaAngleDoubleDown","P5_1","Fragment4"],"sourceRoot":""}