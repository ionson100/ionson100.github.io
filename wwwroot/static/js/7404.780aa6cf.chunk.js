"use strict";(self.webpackChunkionson100_github_io=self.webpackChunkionson100_github_io||[]).push([[7404],{760:(e,t,n)=>{n.d(t,{Cm:()=>l,L8:()=>c,MM:()=>o});var r=n(329),s=n(3844),a=n(579);const o=e=>{let{code:t}=e;return(0,a.jsx)("div",{style:{width:"fit-content"},children:(0,a.jsx)(r.A,{language:"jsx",style:s.A,children:t})})},l=e=>{let{code:t}=e;return(0,a.jsx)("div",{style:{width:"fit-content"},children:(0,a.jsx)(r.A,{language:"css",style:s.A,children:t})})},c=e=>{let{code:t}=e;return(0,a.jsx)("div",{style:{width:"fit-content"},children:(0,a.jsx)(r.A,{language:"csharp",style:s.A,children:t})})}},7404:(e,t,n)=>{n.r(t),n.d(t,{default:()=>c});var r=n(5043),s=n(1010),a=n(760),o=n(579);const l="\nimport React, {useRef} from \"react\";\nimport AvatarUploader from 'bsr-sau'\nimport 'bsr-sau/dist/index.css'\n\nexport default function P3_9() {\n    const mRefAvatarRef = useRef<InstanceType<typeof AvatarUploader>>(null)\n    return (\n        <>\n            <AvatarUploader ref={mRefAvatarRef}/>\n            <br/>\n            <button onClick={()=>{\n               const dataForForm=mRefAvatarRef.current!.getCanvasFormData()\n                alert(dataForForm)\n            }}>I will send the data to the server myself</button>\n        </>\n    )\n}\n";function c(){const e=(0,r.useRef)(null);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.A,{ref:e}),(0,o.jsx)("br",{}),(0,o.jsx)("button",{onClick:()=>{const t=e.current.getCanvasFormData();alert(t)},children:"I will send the data to the server myself"}),(0,o.jsx)("div",{children:(0,o.jsx)(a.MM,{code:l})})]})}}}]);
//# sourceMappingURL=7404.780aa6cf.chunk.js.map