{"version":3,"file":"static/js/1061.29c9132e.chunk.js","mappings":"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","sources":["ViewStorage/menu/bsrtree/Examples/Fragment1.tsx","ViewStorage/menu/bsrtree/Examples/Fragment2.tsx","ViewStorage/menu/bsrtree/Examples/Fragment3.tsx","ViewStorage/menu/bsrtree/Examples/Fragment4.tsx","ViewStorage/menu/bsrtree/5-1.tsx","ViewStorage/menu/bsrtree/ItemFactory.ts"],"sourcesContent":["import React, {useRef} from \"react\";\r\nimport {MenuItem, TreeMenu} from \"bsr-tree-virtual\";\r\nimport {MdOutlineSubdirectoryArrowRight} from \"react-icons/md\";\r\nimport {FaRegMinusSquare, FaRegPlusSquare} from \"react-icons/fa\";\r\nimport {GetSimpleCollection} from \"../ItemFactory\";\r\n\r\nimport { FcViewDetails } from \"react-icons/fc\";\r\n\r\n\r\n\r\n\r\nexport default  function Fragment1(){\r\n    const menu = useRef<InstanceType<typeof TreeMenu>>(null)\r\n    const label = useRef<HTMLDivElement>(null)\r\n    const input = useRef<HTMLInputElement>(null)\r\n    return(\r\n        <div style={{display: \"flex\",width:\"100%\",height:\"100%\",padding:5}}>\r\n            <TreeMenu\r\n\r\n                ruleOpen={true}\r\n                style={{marginTop:10}}\r\n                useCheckBox={false}\r\n                ref={menu}\r\n                marginItem={20}\r\n                callbackVirtualSize={() => {\r\n                    return {\r\n                        wight: 600,\r\n                        height: 250\r\n                    }\r\n                }}\r\n                itemSize={30}\r\n\r\n                iconTree={<MdOutlineSubdirectoryArrowRight color={\"black\"} size={20}/>}\r\n                iconClose={<FaRegPlusSquare  color={\"black\"} size={20}/>}\r\n                iconOpen={<FaRegMinusSquare  color={\"black\"} size={20}/>}\r\n\r\n                items={GetSimpleCollection(4,<FcViewDetails/>)}\r\n                onClickMenuItem={(menu, obj) => {\r\n                    label.current!.innerText = JSON.stringify({\r\n                        id: obj.item?.id,\r\n                        text: obj.item?.content,\r\n                        isOpen: obj.item?.isOpen,\r\n                        url: obj.item?.url\r\n                    })\r\n                    input.current!.value = obj.item!.id\r\n                }}\r\n\r\n            />\r\n            <div style={{width: \"100%\", height: \"100%\", padding: 10, display: \"block\"}}>\r\n\r\n                <button onClick={() => {\r\n                    menu.current!.Expand()\r\n                }}>\r\n                    Expand\r\n                </button>\r\n                <button onClick={() => {\r\n                    menu.current!.Collapse()\r\n                }}>\r\n                    Collapse\r\n                </button>\r\n\r\n                <button onClick={() => {\r\n                    const m = new MenuItem('Addin');\r\n                    m.style = {color: \"red\", fontWeight: \"bold\"}\r\n                    m.AddItem(new MenuItem('sub_test')\r\n                        .AddItem(new MenuItem('sub_sub_test')\r\n                            .AddItem(new MenuItem('final')\r\n                                .AddItem(new MenuItem('sub_final')\r\n                                    .AddItem(new MenuItem('45'))))));\r\n                    menu.current!.AddItems(m)\r\n                }}>\r\n                    Add item\r\n                </button>\r\n\r\n                <button onClick={() => {\r\n                    if (input.current!.value && input.current!.value.length > 10) {\r\n                        menu.current!.DeleteItem(input.current!.value)\r\n                        input.current!.value = ''\r\n                        label.current!.innerText = ''\r\n\r\n                    } else {\r\n                        alert(\"id empty\")\r\n                    }\r\n\r\n                }}>\r\n                    Delete by id\r\n                </button>\r\n\r\n                <button onClick={() => {\r\n                    if (input.current!.value && input.current!.value.length > 10) {\r\n                        menu.current!.OpenMenuItemAndClick(input.current!.value)\r\n                    } else {\r\n                        alert(\"id empty\")\r\n                    }\r\n\r\n                }}>\r\n                    Find by id and click\r\n                </button>\r\n                <br/> <br/>\r\n                <input ref={input} type={\"text\"} style={{width: 400}}/>\r\n                <br/> <br/>\r\n                <div style={{width: \"100%\"}} ref={label}></div>\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n","import React, {useRef} from \"react\";\r\nimport {MenuItem, TreeMenu} from \"bsr-tree-virtual\";\r\nimport {MdOutlineSubdirectoryArrowRight} from \"react-icons/md\";\r\nimport {FaRegMinusSquare, FaRegPlusSquare} from \"react-icons/fa\";\r\n\r\nlet list:Array<MenuItem>=[]\r\nconst m= new MenuItem('test');\r\nm.style={color:\"green\",fontWeight:\"bold\"}\r\nm.AddItem(new MenuItem('sub_test')\r\n    .AddItem(new MenuItem('sub_sub_test')\r\n        .AddItem(new MenuItem('final')\r\n            .AddItem(new MenuItem('sub_final')\r\n                .AddItem(new MenuItem('45'))))));\r\n\r\nm.AddItem(new MenuItem('sub_test')\r\n    .AddItem(new MenuItem('sub_sub_test')\r\n        .AddItem(new MenuItem('final')\r\n            .AddItem(new MenuItem('sub_final')\r\n                .AddItem(new MenuItem('45'))))));\r\n\r\nm.AddItem(new MenuItem('sub_test')\r\n    .AddItem(new MenuItem('sub_sub_test')\r\n        .AddItem(new MenuItem('final')\r\n            .AddItem(new MenuItem('sub_final')\r\n                .AddItem(new MenuItem('45'))))));\r\nm.accessKey=\"22\"\r\nlist.push(m);\r\n\r\n\r\nexport default  function Fragment2(){\r\n    const menu = useRef<InstanceType<typeof TreeMenu>>(null)\r\n    const label = useRef<HTMLDivElement>(null)\r\n    const input = useRef<HTMLInputElement>(null)\r\n    return(\r\n        <div style={{display: \"flex\",width:\"100%\",height:\"100%\",padding:5}}>\r\n            <TreeMenu\r\n                style={{marginTop:10}}\r\n                useCheckBox={true}\r\n                ref={menu}\r\n                marginItem={20}\r\n                callbackVirtualSize={() => {\r\n                    return {\r\n                        wight: 600,\r\n                        height: 250\r\n                    }\r\n                }}\r\n                itemSize={33}\r\n                iconTree={<MdOutlineSubdirectoryArrowRight color={\"black\"} size={20}/>}\r\n                iconClose={<FaRegPlusSquare  color={\"black\"} size={20}/>}\r\n                iconOpen={<FaRegMinusSquare  color={\"black\"} size={20}/>}\r\n\r\n                items={list}\r\n                onClickMenuItem={(menu, obj) => {\r\n                    label.current!.innerText = JSON.stringify({\r\n                        id: obj.item?.id,\r\n                        text: obj.item?.content,\r\n                        isOpen: obj.item?.isOpen,\r\n                        url: obj.item?.url\r\n                    })\r\n                    input.current!.value = obj.item!.id\r\n                }}\r\n\r\n            />\r\n            <div style={{width: \"100%\", height: \"100%\", padding: 10, display: \"block\"}}>\r\n\r\n                <button onClick={() => {\r\n                    menu.current!.Expand()\r\n                }}>\r\n                    Expand\r\n                </button>\r\n                <button onClick={() => {\r\n                    menu.current!.Collapse()\r\n                }}>\r\n                    Collapse\r\n                </button>\r\n\r\n                <button onClick={() => {\r\n                    const m = new MenuItem('Addin');\r\n                    m.style = {color: \"red\", fontWeight: \"bold\"}\r\n                    m.AddItem(new MenuItem('sub_test')\r\n                        .AddItem(new MenuItem('sub_sub_test')\r\n                            .AddItem(new MenuItem('final')\r\n                                .AddItem(new MenuItem('sub_final')\r\n                                    .AddItem(new MenuItem('45'))))));\r\n                    menu.current!.AddItems(m)\r\n                }}>\r\n                    Add item\r\n                </button>\r\n\r\n                <button onClick={() => {\r\n                    if (input.current!.value && input.current!.value.length > 10) {\r\n                        menu.current!.DeleteItem(input.current!.value)\r\n                        input.current!.value = ''\r\n                        label.current!.innerText = ''\r\n\r\n                    } else {\r\n                        alert(\"id empty\")\r\n                    }\r\n\r\n                }}>\r\n                    Delete by id\r\n                </button>\r\n\r\n                <button onClick={() => {\r\n                    if (input.current!.value && input.current!.value.length > 10) {\r\n                        menu.current!.OpenMenuItemAndClick(input.current!.value)\r\n                    } else {\r\n                        alert(\"id empty\")\r\n                    }\r\n\r\n                }}>\r\n                    Find by id and click\r\n                </button>\r\n                <br/> <br/>\r\n                <input ref={input} type={\"text\"} style={{width: 400}}/>\r\n                <br/> <br/>\r\n                <div style={{width: \"100%\"}} ref={label}></div>\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n","import React, {useRef} from \"react\";\r\nimport {MenuItem, TreeMenu} from \"bsr-tree-virtual\";\r\nimport {FaRegMinusSquare, FaRegPlusSquare} from \"react-icons/fa\";\r\n\r\nlet list:Array<MenuItem>=[]\r\nconst m= new MenuItem('test');\r\nm.style={color:\"green\",fontWeight:\"bold\"}\r\nm.AddItem(new MenuItem('sub_test')\r\n    .AddItem(new MenuItem('sub_sub_test')\r\n        .AddItem(new MenuItem('final')\r\n            .AddItem(new MenuItem('sub_final')\r\n                .AddItem(new MenuItem('45'))))));\r\n\r\nm.AddItem(new MenuItem('sub_test')\r\n    .AddItem(new MenuItem('sub_sub_test')\r\n        .AddItem(new MenuItem('final')\r\n            .AddItem(new MenuItem('sub_final')\r\n                .AddItem(new MenuItem('45'))))));\r\n\r\nm.AddItem(new MenuItem('sub_test')\r\n    .AddItem(new MenuItem('sub_sub_test')\r\n        .AddItem(new MenuItem('final')\r\n            .AddItem(new MenuItem('sub_final')\r\n                .AddItem(new MenuItem('45'))))));\r\nm.accessKey=\"22\"\r\nlist.push(m);\r\n\r\n\r\nexport default  function Fragment3(){\r\n    const menu = useRef<InstanceType<typeof TreeMenu>>(null)\r\n    const label = useRef<HTMLDivElement>(null)\r\n    const input = useRef<HTMLInputElement>(null)\r\n    return(\r\n        <div style={{display: \"flex\",width:\"100%\",height:\"100%\",padding:5}}>\r\n            <TreeMenu\r\n\r\n                style={{marginTop:10}}\r\n                useCheckBox={false}\r\n                ref={menu}\r\n                marginItem={20}\r\n                callbackVirtualSize={() => {\r\n                    return {\r\n                        wight: 600,\r\n                        height: 250\r\n                    }\r\n                }}\r\n                itemSize={30}\r\n\r\n                iconClose={<FaRegPlusSquare  color={\"black\"} size={20}/>}\r\n                iconOpen={<FaRegMinusSquare  color={\"black\"} size={20}/>}\r\n\r\n                items={list}\r\n                onClickMenuItem={(menu, obj) => {\r\n                    label.current!.innerText = JSON.stringify({\r\n                        id: obj.item?.id,\r\n                        text: obj.item?.content,\r\n                        isOpen: obj.item?.isOpen,\r\n                        url: obj.item?.url\r\n                    })\r\n                    input.current!.value = obj.item!.id\r\n                }}\r\n\r\n            />\r\n            <div style={{width: \"100%\", height: \"100%\", padding: 10, display: \"block\"}}>\r\n\r\n                <button onClick={() => {\r\n                    menu.current!.Expand()\r\n                }}>\r\n                    Expand\r\n                </button>\r\n                <button onClick={() => {\r\n                    menu.current!.Collapse()\r\n                }}>\r\n                    Collapse\r\n                </button>\r\n\r\n                <button onClick={() => {\r\n                    const m = new MenuItem('Addin');\r\n                    m.style = {color: \"red\", fontWeight: \"bold\"}\r\n                    m.AddItem(new MenuItem('sub_test')\r\n                        .AddItem(new MenuItem('sub_sub_test')\r\n                            .AddItem(new MenuItem('final')\r\n                                .AddItem(new MenuItem('sub_final')\r\n                                    .AddItem(new MenuItem('45'))))));\r\n                    menu.current!.AddItems(m)\r\n                }}>\r\n                    Add item\r\n                </button>\r\n\r\n                <button onClick={() => {\r\n                    if (input.current!.value && input.current!.value.length > 10) {\r\n                        menu.current!.DeleteItem(input.current!.value)\r\n                        input.current!.value = ''\r\n                        label.current!.innerText = ''\r\n\r\n                    } else {\r\n                        alert(\"id empty\")\r\n                    }\r\n\r\n                }}>\r\n                    Delete by id\r\n                </button>\r\n\r\n                <button onClick={() => {\r\n                    if (input.current!.value && input.current!.value.length > 10) {\r\n                        menu.current!.OpenMenuItemAndClick(input.current!.value)\r\n                    } else {\r\n                        alert(\"id empty\")\r\n                    }\r\n\r\n                }}>\r\n                    Find by id and click\r\n                </button>\r\n                <br/> <br/>\r\n                <input ref={input} type={\"text\"} style={{width: 400}}/>\r\n                <br/> <br/>\r\n                <div style={{width: \"100%\"}} ref={label}></div>\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n","import React, {useRef} from \"react\";\r\nimport {MenuItem, TreeMenu} from \"bsr-tree-virtual\";\r\n\r\nimport { FaAngleDoubleRight } from \"react-icons/fa\";\r\nimport { FaAngleDoubleDown } from \"react-icons/fa\";\r\nimport { FcViewDetails } from \"react-icons/fc\";\r\n\r\nlet list:Array<MenuItem>=[]\r\nconst m= new MenuItem('test');\r\nm.style={color:\"green\",fontWeight:\"bold\"}\r\nm.AddItem(new MenuItem('sub_test',<FcViewDetails/>)\r\n    .AddItem(new MenuItem('sub_sub_test',<FcViewDetails/>)\r\n        .AddItem(new MenuItem('final',<FcViewDetails/>)\r\n            .AddItem(new MenuItem('sub_final',<FcViewDetails/>)\r\n                .AddItem(new MenuItem('45',<FcViewDetails/>))))));\r\n\r\nm.AddItem(new MenuItem('sub_test',<FcViewDetails/>)\r\n    .AddItem(new MenuItem('sub_sub_test',<FcViewDetails/>)\r\n        .AddItem(new MenuItem('final',<FcViewDetails/>)\r\n            .AddItem(new MenuItem('sub_final')\r\n                .AddItem(new MenuItem('45'))))));\r\n\r\nm.AddItem(new MenuItem('sub_test',<FcViewDetails/>)\r\n    .AddItem(new MenuItem('sub_sub_test',<FcViewDetails/>)\r\n        .AddItem(new MenuItem('final',<FcViewDetails/>)\r\n            .AddItem(new MenuItem('sub_final',<FcViewDetails/>)\r\n                .AddItem(new MenuItem('45',<FcViewDetails/>))))));\r\nm.accessKey=\"22\"\r\nm.icon=<FcViewDetails/>\r\nlist.push(m);\r\n\r\n\r\nexport default  function Fragment1(){\r\n    const menu = useRef<InstanceType<typeof TreeMenu>>(null)\r\n    const label = useRef<HTMLDivElement>(null)\r\n    const input = useRef<HTMLInputElement>(null)\r\n    return(\r\n        <div style={{display: \"flex\",width:\"100%\",height:\"100%\",padding:5}}>\r\n            <TreeMenu\r\n                style={{marginTop:10}}\r\n                useCheckBox={true}\r\n                ref={menu}\r\n                marginItem={20}\r\n                callbackVirtualSize={() => {\r\n                    return {\r\n                        wight: 600,\r\n                        height: 250\r\n                    }\r\n                }}\r\n                itemSize={33}\r\n\r\n\r\n                iconClose={<FaAngleDoubleRight  color={\"black\"} size={15}/>}\r\n                iconOpen={<FaAngleDoubleDown  color={\"black\"} size={15}/>}\r\n\r\n                items={list}\r\n                onClickMenuItem={(menu, obj) => {\r\n                    label.current!.innerText = JSON.stringify({\r\n                        id: obj.item?.id,\r\n                        text: obj.item?.content,\r\n                        isOpen: obj.item?.isOpen,\r\n                        url: obj.item?.url\r\n                    })\r\n                    input.current!.value = obj.item!.id\r\n                }}\r\n\r\n            />\r\n            <div style={{width: \"100%\", height: \"100%\", padding: 10, display: \"block\"}}>\r\n\r\n                <button onClick={() => {\r\n                    menu.current!.Expand()\r\n                }}>\r\n                    Expand\r\n                </button>\r\n                <button onClick={() => {\r\n                    menu.current!.Collapse()\r\n                }}>\r\n                    Collapse\r\n                </button>\r\n\r\n                <button onClick={() => {\r\n                    const m = new MenuItem('Addin');\r\n                    m.style = {color: \"red\", fontWeight: \"bold\"}\r\n                    m.AddItem(new MenuItem('sub_test')\r\n                        .AddItem(new MenuItem('sub_sub_test')\r\n                            .AddItem(new MenuItem('final')\r\n                                .AddItem(new MenuItem('sub_final')\r\n                                    .AddItem(new MenuItem('45'))))));\r\n                    menu.current!.AddItems(m)\r\n                }}>\r\n                    Add item\r\n                </button>\r\n\r\n                <button onClick={() => {\r\n                    if (input.current!.value && input.current!.value.length > 10) {\r\n                        menu.current!.DeleteItem(input.current!.value)\r\n                        input.current!.value = ''\r\n                        label.current!.innerText = ''\r\n\r\n                    } else {\r\n                        alert(\"id empty\")\r\n                    }\r\n\r\n                }}>\r\n                    Delete by id\r\n                </button>\r\n\r\n                <button onClick={() => {\r\n                    if (input.current!.value && input.current!.value.length > 10) {\r\n                        menu.current!.OpenMenuItemAndClick(input.current!.value)\r\n                    } else {\r\n                        alert(\"id empty\")\r\n                    }\r\n\r\n                }}>\r\n                    Find by id and click\r\n                </button>\r\n                <br/> <br/>\r\n                <input ref={input} type={\"text\"} style={{width: 400}}/>\r\n                <br/> <br/>\r\n                <div style={{width: \"100%\"}} ref={label}></div>\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n","\r\n\r\n\r\n\r\nimport Fragment1 from \"./Examples/Fragment1\";\r\nimport Fragment2 from \"./Examples/Fragment2\";\r\nimport Fragment3 from \"./Examples/Fragment3\";\r\nimport Fragment4 from \"./Examples/Fragment4\";\r\n\r\n\r\nexport default function P5_1(){\r\n    return(\r\n        <div style={{display:\"block\",width:\"100%\"}}>\r\n            <Fragment1/>\r\n            <Fragment2/>\r\n            <Fragment3/>\r\n            <Fragment4/>\r\n        </div>\r\n    )\r\n\r\n}\r\n","import {MenuItem, CreateItem} from \"bsr-tree-virtual\";\r\n\r\n\r\nexport function GetSimpleCollection(count: number, icon?: any) {\r\n\r\nlet index=0\r\n    let List: Array<MenuItem> = [];\r\n    for (let i = 0; i < count; i++) {\r\n        index+=1\r\n        const root = CreateItem({content: \"root : \" + i, style: {color: \"green\",fontWeight:\"bold\"},icon: icon});\r\n\r\n        for (let j = 0; j < count; j++) {\r\n            index+=1\r\n            const subRoot = CreateItem({content: `item:${i} ${j}`,icon: icon});\r\n\r\n            for (let k = 0; k < count; k++) {\r\n                index+=1\r\n                const subRoot1 = CreateItem({content: `item:${i} ${j} ${k}`, icon:icon})\r\n\r\n                for (let l = 0; l < count; l++) {\r\n                    index+=1\r\n                    const subRoot2 = CreateItem({content: `item:${i} ${j} ${k} ${l}`,icon:icon});\r\n                    for (let m = 0; m < count; m++) {\r\n                        const subRoot3 = CreateItem({content: `item:${i} ${j} ${k} ${l} ${m}`, style: {color: \"red\"},icon:icon,accessKey:\"44\"});\r\n                        subRoot2.items?.push(subRoot3)\r\n                    }\r\n\r\n                    subRoot1.items?.push(subRoot2)\r\n                }\r\n\r\n                subRoot.items?.push(subRoot1)\r\n            }\r\n            root.items!.push(subRoot);\r\n        }\r\n        List.push(root)\r\n    }\r\n\r\n    return List\r\n}\r\n"],"names":["Fragment1","menu","useRef","label","input","_jsxs","style","display","width","height","padding","children","_jsx","TreeMenu","ruleOpen","marginTop","useCheckBox","ref","marginItem","callbackVirtualSize","wight","itemSize","iconTree","MdOutlineSubdirectoryArrowRight","color","size","iconClose","FaRegPlusSquare","iconOpen","FaRegMinusSquare","items","GetSimpleCollection","FcViewDetails","onClickMenuItem","obj","_obj$item","_obj$item2","_obj$item3","_obj$item4","current","innerText","JSON","stringify","id","item","text","content","isOpen","url","value","onClick","Expand","Collapse","m","MenuItem","fontWeight","AddItem","AddItems","length","DeleteItem","alert","OpenMenuItemAndClick","type","list","Fragment2","accessKey","push","Fragment3","FaAngleDoubleRight","FaAngleDoubleDown","P5_1","Fragment4","icon","count","index","List","i","root","CreateItem","j","subRoot","k","_subRoot$items","subRoot1","l","_subRoot1$items","subRoot2","_subRoot2$items","subRoot3"],"sourceRoot":""}