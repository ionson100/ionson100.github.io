"use strict";(self.webpackChunkionson100_github_io=self.webpackChunkionson100_github_io||[]).push([[9785],{59785:(l,e,n)=>{n.r(e),n.d(e,{default:()=>a});var c=n(65043),i=n(30567),r=(n(96960),n(1141)),t=n(70579);function o(){const l=[];return l.push(["cell1","cell2","cell3","cell4"]),l.push(["cell1","cell2","cell3","cell4"]),l.push(["cell1","cell2","cell3","cell4"]),l.push(["cell1","cell2","cell3","cell4"]),l}function a(){const l=(0,c.useRef)(null),e=(0,c.useRef)(null);return(0,t.jsxs)("div",{id:"table-12",style:{paddingTop:10},children:[(0,t.jsx)("label",{className:"label-then",ref:l}),(0,t.jsx)("br",{}),(0,t.jsx)("label",{className:"label-then",ref:e}),(0,t.jsxs)(i.XI,{id:"my-table",onClickColumn:(n,c)=>{e.current.innerText="",l.current.innerText=["Click Header Column  - id Table:",n,"  Index column:",c].join("")},onClickRow:(e,n)=>{l.current.innerText=["Click Row - id Table:",e,"  Index row:",n].join("")},onClickCell:(l,n,c)=>{e.current.innerText=["Click Cell  - id Table:",l,"  Index row:",n,"  Index cell of row:",c].join("")},rowItems:o(),style:{width:"700px"},children:[(0,t.jsx)(i.VP,{children:"Column:1"}),(0,t.jsx)(i.VP,{children:"Column:2"}),(0,t.jsx)(i.VP,{children:"Column:3"}),(0,t.jsx)(i.VP,{children:"Column:4"})]}),(0,t.jsx)("br",{}),(0,t.jsx)("div",{children:(0,t.jsx)(r.MM,{code:"import React, {ReactElement, useRef} from \"react\";\nimport {Table, Column, ICell,} from \"bsr-table\";\nimport \"bsr-table/dist/index.css\"\n\n\nexport default function P9_3() {\n    const mRefLabel = useRef<HTMLLabelElement>(null)\n    const mRefLabelCell = useRef<HTMLLabelElement>(null)\n    function getDataTable(): Array<Array<string | ReactElement | ICell>> {\n    const list: Array<Array<string | ReactElement | ICell>> = [];\n        list.push(['cell1', 'cell2', 'cell3', 'cell4'])\n        list.push(['cell1', 'cell2', 'cell3', 'cell4'])\n        list.push(['cell1', 'cell2', 'cell3', 'cell4'])\n        list.push(['cell1', 'cell2', 'cell3', 'cell4'])\n    return list;\n}\n    \n    return <div id={'table-12'} style={{paddingTop: 10}}>\n        <label className={'label-then'} ref={mRefLabel}></label>\n        <br/>\n        <label className={'label-then'} ref={mRefLabelCell}></label>\n        <Table\n            id={'my-table'}\n            onClickColumn={(id, index) => {\n                mRefLabelCell.current!.innerText = ''\n                mRefLabel.current!.innerText = [\"Click Header Column  - id Table:\" ,id,\"  Index column:\",index].join('')\n            }}\n            onClickRow={(id, index) => {\n                mRefLabel.current!.innerText = [\"Click Row - id Table:\",id,\"  Index row:\",index].join('');\n            }}\n\n            onClickCell={(id, row, column) => {\n                mRefLabelCell.current!.innerText = [\"Click Cell  - id Table:\",id,\"  Index row:\",row,\"  Index cell of row:\",column].join('');\n            }}\n            rowItems={getDataTable()}\n            style={{width: \"700px\"}}>\n            <Column>Column:1</Column>\n            <Column>Column:2</Column>\n            <Column>Column:3</Column>\n            <Column>Column:4</Column>\n        </Table>\n    </div>\n}"})})]})}},96960:()=>{}}]);
//# sourceMappingURL=9785.7d4b81da.chunk.js.map