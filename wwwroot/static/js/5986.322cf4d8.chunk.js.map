{"version":3,"file":"static/js/5986.322cf4d8.chunk.js","mappings":"mLAIA,MAAMA,EAAI,60CAyDK,SAASC,IAEpB,OACIC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,0BAAsBC,EAAAA,EAAAA,KAAA,SAAK,oCACMA,EAAAA,EAAAA,KAAA,SAAK,wDACeA,EAAAA,EAAAA,KAAA,UACpDA,EAAAA,EAAAA,KAAA,SAAK,yCACgCA,EAAAA,EAAAA,KAAA,SAAK,wCACNA,EAAAA,EAAAA,KAAA,SAAK,oEACuBA,EAAAA,EAAAA,KAAA,SAAK,+EACMA,EAAAA,EAAAA,KAAA,SAAK,8DACtBA,EAAAA,EAAAA,KAAA,SAAK,0EACOA,EAAAA,EAAAA,KAAA,SAAK,6EACFA,EAAAA,EAAAA,KAAA,SAAK,gHAEvEA,EAAAA,EAAAA,KAAA,SAAK,wCACwBA,EAAAA,EAAAA,KAAA,SAAK,oBACzBA,EAAAA,EAAAA,KAAA,aAEpBH,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAACC,EAAAA,GAAiB,CAACN,KAAI,kNAWvBK,EAAAA,EAAAA,KAAA,KAAAD,SAAG,qBACHC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACC,EAAAA,GAAiB,CAACN,KAAI,kkEAwE/BK,EAAAA,EAAAA,KAAA,KAAAD,SAAG,qCACHC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACE,EAAAA,GAAqB,CAACP,KAAMA,OAEjCE,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,KAACC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,oDAGnB,C","sources":["ViewStorage/menu/sau/3-10.tsx"],"sourcesContent":["\r\nimport {CodeSnippetJavaScript} from \"../../codeSnippetJavaScript\";\r\nimport {CodeSnippetDotNet} from \"../../codeSnippetJavaScript\";\r\n/*-----------------------------------*/\r\nconst code = `\r\n\r\nimport React from 'react';\r\nimport AvatarUploader from 'bsr-sau'\r\nimport 'bsr-sau/dist/index.css'\r\n\r\n\r\nfunction App() {\r\n\r\n    const userData={\r\n        name_file:'default_name.jpg',\r\n        user_name:'ion100'\r\n    }\r\n    return (\r\n        <div>\r\n            <AvatarUploader\r\n            \r\n                style={{background:\"#e5d7d7\",padding:30}}\r\n                \r\n                styleCanvas={{background:\"black\"}}\r\n                \r\n                canvasSize={200}\r\n                \r\n                url={'/ContentApi/AvatarUpload'}\r\n                \r\n                serverError={(r) => {\r\n                    alert(\"server\\\\n\"+r)\r\n                }}\r\n                \r\n                selectedFile={(file)=>{\r\n                    if(file){\r\n                        userData.name_file=file.name;\r\n                    }\r\n                    return true;\r\n                }}\r\n                \r\n                clientError={(e) => {\r\n                    alert(\"client\\\\n:\" + e)\r\n                }}\r\n                \r\n                callbackFormData={()=>{\r\n                    return userData\r\n                }}\r\n                \r\n                done={(dataFromServer)=>{\r\n                    alert( \"done: server response: \"+dataFromServer)\r\n                }}\r\n\r\n            />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n`\r\n/*-----------------------------------*/\r\nexport default function P3_10() {\r\n\r\n    return (\r\n        <>\r\n            <p>1. Create project VS: <br/>\r\n                template: Web-API ASP.NET Core, <br/>\r\n                name of the solution in Linux specification format. <br/>\r\n                <br/>\r\n                2. Add project folder name: wwwroot. <br/>\r\n                3. Add project folder name: my_app. <br/>\r\n                4. Folder my_app - create solution React: npx create-react-app. <br/>\r\n                5 Open folder my_app in WebStorm: npm install, npm install --save bsr-sau. <br/>\r\n                6. File package.json add:\"proxy\": \"http://localhost:5203\" <br/>\r\n                where http://localhost:5203 from file launchSettings.json VS solution.<br/>\r\n                7. React folder solution add file: .env, content: BUILD_PATH='../wwwroot'<br/>\r\n                The output files of the solution will be built in this folder, upon command: \"build\": \"react-scripts\r\n                build\",<br/>\r\n                8. VS Set up routing in the project:<br/>\r\n                file: Program.cs<br/>\r\n            </p>\r\n            <div>\r\n                <CodeSnippetDotNet code={`\r\napp.UseDefaultFiles();\r\napp.UseStaticFiles();\r\napp.UseRouting();\r\napp.UseEndpoints(endpoints =>\r\n{\r\n    endpoints.MapControllerRoute( name: \"default\", pattern: \"/\");\r\n});\r\n\r\napp.Run();\r\n                `}/>\r\n                <p>Add controller:</p>\r\n                <div>\r\n                    <CodeSnippetDotNet code={`\r\n[Route(\"/\")]\r\npublic class ContentApiController : Controller\r\n{\r\n    class TempUserData\r\n    {\r\n        public string name_file { get; set; }\r\n        public string user_name { get; set; }\r\n    }\r\n\r\n\r\n    [Route(\"/ContentApi/AvatarUpload\")]\r\n    [HttpPost]\r\n    [Consumes(\"multipart/form-data\")]\r\n    public async Task<IActionResult> ContentAvatarUpload()\r\n    {\r\n        TempUserData? userData;\r\n\r\n        try\r\n        {\r\n            var dataF = this.Request.Form[\"data\"];\r\n            if (dataF.Count == 0) throw new Exception(\"require user data\");\r\n\r\n            var userDataJson = dataF[0];\r\n\r\n            if (userDataJson == null) throw new Exception(\"user data empty\");\r\n\r\n            userData = JsonConvert.DeserializeObject<TempUserData>(userDataJson);\r\n\r\n            if (userData == null) throw new Exception(\"User data json empty\");\r\n\r\n            var fileF = this.Request.Form[\"avatar\"];\r\n\r\n            if (fileF[0] != null)\r\n            {\r\n                var avatarPath = Path.Combine(\"avatars\");\r\n                if (Directory.Exists(avatarPath) == false)\r\n                {\r\n                    Directory.CreateDirectory(avatarPath);\r\n                }\r\n\r\n                var name = Path.Combine(avatarPath, userData.name_file);\r\n                if (System.IO.File.Exists(name))\r\n                {\r\n                    System.IO.File.Delete(name);\r\n                }\r\n\r\n                await using var fs = new FileStream(name, FileMode.Create);\r\n                await using var bw = new BinaryWriter(fs);\r\n\r\n                var u = fileF[0]!.IndexOf(\",\", StringComparison.Ordinal);\r\n                var ass = fileF[0]?.Substring(u + 1);\r\n                var dataB = Convert.FromBase64String(ass);\r\n                bw.Write(dataB);\r\n            }\r\n            else\r\n            {\r\n                throw new Exception(\"data file avatar - empty\");\r\n            }\r\n        }\r\n        catch (Exception e)\r\n        {\r\n            Console.WriteLine(e);\r\n            throw;\r\n        }\r\n\r\n        return Ok(new { avatar = userData.name_file, text = \"simpleText\" });\r\n    }\r\n                    `}/>\r\n                </div>\r\n            </div>\r\n\r\n            <p>React solution, change App file</p>\r\n            <br/>\r\n            <div>\r\n                <CodeSnippetJavaScript code={code}/>\r\n            </div>\r\n            <p> <p>Run debug VS project, start React project.</p></p>\r\n        </>\r\n    )\r\n}\r\n"],"names":["code","P3_10","_jsxs","_Fragment","children","_jsx","CodeSnippetDotNet","CodeSnippetJavaScript"],"sourceRoot":""}