{"version":3,"file":"static/js/595.d970023c.chunk.js","mappings":"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","sources":["../node_modules/ol/Collection.js","../node_modules/ol/CollectionEventType.js","../node_modules/ol/Disposable.js","../node_modules/ol/Feature.js","../node_modules/ol/Image.js","../node_modules/ol/ImageState.js","../node_modules/ol/ImageTile.js","../node_modules/ol/renderer/Map.js","../node_modules/ol/renderer/Composite.js","../node_modules/ol/layer/Group.js","../node_modules/ol/pointer/EventType.js","../node_modules/ol/MapBrowserEventHandler.js","../node_modules/ol/MapProperty.js","../node_modules/ol/structs/PriorityQueue.js","../node_modules/ol/TileQueue.js","../node_modules/ol/control/Attribution.js","../node_modules/ol/control/Rotate.js","../node_modules/ol/control/Zoom.js","../node_modules/ol/Map.js","../node_modules/ol/control/defaults.js","../node_modules/ol/MapBrowserEvent.js","../node_modules/ol/MapBrowserEventType.js","../node_modules/ol/MapEvent.js","../node_modules/ol/MapEventType.js","../node_modules/ol/Object.js","../node_modules/ol/ObjectEventType.js","../node_modules/ol/Observable.js","../node_modules/ol/Tile.js","../node_modules/ol/TileRange.js","../node_modules/ol/TileState.js","../node_modules/ol/ViewProperty.js","../node_modules/ol/centerconstraint.js","../node_modules/ol/resolutionconstraint.js","../node_modules/ol/View.js","../node_modules/ol/ViewHint.js","../node_modules/ol/array.js","../node_modules/ol/asserts.js","../node_modules/color-space/rgb.js","../node_modules/color-space/xyz.js","../node_modules/color-space/luv.js","../node_modules/color-space/lchuv.js","../node_modules/color-parse/node_modules/color-name/index.js","../node_modules/color-parse/index.js","../node_modules/color-space/hsl.js","../node_modules/ol/color.js","../node_modules/color-rgba/index.js","../node_modules/ol/colorlike.js","../node_modules/ol/console.js","../node_modules/ol/control/Control.js","../node_modules/ol/coordinate.js","../node_modules/ol/css.js","../node_modules/ol/dom.js","../node_modules/ol/easing.js","../node_modules/ol/events.js","../node_modules/ol/events/Event.js","../node_modules/ol/events/EventType.js","../node_modules/ol/events/Target.js","../node_modules/ol/events/condition.js","../node_modules/ol/extent.js","../node_modules/ol/extent/Relationship.js","../node_modules/ol/format/Feature.js","../node_modules/ol/format/JSONFeature.js","../node_modules/ol/format/GeoJSON.js","../node_modules/ol/functions.js","../node_modules/ol/geom/Geometry.js","../node_modules/ol/geom/GeometryCollection.js","../node_modules/ol/geom/LineString.js","../node_modules/ol/geom/MultiLineString.js","../node_modules/ol/geom/MultiPoint.js","../node_modules/ol/geom/MultiPolygon.js","../node_modules/ol/geom/Point.js","../node_modules/ol/geom/LinearRing.js","../node_modules/ol/geom/Polygon.js","../node_modules/ol/geom/SimpleGeometry.js","../node_modules/ol/geom/flat/area.js","../node_modules/ol/geom/flat/center.js","../node_modules/ol/geom/flat/closest.js","../node_modules/ol/geom/flat/contains.js","../node_modules/ol/geom/flat/deflate.js","../node_modules/ol/geom/flat/inflate.js","../node_modules/ol/geom/flat/interiorpoint.js","../node_modules/ol/geom/flat/interpolate.js","../node_modules/ol/geom/flat/intersectsextent.js","../node_modules/ol/geom/flat/length.js","../node_modules/ol/geom/flat/reverse.js","../node_modules/ol/geom/flat/orient.js","../node_modules/ol/geom/flat/segments.js","../node_modules/ol/geom/flat/simplify.js","../node_modules/ol/geom/flat/transform.js","../node_modules/ol/has.js","../node_modules/ol/interaction/DoubleClickZoom.js","../node_modules/ol/render/Box.js","../node_modules/ol/interaction/DragBox.js","../node_modules/ol/interaction/Interaction.js","../node_modules/ol/interaction/Pointer.js","../node_modules/ol/interaction/Property.js","../node_modules/ol/interaction/DragPan.js","../node_modules/ol/interaction/DragRotate.js","../node_modules/ol/interaction/DragZoom.js","../node_modules/ol/events/Key.js","../node_modules/ol/interaction/KeyboardPan.js","../node_modules/ol/interaction/KeyboardZoom.js","../node_modules/ol/Kinetic.js","../node_modules/ol/interaction/MouseWheelZoom.js","../node_modules/ol/interaction/PinchRotate.js","../node_modules/ol/interaction/PinchZoom.js","../node_modules/ol/interaction/defaults.js","../node_modules/ol/layer/Base.js","../node_modules/ol/expr/expression.js","../node_modules/ol/expr/cpu.js","../node_modules/ol/render/canvas/style.js","../node_modules/ol/layer/BaseVector.js","../node_modules/ol/layer/Layer.js","../node_modules/ol/layer/Property.js","../node_modules/ol/layer/TileProperty.js","../node_modules/ol/layer/BaseTile.js","../node_modules/ol/DataTile.js","../node_modules/ol/structs/LRUCache.js","../node_modules/ol/reproj/DataTile.js","../node_modules/ol/renderer/canvas/TileLayer.js","../node_modules/ol/layer/Tile.js","../node_modules/ol/render/canvas/Instruction.js","../node_modules/ol/render/VectorContext.js","../node_modules/ol/render/canvas/Builder.js","../node_modules/ol/render/canvas/ImageBuilder.js","../node_modules/ol/render/canvas/LineStringBuilder.js","../node_modules/ol/render/canvas/PolygonBuilder.js","../node_modules/ol/geom/flat/linechunk.js","../node_modules/ol/geom/flat/straightchunk.js","../node_modules/ol/render/canvas/TextBuilder.js","../node_modules/ol/render/canvas/BuilderGroup.js","../node_modules/ol/geom/flat/textpath.js","../node_modules/ol/render/canvas/Executor.js","../node_modules/ol/render/canvas/ExecutorGroup.js","../node_modules/ol/render/canvas/Immediate.js","../node_modules/ol/render/canvas/hitdetect.js","../node_modules/ol/renderer/vector.js","../node_modules/ol/renderer/canvas/VectorLayer.js","../node_modules/ol/layer/Vector.js","../node_modules/ol/math.js","../node_modules/ol/obj.js","../node_modules/ol/proj/Units.js","../node_modules/ol/proj/Projection.js","../node_modules/ol/proj/epsg3857.js","../node_modules/ol/proj/epsg4326.js","../node_modules/ol/proj/projections.js","../node_modules/ol/proj/transforms.js","../node_modules/ol/sphere.js","../node_modules/ol/proj.js","../node_modules/ol/render/Event.js","../node_modules/ol/render/EventType.js","../node_modules/ol/render/Feature.js","../node_modules/ol/render/canvas.js","../node_modules/ol/render/canvas/ZIndexContext.js","../node_modules/ol/renderer/Layer.js","../node_modules/ol/renderer/canvas/Layer.js","../node_modules/ol/reproj.js","../node_modules/ol/reproj/Tile.js","../node_modules/ol/reproj/Triangulation.js","../node_modules/ol/reproj/common.js","../node_modules/ol/rotationconstraint.js","../node_modules/ol/size.js","../node_modules/ol/source/TileEventType.js","../node_modules/ol/tilegrid/TileGrid.js","../node_modules/ol/tilegrid.js","../node_modules/ol/source/Tile.js","../node_modules/ol/uri.js","../node_modules/ol/tileurlfunction.js","../node_modules/ol/source/UrlTile.js","../node_modules/ol/source/TileImage.js","../node_modules/ol/source/XYZ.js","../node_modules/ol/source/OSM.js","../node_modules/ol/source/Source.js","../node_modules/ol/loadingstrategy.js","../node_modules/ol/featureloader.js","../node_modules/ol/source/Vector.js","../node_modules/ol/source/VectorEventType.js","../node_modules/ol/structs/RBush.js","../node_modules/ol/style/Circle.js","../node_modules/ol/style/Fill.js","../node_modules/ol/style/Icon.js","../node_modules/ol/style/IconImage.js","../node_modules/ol/style/IconImageCache.js","../node_modules/ol/style/Image.js","../node_modules/ol/style/RegularShape.js","../node_modules/ol/style/Stroke.js","../node_modules/ol/style/Style.js","../node_modules/ol/style/Text.js","../node_modules/ol/tilecoord.js","../node_modules/ol/tilegrid/common.js","../node_modules/ol/transform.js","../node_modules/ol/util.js","../node_modules/quickselect/index.js","../node_modules/rbush/index.js"],"sourcesContent":["/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenImage_();\n    this.image_ = null;\n    super.disposeInternal();\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @private\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText,\n      map,\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(\n      (a, b) => a.zIndex - b.zIndex,\n    );\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    if (!frameState.declutter) {\n      return;\n    }\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} GroupEventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {GroupEventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * @private\n     */\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      },\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   * @override\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      /**\n       * @type {import(\"./Tile.js\").default}\n       */\n      const tile = this.dequeue()[0];\n      const tileKey = tile.getKey();\n      const state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {toPromise} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {string|Array<string>|undefined} [attributions] Optional attribution(s) that will always be\n * displayed regardless of the layers rendered\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {string | Array<string> | undefined}\n     */\n    this.attributions_ = options.attributions;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const layers = this.getMap().getAllLayers();\n    const visibleAttributions = new Set(\n      layers.flatMap((layer) => layer.getAttributions(frameState)),\n    );\n    if (this.attributions_ !== undefined) {\n      Array.isArray(this.attributions_)\n        ? this.attributions_.forEach((item) => visibleAttributions.add(item))\n        : visibleAttributions.add(this.attributions_);\n    }\n\n    if (!this.overrideCollapsible_) {\n      const collapsible = !layers.some(\n        (layer) => layer.getSource()?.getAttributionsCollapsible() === false,\n      );\n      this.setCollapsible(collapsible);\n    }\n    return Array.from(visibleAttributions);\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    /**\n     * @private\n     */\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default<import('./render/canvas/Executor.js').DeclutterEntry>>|null} declutter\n * Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n *  `tabindex` atribute must be set on the custom element's host element.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderComplete_ = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @private\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n\n      const currentDoc =\n        rootNode instanceof ShadowRoot\n          ? rootNode.host === target\n            ? rootNode.host.ownerDocument\n            : rootNode\n          : rootNode === doc\n            ? doc.documentElement\n            : rootNode;\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !currentDoc.contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      this.viewport_.remove();\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      let keyboardEventTarget;\n      if (!this.keyboardEventTarget_) {\n        // check if map target is in shadowDOM, if yes use host element as target\n        const targetRoot = targetElement.getRootNode();\n        const targetCandidate =\n          targetRoot instanceof ShadowRoot ? targetRoot.host : targetElement;\n        keyboardEventTarget = targetCandidate;\n      } else {\n        keyboardEventTarget = this.keyboardEventTarget_;\n      }\n\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      (this.hasListener(MapEventType.LOADSTART) ||\n        this.hasListener(MapEventType.LOADEND) ||\n        this.hasListener(RenderEventType.RENDERCOMPLETE)) &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.tileQueue_.getCount() &&\n      !this.getLoadingOrNotReady();\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n   *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n   *  `tabindex` atribute must be set on the custom element's host element.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [Math.max(0, width), Math.max(0, height)];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     * @private\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     * @private\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   * @override\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   * @override\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes a {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes a {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * A key assigned to the tile. This is used in conjunction with a source key\n     * to determine if a cached version of this tile may be used by the renderer.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @private\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.release();\n    super.disposeInternal();\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_?.length) {\n      if (this.resolutions_.length === 1) {\n        return this.resolutions_[0];\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\nexport default {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n\t//1931 2°\n\t2: {\n\t\t//incadescent\n\t\tA:[109.85, 100, 35.585],\n\t\t// B:[],\n\t\tC: [98.074, 100, 118.232],\n\t\tD50: [96.422, 100, 82.521],\n\t\tD55: [95.682, 100, 92.149],\n\t\t//daylight\n\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\tD75: [94.972, 100, 122.638],\n\t\t//flourescent\n\t\t// F1: [],\n\t\tF2: [99.187, 100, 67.395],\n\t\t// F3: [],\n\t\t// F4: [],\n\t\t// F5: [],\n\t\t// F6:[],\n\t\tF7: [95.044, 100, 108.755],\n\t\t// F8: [],\n\t\t// F9: [],\n\t\t// F10: [],\n\t\tF11: [100.966, 100, 64.370],\n\t\t// F12: [],\n\t\tE: [100,100,100]\n\t},\n\n\t//1964  10°\n\t10: {\n\t\t//incadescent\n\t\tA:[111.144, 100, 35.200],\n\t\tC: [97.285, 100, 116.145],\n\t\tD50: [96.720, 100, 81.427],\n\t\tD55: [95.799, 100, 90.926],\n\t\t//daylight\n\t\tD65: [94.811, 100, 107.304],\n\t\tD75: [94.416, 100, 120.641],\n\t\t//flourescent\n\t\tF2: [103.280, 100, 69.026],\n\t\tF7: [95.792, 100, 107.687],\n\t\tF11: [103.866, 100, 65.627],\n\t\tE: [100,100,100]\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\n import xyz from './xyz.js';\n\nexport default {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n//cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default lchuv;\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n","export default {\n\taliceblue: [240, 248, 255],\n\tantiquewhite: [250, 235, 215],\n\taqua: [0, 255, 255],\n\taquamarine: [127, 255, 212],\n\tazure: [240, 255, 255],\n\tbeige: [245, 245, 220],\n\tbisque: [255, 228, 196],\n\tblack: [0, 0, 0],\n\tblanchedalmond: [255, 235, 205],\n\tblue: [0, 0, 255],\n\tblueviolet: [138, 43, 226],\n\tbrown: [165, 42, 42],\n\tburlywood: [222, 184, 135],\n\tcadetblue: [95, 158, 160],\n\tchartreuse: [127, 255, 0],\n\tchocolate: [210, 105, 30],\n\tcoral: [255, 127, 80],\n\tcornflowerblue: [100, 149, 237],\n\tcornsilk: [255, 248, 220],\n\tcrimson: [220, 20, 60],\n\tcyan: [0, 255, 255],\n\tdarkblue: [0, 0, 139],\n\tdarkcyan: [0, 139, 139],\n\tdarkgoldenrod: [184, 134, 11],\n\tdarkgray: [169, 169, 169],\n\tdarkgreen: [0, 100, 0],\n\tdarkgrey: [169, 169, 169],\n\tdarkkhaki: [189, 183, 107],\n\tdarkmagenta: [139, 0, 139],\n\tdarkolivegreen: [85, 107, 47],\n\tdarkorange: [255, 140, 0],\n\tdarkorchid: [153, 50, 204],\n\tdarkred: [139, 0, 0],\n\tdarksalmon: [233, 150, 122],\n\tdarkseagreen: [143, 188, 143],\n\tdarkslateblue: [72, 61, 139],\n\tdarkslategray: [47, 79, 79],\n\tdarkslategrey: [47, 79, 79],\n\tdarkturquoise: [0, 206, 209],\n\tdarkviolet: [148, 0, 211],\n\tdeeppink: [255, 20, 147],\n\tdeepskyblue: [0, 191, 255],\n\tdimgray: [105, 105, 105],\n\tdimgrey: [105, 105, 105],\n\tdodgerblue: [30, 144, 255],\n\tfirebrick: [178, 34, 34],\n\tfloralwhite: [255, 250, 240],\n\tforestgreen: [34, 139, 34],\n\tfuchsia: [255, 0, 255],\n\tgainsboro: [220, 220, 220],\n\tghostwhite: [248, 248, 255],\n\tgold: [255, 215, 0],\n\tgoldenrod: [218, 165, 32],\n\tgray: [128, 128, 128],\n\tgreen: [0, 128, 0],\n\tgreenyellow: [173, 255, 47],\n\tgrey: [128, 128, 128],\n\thoneydew: [240, 255, 240],\n\thotpink: [255, 105, 180],\n\tindianred: [205, 92, 92],\n\tindigo: [75, 0, 130],\n\tivory: [255, 255, 240],\n\tkhaki: [240, 230, 140],\n\tlavender: [230, 230, 250],\n\tlavenderblush: [255, 240, 245],\n\tlawngreen: [124, 252, 0],\n\tlemonchiffon: [255, 250, 205],\n\tlightblue: [173, 216, 230],\n\tlightcoral: [240, 128, 128],\n\tlightcyan: [224, 255, 255],\n\tlightgoldenrodyellow: [250, 250, 210],\n\tlightgray: [211, 211, 211],\n\tlightgreen: [144, 238, 144],\n\tlightgrey: [211, 211, 211],\n\tlightpink: [255, 182, 193],\n\tlightsalmon: [255, 160, 122],\n\tlightseagreen: [32, 178, 170],\n\tlightskyblue: [135, 206, 250],\n\tlightslategray: [119, 136, 153],\n\tlightslategrey: [119, 136, 153],\n\tlightsteelblue: [176, 196, 222],\n\tlightyellow: [255, 255, 224],\n\tlime: [0, 255, 0],\n\tlimegreen: [50, 205, 50],\n\tlinen: [250, 240, 230],\n\tmagenta: [255, 0, 255],\n\tmaroon: [128, 0, 0],\n\tmediumaquamarine: [102, 205, 170],\n\tmediumblue: [0, 0, 205],\n\tmediumorchid: [186, 85, 211],\n\tmediumpurple: [147, 112, 219],\n\tmediumseagreen: [60, 179, 113],\n\tmediumslateblue: [123, 104, 238],\n\tmediumspringgreen: [0, 250, 154],\n\tmediumturquoise: [72, 209, 204],\n\tmediumvioletred: [199, 21, 133],\n\tmidnightblue: [25, 25, 112],\n\tmintcream: [245, 255, 250],\n\tmistyrose: [255, 228, 225],\n\tmoccasin: [255, 228, 181],\n\tnavajowhite: [255, 222, 173],\n\tnavy: [0, 0, 128],\n\toldlace: [253, 245, 230],\n\tolive: [128, 128, 0],\n\tolivedrab: [107, 142, 35],\n\torange: [255, 165, 0],\n\torangered: [255, 69, 0],\n\torchid: [218, 112, 214],\n\tpalegoldenrod: [238, 232, 170],\n\tpalegreen: [152, 251, 152],\n\tpaleturquoise: [175, 238, 238],\n\tpalevioletred: [219, 112, 147],\n\tpapayawhip: [255, 239, 213],\n\tpeachpuff: [255, 218, 185],\n\tperu: [205, 133, 63],\n\tpink: [255, 192, 203],\n\tplum: [221, 160, 221],\n\tpowderblue: [176, 224, 230],\n\tpurple: [128, 0, 128],\n\trebeccapurple: [102, 51, 153],\n\tred: [255, 0, 0],\n\trosybrown: [188, 143, 143],\n\troyalblue: [65, 105, 225],\n\tsaddlebrown: [139, 69, 19],\n\tsalmon: [250, 128, 114],\n\tsandybrown: [244, 164, 96],\n\tseagreen: [46, 139, 87],\n\tseashell: [255, 245, 238],\n\tsienna: [160, 82, 45],\n\tsilver: [192, 192, 192],\n\tskyblue: [135, 206, 235],\n\tslateblue: [106, 90, 205],\n\tslategray: [112, 128, 144],\n\tslategrey: [112, 128, 144],\n\tsnow: [255, 250, 250],\n\tspringgreen: [0, 255, 127],\n\tsteelblue: [70, 130, 180],\n\ttan: [210, 180, 140],\n\tteal: [0, 128, 128],\n\tthistle: [216, 191, 216],\n\ttomato: [255, 99, 71],\n\tturquoise: [64, 224, 208],\n\tviolet: [238, 130, 238],\n\twheat: [245, 222, 179],\n\twhite: [255, 255, 255],\n\twhitesmoke: [245, 245, 245],\n\tyellow: [255, 255, 0],\n\tyellowgreen: [154, 205, 50]\n}\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nexport default {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0]/360, s = hsl[1]/100, l = hsl[2]/100, t1, t2, t3, rgb, val, i=0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (;i<3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t3 * t3 < 2 ?  t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/**\n * @module ol/color\n */\nimport lchuv from 'color-space/lchuv.js';\nimport parseRgba from 'color-rgba';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Color to indicate that no color should be rendered. This is meant to be used for per-reference\n * comparisons only.\n * @type {Color}\n */\nexport const NO_COLOR = [NaN, NaN, NaN, 0];\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (s === 'none') {\n    return NO_COLOR;\n  }\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\nimport {toString} from './color.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.element?.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.element?.remove();\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_ ?? map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.lastChild.remove();\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (once) {\n    const originalListener = listener;\n    /**\n     * @this {typeof target}\n     */\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(thisArg ?? this, arguments);\n    };\n  } else if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n\n  return rootNode instanceof ShadowRoot\n    ? rootNode.host.contains(activeElement)\n    : targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const tabIndexCandidate =\n    rootNode instanceof ShadowRoot ? rootNode.host : targetElement;\n\n  return tabIndexCandidate.hasAttribute('tabindex') ? focus(event) : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/format/Feature\n */\nimport Feature from '../Feature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  GeometryCollection,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n  transformExtent,\n} from '../proj.js';\nimport {\n  linearRingsAreOriented,\n  linearRingssAreOriented,\n  orientLinearRings,\n  orientLinearRingsArray,\n} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @typedef {Object} SimpleGeometryObject\n * @property {import('../geom/Geometry.js').Type} type Type.\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>|Array<Array<number>>} [ends] Ends or endss.\n * @property {import('../geom/Geometry.js').GeometryLayout} [layout] Layout.\n */\n\n/**\n * @typedef {Array<GeometryObject>} GeometryCollectionObject\n */\n\n/**\n * @typedef {SimpleGeometryObject|GeometryCollectionObject} GeometryObject\n */\n\n/**\n * @typedef {Object} FeatureObject\n * @property {string|number} [id] Id.\n * @property {GeometryObject} [geometry] Geometry.\n * @property {Object<string, *>} [properties] Properties.\n */\n\n/***\n * @template {import('../Feature.js').FeatureLike} T\n * @typedef {T extends RenderFeature ? typeof RenderFeature : typeof Feature} FeatureToFeatureClass\n */\n\n/***\n * @template {import(\"../Feature.js\").FeatureClass} T\n * @typedef {T[keyof T] extends RenderFeature ? RenderFeature : Feature} FeatureClassToFeature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * @protected\n     * @type {FeatureToFeatureClass<FeatureType>}\n     */\n    this.featureClass = /** @type {FeatureToFeatureClass<FeatureType>} */ (\n      Feature\n    );\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n        featureClass: this.featureClass,\n      },\n      options,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {Feature} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<Feature>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @template {import(\"../geom/Geometry.js\").default|RenderFeature} T\n * @param {T} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {T} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed = geometry;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    if (write) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    const fromProjection = write ? featureProjection : dataProjection;\n    const toProjection = write ? dataProjection : featureProjection;\n    if (fromProjection.getUnits() === 'tile-pixels') {\n      transformed.transform(fromProjection, toProjection);\n    } else {\n      transformed.applyTransform(getTransform(fromProjection, toProjection));\n    }\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n\nconst GeometryConstructor = {\n  Point: Point,\n  LineString: LineString,\n  Polygon: Polygon,\n  MultiPoint: MultiPoint,\n  MultiLineString: MultiLineString,\n  MultiPolygon: MultiPolygon,\n};\n\nfunction orientFlatCoordinates(flatCoordinates, ends, stride) {\n  if (Array.isArray(ends[0])) {\n    // MultiPolagon\n    if (!linearRingssAreOriented(flatCoordinates, 0, ends, stride)) {\n      flatCoordinates = flatCoordinates.slice();\n      orientLinearRingsArray(flatCoordinates, 0, ends, stride);\n    }\n    return flatCoordinates;\n  }\n  if (!linearRingsAreOriented(flatCoordinates, 0, ends, stride)) {\n    flatCoordinates = flatCoordinates.slice();\n    orientLinearRings(flatCoordinates, 0, ends, stride);\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {FeatureObject} object Feature object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {RenderFeature|Array<RenderFeature>} Render feature.\n */\nexport function createRenderFeature(object, options) {\n  const geometry = object.geometry;\n  if (!geometry) {\n    return [];\n  }\n  if (Array.isArray(geometry)) {\n    return geometry\n      .map((geometry) => createRenderFeature({...object, geometry}))\n      .flat();\n  }\n\n  const geometryType =\n    geometry.type === 'MultiPolygon' ? 'Polygon' : geometry.type;\n  if (geometryType === 'GeometryCollection' || geometryType === 'Circle') {\n    throw new Error('Unsupported geometry type: ' + geometryType);\n  }\n\n  const stride = geometry.layout.length;\n  return transformGeometryWithOptions(\n    new RenderFeature(\n      geometryType,\n      geometryType === 'Polygon'\n        ? orientFlatCoordinates(geometry.flatCoordinates, geometry.ends, stride)\n        : geometry.flatCoordinates,\n      geometry.ends?.flat(),\n      stride,\n      object.properties || {},\n      object.id,\n    ).enableSimplifyTransformed(),\n    false,\n    options,\n  );\n}\n\n/**\n * @param {GeometryObject|null} object Geometry object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nexport function createGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  if (Array.isArray(object)) {\n    const geometries = object.map((geometry) =>\n      createGeometry(geometry, options),\n    );\n    return new GeometryCollection(geometries);\n  }\n  const Geometry = GeometryConstructor[object.type];\n  return transformGeometryWithOptions(\n    new Geometry(object.flatCoordinates, object.layout, object.ends),\n    false,\n    options,\n  );\n}\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @extends {FeatureFormat<FeatureType>}\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   * @api\n   * @override\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   * @override\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<FeatureType>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   * @override\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   * @override\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   * @override\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   * @override\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   * @override\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  createGeometry,\n  createRenderFeature,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport {\n  deflateCoordinatesArray,\n  deflateMultiCoordinatesArray,\n} from '../geom/flat/deflate.js';\nimport {getLayoutForStride} from '../geom/SimpleGeometry.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n *\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n * @property {import('./Feature.js').FeatureToFeatureClass<FeatureType>} [featureClass] Feature class\n * to be used when reading features. The default is {@link module:ol/Feature~Feature}. If performance is\n * the primary concern, and features are not going to be modified or round-tripped through the format,\n * consider using {@link module:ol/render/Feature~RenderFeature}\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @extends {JSONFeature<FeatureType>}\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326',\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    if (options.featureClass) {\n      this.featureClass = options.featureClass;\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the `geometry_name` in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   * @override\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometryInternal(geoJSONFeature['geometry'], options);\n    if (this.featureClass === RenderFeature) {\n      return /** @type {FeatureType|Array<FeatureType>} */ (\n        createRenderFeature(\n          {\n            geometry,\n            id: geoJSONFeature['id'],\n            properties: geoJSONFeature['properties'],\n          },\n          options,\n        )\n      );\n    }\n\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && geoJSONFeature['geometry_name']) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(createGeometry(geometry, options));\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return /** @type {FeatureType|Array<FeatureType>} */ (feature);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<FeatureType>} Features.\n   * @override\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        const featureObject = this.readFeatureFromObject(\n          geoJSONFeatures[i],\n          options,\n        );\n        if (!featureObject) {\n          continue;\n        }\n        features.push(featureObject);\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return /** @type {Array<FeatureType>} */ (features.flat());\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @override\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @override\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        throw new Error('Unknown SRS type');\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   * @override\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   * @override\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   * @override\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryObject} Geometry.\n */\nfunction readGeometryInternal(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /** @type {import(\"./Feature.js\").GeometryObject} */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object),\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object),\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object),\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object),\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object),\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return geometry;\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  const geometryObject = readGeometryInternal(object, options);\n  return createGeometry(geometryObject, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryCollectionObject} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"./Feature.js\").GeometryObject} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometryInternal(geometry, options);\n    },\n  );\n  return geometries;\n}\n\n/**\n * @param {GeoJSONPoint} object Input object.\n * @return {import(\"./Feature.js\").GeometryObject} Point geometry.\n */\nfunction readPointGeometry(object) {\n  const flatCoordinates = object['coordinates'];\n  return {\n    type: 'Point',\n    flatCoordinates,\n    layout: getLayoutForStride(flatCoordinates.length),\n  };\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} LineString geometry.\n */\nfunction readLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = coordinates.flat();\n  return {\n    type: 'LineString',\n    flatCoordinates,\n    ends: [flatCoordinates.length],\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiLineString geometry.\n */\nfunction readMultiLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const stride = coordinates[0]?.[0]?.length || 2;\n  const flatCoordinates = [];\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'MultiLineString',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPoint geometry.\n */\nfunction readMultiPointGeometry(object) {\n  const coordinates = object['coordinates'];\n  return {\n    type: 'MultiPoint',\n    flatCoordinates: coordinates.flat(),\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPolygon geometry.\n */\nfunction readMultiPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.[0].length || 2;\n  const endss = deflateMultiCoordinatesArray(\n    flatCoordinates,\n    0,\n    coordinates,\n    stride,\n  );\n  return {\n    type: 'MultiPolygon',\n    flatCoordinates,\n    ends: endss,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.length;\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'Polygon',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(\n        /** @type {import(\"../geom/Point.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {import(\"../geom/LineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {import(\"../geom/Polygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {import(\"../geom/MultiPoint.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {import(\"../geom/MultiLineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {import(\"../geom/MultiPolygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ),\n        options,\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>|undefined} */\n  let lastArgs;\n\n  let lastThis;\n\n  /**\n   * @this {*} Only need to know if `this` changed, don't care what type\n   * @return {ReturnType} Memoized value\n   */\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!lastArgs || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride,\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(geometries[i], EventType.CHANGE, this.changed, this),\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(\n      cloneGeometries(this.geometries_),\n    );\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance,\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive(),\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(\n        simplifiedGeometries,\n      );\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  return geometries.map((geometry) => geometry.clone());\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined,\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5,\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1],\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride,\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss,\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right,\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters,\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss,\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends,\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends,\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_,\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(\n        this.flatCoordinates,\n        this.flatCoordinates,\n        this.layout.startsWith('XYZ') ? 3 : 2,\n        this.stride,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  const x0 = flatCoordinates[end - stride];\n  const y0 = flatCoordinates[end - stride + 1];\n  let dx1 = 0;\n  let dy1 = 0;\n  for (; offset < end; offset += stride) {\n    const dx2 = flatCoordinates[offset] - x0;\n    const dy2 = flatCoordinates[offset + 1] - y0;\n    twiceArea += dy1 * dx2 - dx1 * dy2;\n    dx1 = dx2;\n    dy1 = dy2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destinationStride] Stride of destination coordinates; if unspecified, assumed to be 2.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n  destinationStride,\n) {\n  dest = dest ? dest : [];\n  destinationStride = destinationStride ? destinationStride : 2;\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n\n    for (let k = 2; k < destinationStride; k++) {\n      dest[i++] = flatCoordinates[j + k];\n    }\n  }\n\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    if (!this.map_) {\n      return;\n    }\n\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ?? {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea ?? 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ?? mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ =\n      options.boxEndCondition ?? this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return false;\n    }\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n\n    this.box_.setMap(null);\n    this.startPixel_ = null;\n\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   * @override\n   */\n  setActive(active) {\n    if (!active) {\n      this.box_.setMap(null);\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setActive(active);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @override\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n\n    if (oldMap) {\n      this.box_.setMap(null);\n\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setMap(map);\n  }\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @override\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../pixel.js\").Pixel}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.pixel;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(\n        -delta / this.deltaPerZoom_,\n        this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      );\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(\n      view,\n      delta,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      this.duration_,\n    );\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {fromString as colorFromString} from '../color.js';\nimport {toSize} from '../size.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   * `['get', attributeName]` fetches a feature property value, similar to `feature.get('attributeName')`.\n *   * `['get', attributeName, keyOrArrayIndex, ...]` (Canvas only) Access nested properties and array items of a\n *     feature property. The result is `undefined` when there is nothing at the specified key or index.\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   * `['resolution']` returns the current resolution\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` The current zoom level (WebGL only).\n *   * `['line-metric']` returns the M component of the current point on a line (WebGL only); in case where the geometry layout of the line\n *      does not contain an M component (e.g. XY or XYZ), 0 is returned; 0 is also returned for geometries other than lines.\n *      Please note that the M component will be linearly interpolated between the two points composing a segment.\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['has', attributeName, keyOrArrayIndex, ...]` returns `true` if feature properties include the (nested) key `attributeName`,\n *     `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * @param {number} type The type.\n * @return {boolean} The type is one of the specific types (not any or a union type).\n */\nfunction isSpecific(type) {\n  return type in typeNames;\n}\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    if (!isSpecific(type)) {\n      throw new Error(\n        `literal expressions must have a specific type, got ${typeName(type)}`,\n      );\n    }\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {number} expectedType The expected type.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, expectedType, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded ? 'true' : 'false');\n      }\n      if (!includesType(expectedType, BooleanType)) {\n        throw new Error(\n          `got a boolean, but expected ${typeName(expectedType)}`,\n        );\n      }\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      if (isType(expectedType, SizeType)) {\n        return new LiteralExpression(SizeType, toSize(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded.toString());\n      }\n      if (!includesType(expectedType, NumberType)) {\n        throw new Error(`got a number, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      if (isType(expectedType, ColorType)) {\n        return new LiteralExpression(ColorType, colorFromString(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (!includesType(expectedType, StringType)) {\n        throw new Error(`got a string, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, expectedType, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('expected an array of numbers');\n    }\n  }\n\n  if (isType(expectedType, SizeType)) {\n    if (encoded.length !== 2) {\n      throw new Error(\n        `expected an array of two values for a size, got ${encoded.length}`,\n      );\n    }\n    return new LiteralExpression(SizeType, encoded);\n  }\n\n  if (isType(expectedType, ColorType)) {\n    if (encoded.length === 3) {\n      return new LiteralExpression(ColorType, [...encoded, 1]);\n    }\n    if (encoded.length === 4) {\n      return new LiteralExpression(ColorType, encoded);\n    }\n    throw new Error(\n      `expected an array of 3 or 4 values for a color, got ${encoded.length}`,\n    );\n  }\n\n  if (!includesType(expectedType, NumberArrayType)) {\n    throw new Error(\n      `got an array of numbers, but expected ${typeName(expectedType)}`,\n    );\n  }\n\n  return new LiteralExpression(NumberArrayType, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  LineMetric: 'line-metric',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n  Has: 'has',\n};\n\n/**\n * @typedef {function(Array, number, ParsingContext):Expression} Parser\n *\n * Second argument is the expected type.\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Var]: createCallExpressionParser(hasArgsCount(1, 1), withVarArgs),\n  [Ops.Has]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Id]: createCallExpressionParser(usesFeatureId, withNoArgs),\n  [Ops.Concat]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(StringType),\n  ),\n  [Ops.GeometryType]: createCallExpressionParser(usesGeometryType, withNoArgs),\n  [Ops.LineMetric]: createCallExpressionParser(withNoArgs),\n  [Ops.Resolution]: createCallExpressionParser(withNoArgs),\n  [Ops.Zoom]: createCallExpressionParser(withNoArgs),\n  [Ops.Time]: createCallExpressionParser(withNoArgs),\n  [Ops.Any]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.NotEqual]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.GreaterThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Multiply]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Coalesce]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Divide]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createCallExpressionParser(\n    hasArgsCount(1, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createCallExpressionParser(\n    hasArgsCount(4, Infinity),\n    hasEvenArgs,\n    withMatchArgs,\n  ),\n  [Ops.Between]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createCallExpressionParser(\n    hasArgsCount(6, Infinity),\n    hasEvenArgs,\n    withInterpolateArgs,\n  ),\n  [Ops.Case]: createCallExpressionParser(\n    hasArgsCount(3, Infinity),\n    hasOddArgs,\n    withCaseArgs,\n  ),\n  [Ops.In]: createCallExpressionParser(hasArgsCount(2, 2), withInArgs),\n  [Ops.Number]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.String]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createCallExpressionParser(\n    hasArgsCount(1, 4),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createCallExpressionParser(\n    hasArgsCount(1, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withPaletteArgs,\n  ),\n  [Ops.ToString]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, number, ParsingContext):Array<Expression>|void} ArgValidator\n *\n * An argument validator applies various checks to an encoded expression arguments and\n * returns the parsed arguments if any.  The second argument is the return type of the call expression.\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n  const args = new Array(argsCount);\n  for (let i = 0; i < argsCount; ++i) {\n    const key = encoded[i + 1];\n    switch (typeof key) {\n      case 'number': {\n        args[i] = new LiteralExpression(NumberType, key);\n        break;\n      }\n      case 'string': {\n        args[i] = new LiteralExpression(StringType, key);\n        break;\n      }\n      default: {\n        throw new Error(\n          `expected a string key or numeric array index for a get operation, got ${key}`,\n        );\n      }\n    }\n    if (i === 0) {\n      context.properties.add(String(key));\n    }\n  }\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, returnType, context) {\n  const name = encoded[1];\n  if (typeof name !== 'string') {\n    throw new Error('expected a string argument for var operation');\n  }\n  context.variables.add(name);\n\n  return [new LiteralExpression(StringType, name)];\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesFeatureId(encoded, returnType, context) {\n  context.featureId = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesGeometryType(encoded, returnType, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction hasArgsCount(minArgs, maxArgs) {\n  return function (encoded, returnType, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withArgsOfReturnType(encoded, returnType, context) {\n  const argCount = encoded.length - 1;\n  /**\n   * @type {Array<Expression>}\n   */\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    const expression = parse(encoded[i + 1], returnType, context);\n    args[i] = expression;\n  }\n  return args;\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsOfType(argType) {\n  return function (encoded, returnType, context) {\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], argType, context);\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasOddArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `expected an odd number of arguments for ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasEvenArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `expected an even number of arguments for operation ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction withMatchArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n\n  const inputType = StringType | NumberType | BooleanType;\n\n  const input = parse(encoded[1], inputType, context);\n\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    try {\n      const match = parse(encoded[i + 2], input.type, context);\n      args[i] = match;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of match expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 3], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} of match expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [input, ...args, fallback];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withInterpolateArgs(encoded, returnType, context) {\n  const interpolationType = encoded[1];\n  /**\n   * @type {number}\n   */\n  let base;\n  switch (interpolationType[0]) {\n    case 'linear':\n      base = 1;\n      break;\n    case 'exponential':\n      const b = interpolationType[1];\n      if (typeof b !== 'number' || b <= 0) {\n        throw new Error(\n          `expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(b)} instead`,\n        );\n      }\n      base = b;\n      break;\n    default:\n      throw new Error(\n        `invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n      );\n  }\n\n  const interpolation = new LiteralExpression(NumberType, base);\n\n  let input;\n  try {\n    input = parse(encoded[2], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse argument 1 in interpolate expression: ${err.message}`,\n    );\n  }\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    try {\n      const stop = parse(encoded[i + 3], NumberType, context);\n      args[i] = stop;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} for interpolate expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 4], returnType, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 3} for interpolate expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withCaseArgs(encoded, returnType, context) {\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    try {\n      const condition = parse(encoded[i + 1], BooleanType, context);\n      args[i] = condition;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i} of case expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 2], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of case expression: ${err.message}`,\n      );\n    }\n  }\n\n  args[args.length - 1] = fallback;\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withInArgs(encoded, returnType, context) {\n  let haystack = encoded[2];\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `the second argument for the \"in\" operator must be an array`,\n    );\n  }\n  /**\n   * @type {number}\n   */\n  let needleType;\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `for the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `failed to parse \"in\" expression: the literal operator must be followed by an array`,\n      );\n    }\n    haystack = haystack[1];\n    needleType = StringType;\n  } else {\n    needleType = NumberType;\n  }\n\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    try {\n      const arg = parse(haystack[i], needleType, context);\n      args[i] = arg;\n    } catch (err) {\n      throw new Error(\n        `failed to parse haystack item ${i} for \"in\" expression: ${err.message}`,\n      );\n    }\n  }\n\n  const needle = parse(encoded[1], needleType, context);\n  return [needle, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withPaletteArgs(encoded, returnType, context) {\n  let index;\n  try {\n    index = parse(encoded[1], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse first argument in palette expression: ${err.message}`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('the second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    let color;\n    try {\n      color = parse(colors[i], ColorType, context);\n    } catch (err) {\n      throw new Error(\n        `failed to parse color at index ${i} in palette expression: ${err.message}`,\n      );\n    }\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `the palette color at index ${i} must be a literal value`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {Array<ArgValidator>} validators A chain of argument validators.  The last validator is expected\n * to return the parsed arguments.\n * @return {Parser} The parser.\n */\nfunction createCallExpressionParser(...validators) {\n  return function (encoded, returnType, context) {\n    const operator = encoded[0];\n\n    /**\n     * @type {Array<Expression>}\n     */\n    let args;\n    for (let i = 0; i < validators.length; i++) {\n      const parsed = validators[i](encoded, returnType, context);\n      if (i == validators.length - 1) {\n        if (!parsed) {\n          throw new Error(\n            'expected last argument validator to return the parsed args',\n          );\n        }\n        args = parsed;\n      }\n    }\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {number} returnType The expected return type of the call expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, returnType, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`unknown operator: ${operator}`);\n  }\n  return parser(encoded, returnType, context);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {ColorType, LiteralExpression, Ops, parse} from './expression.js';\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, type, context);\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var:\n    case Ops.Has: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => {\n        const args = expression.args;\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          value = value[key];\n        }\n        return value;\n      };\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    case Ops.Has: {\n      return (context) => {\n        const args = expression.args;\n        if (!(name in context.properties)) {\n          return false;\n        }\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          if (!value || !Object.hasOwn(value, key)) {\n            return false;\n          }\n          value = value[key];\n        }\n        return true;\n      };\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {NO_COLOR} from '../../color.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    if (flatStyle[prefix + 'fill-color'] === 'none') {\n      // avoids hit detection\n      return (context) => null;\n    }\n\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === NO_COLOR) {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === NO_COLOR) {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], ColorType, context);\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @extends {Layer<VectorSourceType, RendererType>}\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<FeatureType, VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   * @override\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   * @override\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    const getAttributions = this.getSource()?.getAttributions();\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        this.handlePrecompose_,\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} renderEvent Render event\n   * @private\n   */\n  handlePrecompose_(renderEvent) {\n    const layerStatesArray =\n      /** @type {import(\"../render/Event.js\").default} */ (renderEvent)\n        .frameState.layerStatesArray;\n    const layerState = this.getLayerState(false);\n    assert(\n      !layerStatesArray.some(\n        (arrayLayerState) => arrayLayerState.layer === layerState.layer,\n      ),\n      'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n    );\n    layerStatesArray.push(layerState);\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n * @property {number} [cacheSize=512] The internal tile cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    const cacheSize = options.cacheSize;\n    delete options.cacheSize;\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * @return {number|undefined} The suggested cache size\n   * @protected\n   */\n  getCacheSize() {\n    return this.cacheSize_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Deprecated.  Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Deprecated.  Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * This is set as the cancellation reason when a tile is disposed.\n */\nexport const disposedError = new Error('disposed');\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true},\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @property {AbortController} [controller] An abort controller.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n\n    /**\n     * @type {AbortController|null}\n     * @private\n     */\n    this.controller_ = options.controller || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load the tile data.\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.controller_) {\n      this.controller_.abort(disposedError);\n      this.controller_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport Disposable from '../Disposable.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache. When the cache entry is a {@link module:ol/Disposable~Disposable},\n   * the entry will be disposed.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      const entry = this.pop();\n      if (entry instanceof Disposable) {\n        entry.dispose();\n      }\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/reproj/DataTile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport DataTile, {asArrayLike, asImageLike, toArray} from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D, releaseCanvas} from '../dom.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../DataTile.js\").default} TileGetter\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {DataTile} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n * @property {import(\"../proj/Projection.js\").default} targetProj Target projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n * @property {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n * @property {import(\"../tilecoord.js\").TileCoord} [wrappedTileCoord] Coordinate of the tile wrapped in X.\n * @property {number} pixelRatio Pixel ratio.\n * @property {number} gutter Gutter of the source tiles.\n * @property {TileGetter} getTileFunction Function returning source tiles (z, x, y, pixelRatio).\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {number} [errorThreshold] Acceptable reprojection error (in px).\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected data tile.\n * See {@link module:ol/source/DataTile~DataTileSource}.\n *\n */\nclass ReprojDataTile extends DataTile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    super({\n      tileCoord: options.tileCoord,\n      loader: () => Promise.resolve(new Uint8ClampedArray(4)),\n      interpolate: options.interpolate,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter;\n\n    /**\n     * @type {import(\"../DataTile.js\").Data}\n     * @private\n     */\n    this.reprojData_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.reprojError_ = null;\n\n    /**\n     * @type {import('../size.js').Size}\n     * @private\n     */\n    this.reprojSize_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = options.sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = options.targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = options.wrappedTileCoord || options.tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const sourceProj = options.sourceProj;\n    const sourceProjExtent = sourceProj.getExtent();\n    const sourceTileGridExtent = options.sourceTileGrid.getExtent();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceTileGridExtent\n        ? getIntersection(sourceProjExtent, sourceTileGridExtent)\n        : sourceProjExtent\n      : sourceTileGridExtent;\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = this.targetTileGrid_.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const targetProj = options.targetProj;\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      options.errorThreshold !== undefined\n        ? options.errorThreshold\n        : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = this.sourceTileGrid_.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = this.sourceTileGrid_.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n        const getTile = options.getTileFunction;\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTile(this.sourceZ_, srcX, srcY, this.pixelRatio_);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('../size.js').Size} Tile size.\n   * @override\n   */\n  getSize() {\n    return this.reprojSize_;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {import(\"../DataTile.js\").Data} Tile data.\n   * @override\n   */\n  getData() {\n    return this.reprojData_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @override\n   */\n  getError() {\n    return this.reprojError_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const dataSources = [];\n    let imageLike = false;\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const size = tile.getSize();\n      const gutter = this.gutter_;\n      /**\n       * @type {import(\"../DataTile.js\").ArrayLike}\n       */\n      let tileData;\n      const arrayData = asArrayLike(tile.getData());\n      if (arrayData) {\n        tileData = arrayData;\n      } else {\n        imageLike = true;\n        tileData = toArray(asImageLike(tile.getData()));\n      }\n      const pixelSize = [size[0] + 2 * gutter, size[1] + 2 * gutter];\n      const isFloat = tileData instanceof Float32Array;\n      const pixelCount = pixelSize[0] * pixelSize[1];\n      const DataType = isFloat ? Float32Array : Uint8ClampedArray;\n      const tileDataR = new DataType(tileData.buffer);\n      const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n      const bytesPerPixel = (bytesPerElement * tileDataR.length) / pixelCount;\n      const bytesPerRow = tileDataR.byteLength / pixelSize[1];\n      const bandCount = Math.floor(\n        bytesPerRow / bytesPerElement / pixelSize[0],\n      );\n      const packedLength = pixelCount * bandCount;\n      let packedData = tileDataR;\n      if (tileDataR.length !== packedLength) {\n        packedData = new DataType(packedLength);\n        let dataIndex = 0;\n        let rowOffset = 0;\n        const colCount = pixelSize[0] * bandCount;\n        for (let rowIndex = 0; rowIndex < pixelSize[1]; ++rowIndex) {\n          for (let colIndex = 0; colIndex < colCount; ++colIndex) {\n            packedData[dataIndex++] = tileDataR[rowOffset + colIndex];\n          }\n          rowOffset += bytesPerRow / bytesPerElement;\n        }\n      }\n      const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n      extent[0] += source.offset;\n      extent[2] += source.offset;\n      const clipExtent = this.clipExtent_?.slice();\n      if (clipExtent) {\n        clipExtent[0] += source.offset;\n        clipExtent[2] += source.offset;\n      }\n      dataSources.push({\n        extent: extent,\n        clipExtent: clipExtent,\n        data: new Uint8ClampedArray(packedData.buffer),\n        dataType: DataType,\n        bytesPerPixel: bytesPerPixel,\n        pixelSize: pixelSize,\n      });\n    });\n    this.sourceTiles_.length = 0;\n\n    if (dataSources.length === 0) {\n      this.state = TileState.ERROR;\n      this.changed();\n      return;\n    }\n\n    const z = this.wrappedTileCoord_[0];\n    const size = this.targetTileGrid_.getTileSize(z);\n    const targetWidth = typeof size === 'number' ? size : size[0];\n    const targetHeight = typeof size === 'number' ? size : size[1];\n    const targetResolution = this.targetTileGrid_.getResolution(z);\n    const sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n\n    let dataR, dataU;\n\n    const bytesPerPixel = dataSources[0].bytesPerPixel;\n\n    const reprojs = Math.ceil(bytesPerPixel / 3);\n    for (let reproj = reprojs - 1; reproj >= 0; --reproj) {\n      const sources = [];\n      for (let i = 0, len = dataSources.length; i < len; ++i) {\n        const dataSource = dataSources[i];\n        const buffer = dataSource.data;\n        const pixelSize = dataSource.pixelSize;\n        const width = pixelSize[0];\n        const height = pixelSize[1];\n        const context = createCanvasContext2D(width, height, canvasPool);\n        const imageData = context.createImageData(width, height);\n        const data = imageData.data;\n        let offset = reproj * 3;\n        for (let j = 0, len = data.length; j < len; j += 4) {\n          data[j] = buffer[offset];\n          data[j + 1] = buffer[offset + 1];\n          data[j + 2] = buffer[offset + 2];\n          data[j + 3] = 255;\n          offset += bytesPerPixel;\n        }\n        context.putImageData(imageData, 0, 0);\n        sources.push({\n          extent: dataSource.extent,\n          clipExtent: dataSource.clipExtent,\n          image: context.canvas,\n        });\n      }\n\n      const canvas = renderReprojected(\n        targetWidth,\n        targetHeight,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        false,\n        false,\n        false,\n      );\n\n      for (let i = 0, len = sources.length; i < len; ++i) {\n        const canvas = sources[i].image;\n        const context = canvas.getContext('2d');\n        releaseCanvas(context);\n        canvasPool.push(context.canvas);\n      }\n\n      const context = canvas.getContext('2d');\n      const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n\n      releaseCanvas(context);\n      canvasPool.push(canvas);\n\n      if (!dataR) {\n        dataU = new Uint8ClampedArray(\n          bytesPerPixel * imageData.width * imageData.height,\n        );\n        dataR = new dataSources[0].dataType(dataU.buffer);\n      }\n\n      const data = imageData.data;\n      let offset = reproj * 3;\n      for (let i = 0, len = data.length; i < len; i += 4) {\n        if (data[i + 3] === 255) {\n          dataU[offset] = data[i];\n          dataU[offset + 1] = data[i + 1];\n          dataU[offset + 2] = data[i + 2];\n        } else {\n          dataU[offset] = 0;\n          dataU[offset + 1] = 0;\n          dataU[offset + 2] = 0;\n        }\n        offset += bytesPerPixel;\n      }\n    }\n\n    if (imageLike) {\n      const context = createCanvasContext2D(targetWidth, targetHeight);\n      const imageData = new ImageData(dataR, targetWidth);\n      context.putImageData(imageData, 0, 0);\n      this.reprojData_ = context.canvas;\n    } else {\n      this.reprojData_ = dataR;\n    }\n    this.reprojSize_ = [\n      Math.round(targetWidth * this.pixelRatio_),\n      Math.round(targetHeight * this.pixelRatio_),\n    ];\n    this.state = TileState.LOADED;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    let leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach(({tile}) => {\n      const state = tile.getState();\n      if (state !== TileState.IDLE && state !== TileState.LOADING) {\n        return;\n      }\n      leftToLoad++;\n\n      const sourceListenKey = listen(tile, EventType.CHANGE, () => {\n        const state = tile.getState();\n        if (\n          state == TileState.LOADED ||\n          state == TileState.ERROR ||\n          state == TileState.EMPTY\n        ) {\n          unlistenByKey(sourceListenKey);\n          leftToLoad--;\n          if (leftToLoad === 0) {\n            this.unlistenSources_();\n            this.reproject_();\n          }\n        }\n      });\n      this.sourcesListenerKeys_.push(sourceListenKey);\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    } else {\n      this.sourceTiles_.forEach(function ({tile}) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojDataTile;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport DataTile, {asImageLike} from '../../DataTile.js';\nimport ImageTile from '../../ImageTile.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {createOrUpdate as createTileCoord, getKeyZXY} from '../../tilecoord.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @param {string} sourceKey The source key.\n * @param {number} z The tile z level.\n * @param {number} x The tile x level.\n * @param {number} y The tile y level.\n * @return {string} The cache key.\n */\nfunction getCacheKey(sourceKey, z, x, y) {\n  return `${sourceKey},${getKeyZXY(z, x, y)}`;\n}\n\n/**\n * @typedef {Object<number, Set<import(\"../../Tile.js\").default>>} TileLookup\n */\n\n/**\n * Add a tile to the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was added to the lookup.\n */\nfunction addTileToLookup(tilesByZ, tile, z) {\n  if (!(z in tilesByZ)) {\n    tilesByZ[z] = new Set([tile]);\n    return true;\n  }\n  const set = tilesByZ[z];\n  const existing = set.has(tile);\n  if (!existing) {\n    set.add(tile);\n  }\n  return !existing;\n}\n\n/**\n * Remove a tile from the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was removed from the lookup.\n */\nfunction removeTileFromLookup(tilesByZ, tile, z) {\n  const set = tilesByZ[z];\n  if (set) {\n    return set.delete(tile);\n  }\n  return false;\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection),\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=512] The cache size.\n */\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer);\n\n    options = options || {};\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedSourceKey_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedSourceRevision_;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tempExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<import(\"../../Tile.js\").default>}\n     * @private\n     */\n    this.tileCache_ = new LRUCache(cacheSize);\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection_ = undefined;\n\n    this.maxStaleKeys = cacheSize * 0.5;\n  }\n\n  /**\n   * @return {LRUCache} Tile cache.\n   */\n  getTileCache() {\n    return this.tileCache_;\n  }\n\n  /**\n   * Get a tile from the cache or create one if needed.\n   *\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getOrCreateTile(z, x, y, frameState) {\n    const tileCache = this.tileCache_;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const cacheKey = getCacheKey(tileSource.getKey(), z, x, y);\n\n    /** @type {import(\"../../Tile.js\").default} */\n    let tile;\n\n    if (tileCache.containsKey(cacheKey)) {\n      tile = tileCache.get(cacheKey);\n    } else {\n      tile = tileSource.getTile(\n        z,\n        x,\n        y,\n        frameState.pixelRatio,\n        frameState.viewState.projection,\n      );\n      if (!tile) {\n        return null;\n      }\n      tileCache.set(cacheKey, tile);\n    }\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getTile(z, x, y, frameState) {\n    const tile = this.getOrCreateTile(z, x, y, frameState);\n    if (!tile) {\n      return null;\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = this.getTile(z, tileCoord[1], tileCoord[2], frameState);\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      /**\n       * @type {import('../../DataTile.js').ImageLike}\n       */\n      let image;\n      if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n        image = tile.getImage();\n      } else if (tile instanceof DataTile) {\n        image = asImageLike(tile.getData());\n        if (!image) {\n          continue;\n        }\n      } else {\n        continue;\n      }\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(image, col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    if (!this.renderedProjection_) {\n      this.renderedProjection_ = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.renderedProjection_) {\n      this.tileCache_.clear();\n      this.renderedProjection_ = frameState.viewState.projection;\n    }\n\n    const source = this.getLayer().getSource();\n    if (!source) {\n      return false;\n    }\n    const sourceRevision = source.getRevision();\n    if (!this.renderedRevision_) {\n      this.renderedRevision_ = sourceRevision;\n    } else if (this.renderedRevision_ !== sourceRevision) {\n      this.renderedRevision_ = sourceRevision;\n      if (this.renderedSourceKey_ === source.getKey()) {\n        this.tileCache_.clear();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(frameState, extent, initialZ, tilesByZ, preload) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0),\n        ),\n        tileSource.zDirection,\n      ),\n    );\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_,\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          const tile = this.getTile(z, x, y, frameState);\n          if (!tile) {\n            continue;\n          }\n          const added = addTileToLookup(tilesByZ, tile, z);\n          if (!added) {\n            continue;\n          }\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findStaleTile_(tileCoord, tilesByZ) {\n    const tileCache = this.tileCache_;\n    const z = tileCoord[0];\n    const x = tileCoord[1];\n    const y = tileCoord[2];\n    const staleKeys = this.getStaleKeys();\n    for (let i = 0; i < staleKeys.length; ++i) {\n      const cacheKey = getCacheKey(staleKeys[i], z, x, y);\n      if (tileCache.containsKey(cacheKey)) {\n        const tile = tileCache.get(cacheKey);\n        if (tile.getState() === TileState.LOADED) {\n          tile.endTransition(getUid(this));\n          addTileToLookup(tilesByZ, tile, z);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tilesByZ) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_,\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileCache = this.tileCache_;\n    const source = this.getLayer().getRenderSource();\n    const sourceKey = source.getKey();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(sourceKey, altZ, x, y);\n        let loaded = false;\n        if (tileCache.containsKey(cacheKey)) {\n          const tile = tileCache.get(cacheKey);\n          if (tile.getState() === TileState.LOADED) {\n            addTileToLookup(tilesByZ, tile, altZ);\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * Render the layer.\n   *\n   * The frame rendering logic has three parts:\n   *\n   *  1. Enqueue tiles\n   *  2. Find alt tiles for those that are not yet loaded\n   *  3. Render loaded tiles\n   *\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    this.renderComplete = true;\n\n    /**\n     * TODO:\n     *  * maybe skip transition when not fully opaque\n     *  * decide if this.renderComplete is useful\n     */\n\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    const sourceKey = tileSource.getKey();\n    if (!this.renderedSourceKey_) {\n      this.renderedSourceKey_ = sourceKey;\n    } else if (this.renderedSourceKey_ !== sourceKey) {\n      this.prependStaleKey(this.renderedSourceKey_);\n      this.renderedSourceKey_ = sourceKey;\n    }\n\n    let frameExtent = frameState.extent;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      frameExtent = getIntersection(\n        frameExtent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    /**\n     * @type {TileLookup}\n     */\n    const tilesByZ = {};\n\n    this.renderedTiles.length = 0;\n\n    /**\n     * Part 1: Enqueue tiles\n     */\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection,\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(frameState, nextExtent, targetZ, tilesByZ, preload);\n    }\n\n    const renderExtent = getRenderExtent(frameState, frameExtent);\n    this.enqueueTiles(frameState, renderExtent, z, tilesByZ, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          renderExtent,\n          z - 1,\n          tilesByZ,\n          preload - 1,\n        );\n      }, 0);\n    }\n\n    if (!(z in tilesByZ)) {\n      return this.container;\n    }\n\n    /**\n     * Part 2: Find alt tiles for those that are not yet loaded\n     */\n\n    const uid = getUid(this);\n    const time = frameState.time;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tile of tilesByZ[z]) {\n      const tileState = tile.getState();\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tileState === TileState.EMPTY\n      ) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileState === TileState.LOADED) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n      }\n      this.renderComplete = false;\n\n      const hasStaleTile = this.findStaleTile_(tileCoord, tilesByZ);\n      if (hasStaleTile) {\n        // use the stale tile before the new tile's transition has completed\n        removeTileFromLookup(tilesByZ, tile, z);\n        frameState.animate = true;\n        continue;\n      }\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tilesByZ,\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tilesByZ,\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    /**\n     * Part 3: Render loaded tiles\n     */\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    const context = this.getRenderContext(frameState);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (layerState.extent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(tilesByZ).map(Number);\n    zs.sort(ascending);\n\n    let currentClip;\n    const clips = [];\n    const clipZs = [];\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      for (const tile of tilesByZ[currentZ]) {\n        if (tile.getState() !== TileState.LOADED) {\n          continue;\n        }\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = zs.length === 1;\n\n        let contextSaved = false;\n\n        // Clip mask for regions in this tile that already filled by a higher z tile\n        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n        for (let i = 0, ii = clips.length; i < ii; ++i) {\n          if (!transition && currentZ < clipZs[i]) {\n            const clip = clips[i];\n            if (\n              intersects(\n                [x, y, x + w, y + h],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n\n        this.drawTile(tile, frameState, x, y, w, h, tileGutter, transition);\n        if (contextSaved) {\n          context.restore();\n        }\n        this.renderedTiles.unshift(tile);\n\n        // TODO: decide if this is necessary\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    /**\n     * Here we unconditionally expire the source cache since the renderer maintains\n     * its own cache.\n     * @param {import(\"../../Map.js\").default} map Map.\n     * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n     */\n    const postRenderFunction = (map, frameState) => {\n      const tileSourceKey = getUid(tileSource);\n      const wantedTiles = frameState.wantedTiles[tileSourceKey];\n      const tilesCount = wantedTiles ? Object.keys(wantedTiles).length : 0;\n      this.updateCacheSize(tilesCount);\n      this.tileCache_.expireCache();\n    };\n\n    frameState.postRenderFunctions.push(postRenderFunction);\n\n    return this.container;\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   */\n  updateCacheSize(tileCount) {\n    this.tileCache_.highWaterMark = Math.max(\n      this.tileCache_.highWaterMark,\n      tileCount * 2,\n    );\n  }\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @protected\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    let image;\n    if (tile instanceof DataTile) {\n      image = asImageLike(tile.getData());\n      if (!image) {\n        throw new Error('Rendering array data is not yet supported');\n      }\n    } else {\n      image = this.getTileImage(\n        /** @type {import(\"../../ImageTile.js\").default} */ (tile),\n      );\n    }\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} [TileSourceType=import(\"../source/Tile.js\").default]\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this, {\n      cacheSize: this.getCacheSize(),\n    });\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {containsCoordinate} from '../../extent.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @override\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke,\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {import('../../structs/RBush.js').Entry<import('../../Feature.js').FeatureLike>} DeclutterEntry\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {DeclutterEntry} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, import(\"../../style/Style.js\").DeclutterMode): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {DeclutterEntry} Declutter rbush entry.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = Array.isArray(text)\n      ? text\n      : String(text).split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(\n              feature,\n              currentGeometry,\n              declutterMode,\n            );\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          context.moveTo(x, y);\n          prevX = (x + 0.5) | 0;\n          prevY = (y + 0.5) | 0;\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @private\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true},\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import('../../style/Style.js').DeclutterMode} declutterMode Declutter mode.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry, declutterMode) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            declutterMode === 'none' ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default<import('./Executor.js').DeclutterEntry>|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    const maxBuilderTypes = ALL.length;\n    let i, ii, j, jj, replays;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        const replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          if (\n            !zIndexContext ||\n            builderType === 'Text' ||\n            builderType === 'Image'\n          ) {\n            replay.execute(\n              context,\n              scaledCanvasSize,\n              transform,\n              viewRotation,\n              snapToPixel,\n              declutterTree,\n            );\n          } else {\n            zIndexContext.pushFunction((context) =>\n              replay.execute(\n                context,\n                scaledCanvasSize,\n                transform,\n                viewRotation,\n                snapToPixel,\n                declutterTree,\n              ),\n            );\n          }\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const index = zs[i] * maxBuilderTypes + j;\n            if (!this.deferredZIndexContexts_[index]) {\n              this.deferredZIndexContexts_[index] = [];\n            }\n            this.deferredZIndexContexts_[index].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n      deferredZIndexContexts[zs[i]].length = 0;\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   * @override\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   * @override\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   * @override\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   * @override\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup, {\n  ALL,\n  DECLUTTER,\n  NON_DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getHeight,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.clipped_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedPixelRatio_ = 1;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedFrameDeclutter_;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.targetContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} [declutterable] `true` to only render declutterable items,\n   *     `false` to only render non-declutterable items, `undefined` to render all.\n   */\n  renderWorlds(executorGroup, frameState, declutterable) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const declutter = this.getLayer().getDeclutter();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      let transform = this.getRenderTransform(\n        center,\n        resolution,\n        0,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth,\n      );\n      if (frameState.declutter) {\n        transform = transform.slice(0);\n      }\n      executorGroup.execute(\n        context,\n        [context.canvas.width, context.canvas.height],\n        transform,\n        rotation,\n        snapToPixel,\n        declutterable === undefined\n          ? ALL\n          : declutterable\n            ? DECLUTTER\n            : NON_DECLUTTER,\n        declutterable\n          ? declutter && frameState.declutter[declutter]\n          : undefined,\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * @private\n   */\n  setDrawContext_() {\n    if (this.opacity_ !== 1) {\n      this.targetContext_ = this.context;\n      this.context = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetDrawContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.targetContext_.globalAlpha;\n      this.targetContext_.globalAlpha = this.opacity_;\n      this.targetContext_.drawImage(this.context.canvas, 0, 0);\n      this.targetContext_.globalAlpha = alpha;\n      releaseCanvas(this.context);\n      canvasPool.push(this.context.canvas);\n      this.context = this.targetContext_;\n      this.targetContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!this.replayGroup_ || !this.getLayer().getDeclutter()) {\n      return;\n    }\n    this.renderWorlds(this.replayGroup_, frameState, true);\n  }\n\n  /**\n   * Render deferred instructions.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferredInternal(frameState) {\n    if (!this.replayGroup_) {\n      return;\n    }\n    this.replayGroup_.renderDeferred();\n    if (this.clipped_) {\n      this.context.restore();\n    }\n    this.resetDrawContext_();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    this.opacity_ = layerState.opacity;\n    const viewState = frameState.viewState;\n\n    this.prepareContainer(frameState, target);\n    const context = this.context;\n\n    const replayGroup = this.replayGroup_;\n    let render = replayGroup && !replayGroup.isEmpty();\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    this.setDrawContext_();\n\n    this.preRender(context, frameState);\n\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    this.clipped_ = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      this.clipped_ = render && !containsExtent(layerExtent, frameState.extent);\n      if (this.clipped_) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(\n        replayGroup,\n        frameState,\n        this.getLayer().getDeclutter() ? false : undefined,\n      );\n    }\n\n    if (!frameState.declutter && this.clipped_) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    if (!frameState.declutter) {\n      this.resetDrawContext_();\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   * @override\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (\n        this.frameState &&\n        !this.hitDetectionImageData_ &&\n        !this.animatingOrInteracting_\n      ) {\n        const size = this.frameState.size.slice();\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0,\n          ).slice(),\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX -= worldWidth;\n          }\n        }\n        const userProjection = getUserProjection();\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation,\n          getSquaredRenderTolerance(resolution, this.renderedPixelRatio_),\n          userProjection ? projection : null,\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_),\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   * @override\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    const declutter = this.getLayer().getDeclutter();\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        declutter && frameState.declutter[declutter]\n          ? frameState.declutter[declutter].all().map((item) => item.value)\n          : null,\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @override\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution,\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      this.renderedFrameDeclutter_ === !!frameState.declutter &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio,\n    );\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection,\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @param {number} index Index.\n       */\n      (feature, index) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            this.getLayer().getDeclutter(),\n            index,\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i], i);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer(),\n      !!frameState.declutter,\n    );\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedFrameDeclutter_ = !!frameState.declutter;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.renderedPixelRatio_ = pixelRatio;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/Vector.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=ExtractedFeatureType<VectorSourceType>]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=ExtractedFeatureType<VectorSourceType>]\n * @extends {BaseVectorLayer<FeatureType, VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorSourceType, FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @callback TransformFunction\n * @param {Array<number>} input\n * @param {Array<number>} [output]\n * @param {number} [dimension]\n * @param {number} [stride]\n * @return {Array<number>}\n *\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimensions that should be transformed.\n     * @param {number} [stride] Stride.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension, stride) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      stride = stride ?? dimension;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += stride) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = stride; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection,\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        const [style, weight, family] = font.split('\\n');\n        if (isAvailable(style, weight, family)) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @private\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.instructions_[this.zIndex + this.offset_].push(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.instructions_[this.zIndex + this.offset_].push(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\nconst maxStaleKeys = 5;\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.staleKeys_ = new Array();\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.maxStaleKeys = maxStaleKeys;\n  }\n\n  /**\n   * @return {Array<string>} Get the list of stale keys.\n   */\n  getStaleKeys() {\n    return this.staleKeys_;\n  }\n\n  /**\n   * @param {string} key The new stale key.\n   */\n  prependStaleKey(key) {\n    this.staleKeys_.unshift(key);\n    if (this.staleKeys_.length > this.maxStaleKeys) {\n      this.staleKeys_.length = this.maxStaleKeys;\n    }\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getHeight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @protected\n   */\n  prepareContainer(frameState, target) {\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    if (!this.containerReused) {\n      const canvas = this.context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        this.context.clearRect(0, 0, width, height);\n      }\n      if (canvasTransform !== canvas.style.transform) {\n        canvas.style.transform = canvasTransform;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {import(\"../ImageTile.js\").default} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceProj.getExtent()\n      : undefined;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (tile && tile.getState() == TileState.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({\n          extent: extent,\n          clipExtent: clipExtent,\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(tile, EventType.CHANGE, (e) => {\n            const state = tile.getState();\n            if (\n              state == TileState.LOADED ||\n              state == TileState.ERROR ||\n              state == TileState.EMPTY\n            ) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          });\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function ({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport {abstract, getUid} from '../util.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {withinExtentAndZ} from '../tilecoord.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @template {import(\"../Tile.js\").default} [TileType=import(\"../Tile.js\").default]\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     * @protected\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || getUid(this);\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {TileType|null} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached reprojected tiles from the source. The next render cycle will create new tiles.\n   * @api\n   */\n  clear() {}\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/uri\n */\n\nimport {hashZXY} from './tilecoord.js';\nimport {modulo} from './math.js';\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n\nconst zRegEx = /\\{z\\}/g;\nconst xRegEx = /\\{x\\}/g;\nconst yRegEx = /\\{y\\}/g;\nconst dashYRegEx = /\\{-y\\}/g;\n\n/**\n * @param {string} template The URL template.  Should have `{x}`, `{y}`, and `{z}` placeholders.  If\n * the template has a `{-y}` placeholder, the `maxY` parameter must be supplied.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @param {number} [maxY] The maximum y coordinate at the given z level.\n * @return {string} The URL.\n */\nexport function renderXYZTemplate(template, z, x, y, maxY) {\n  return template\n    .replace(zRegEx, z.toString())\n    .replace(xRegEx, x.toString())\n    .replace(yRegEx, y.toString())\n    .replace(dashYRegEx, function () {\n      if (maxY === undefined) {\n        throw new Error(\n          'If the URL template has a {-y} placeholder, the grid extent must be known',\n        );\n      }\n      return (maxY - y).toString();\n    });\n}\n\n/**\n * @param {Array<string>} urls List of URLs.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {string} The chosen URL.\n */\nexport function pickUrl(urls, z, x, y) {\n  const hash = hashZXY(z, x, y);\n  const index = modulo(hash, urls.length);\n  return urls[index];\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {renderXYZTemplate} from './uri.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default|null} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      let maxY;\n      const z = tileCoord[0];\n      if (tileGrid) {\n        // The `{-y}` placeholder only works for sources that have a tile grid at construction\n        const range = tileGrid.getFullTileRange(z);\n        if (range) {\n          maxY = range.getHeight() - 1;\n        }\n      }\n      return renderXYZTemplate(template, z, tileCoord[1], tileCoord[2], maxY);\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * TODO: Update ol-mapbox-style to import this from the uri.js module.\n */\nexport {expandUrl} from './uri.js';\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {expandUrl} from '../uri.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @override\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @override\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const tileCoord = [z, x, y];\n    const key = this.getKey();\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    tile.key = key;\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    const key = this.getKey();\n    return this.createTile_(z, x, y, pixelRatio, projection, key);\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Deprecated.  Use an ImageTile source with a loader\n * instead.  Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] Deprecated.  Use an ImageTile source and provide an array of URLs for the\n * url option instead.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible ?? true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n  if (!Array.isArray(attributionLike)) {\n    attributionLike = [attributionLike];\n  }\n  return (frameState) => attributionLike;\n}\n\nexport default Source;\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection),\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z,\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection),\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), a\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @typedef {function(this:(import(\"./source/Vector\").default<FeatureType>|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<FeatureType>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<FeatureType>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      try {\n        /** @type {Document|Node|Object|string|undefined} */\n        let source;\n        if (type == 'text' || type == 'json') {\n          source = xhr.responseText;\n        } else if (type == 'xml') {\n          source = xhr.responseXML || xhr.responseText;\n        } else if (type == 'arraybuffer') {\n          source = /** @type {ArrayBuffer} */ (xhr.response);\n        }\n        if (source) {\n          success(\n            /** @type {Array<FeatureType>} */\n            (\n              format.readFeatures(source, {\n                extent: extent,\n                featureProjection: projection,\n              })\n            ),\n            format.readProjection(source),\n          );\n        } else {\n          failure();\n        }\n      } catch {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @template {import(\"./Feature.js\").FeatureLike} FeatureType\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @return {FeatureLoader<FeatureType>} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<FeatureType>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source =\n      /** @type {import(\"./source/Vector\").default<FeatureType>} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<FeatureType>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID,\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport RenderFeature from '../render/Feature.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureType} [feature] Feature.\n   * @param {Array<FeatureType>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureType|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureType>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} [T=import(\"../Feature.js\").default]\n * @typedef {T extends RenderFeature ? T|Array<T> : T} FeatureClassOrArrayOfRenderFeatures\n */\n\n/***\n * @template Return\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent<FeatureType>, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureType>|Collection<FeatureType>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default<FeatureType>} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader<FeatureType>} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureType>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader<FeatureType>}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<FeatureType>|null}\n     */\n    this.format_ = options.format || null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, this.format_);\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureType>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import('../Feature.js').FeatureLike|Array<import('../Feature.js').FeatureLike>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureType>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureType>} */\n    let collection;\n    /** @type {Array<FeatureType>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if a {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureType} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature),\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this,\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else {\n          if (!Array.isArray(indexedFeature)) {\n            this.idIndex_[id] = [indexedFeature, feature];\n          } else {\n            indexedFeature.push(feature);\n          }\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source',\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureType>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureType>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureType>} */\n    const newFeatures = [];\n    /** @type {Array<FeatureType>} */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureType>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with a {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureType>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent)),\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureType} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      },\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClassOrArrayOfRenderFeatures<FeatureType>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined\n      ? /** @type {FeatureClassOrArrayOfRenderFeatures<FeatureType>} */ (\n          feature\n        )\n      : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureType|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default<FeatureType>|null}} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureType} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature),\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        },\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART),\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features,\n              ),\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR),\n            );\n          },\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Batch remove features from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {Array<FeatureType>} features Features to remove.\n   * @api\n   */\n  removeFeatures(features) {\n    let removed = false;\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      removed = this.removeFeatureInternal(features[i]) || removed;\n    }\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove a single feature from the source. If you want to batch remove\n   * features, use the {@link module:ol/source/Vector~VectorSource#removeFeatures #removeFeatures()} method\n   * instead.\n   * @param {FeatureType} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const removed = this.removeFeatureInternal(feature);\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} True if the feature was removed, false if it was not found.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    if (!(featureKey in this.uidIndex_)) {\n      return false;\n    }\n\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    featureChangeKeys?.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      const idString = id.toString();\n      const indexedFeature = this.idIndex_[idString];\n      if (indexedFeature === feature) {\n        delete this.idIndex_[idString];\n      } else if (Array.isArray(indexedFeature)) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n        if (indexedFeature.length === 1) {\n          this.idIndex_[idString] = indexedFeature[0];\n        }\n      }\n    }\n    delete this.uidIndex_[featureKey];\n    if (this.hasListener(VectorEventType.REMOVEFEATURE)) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature),\n      );\n    }\n    return true;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        break;\n      }\n    }\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader<FeatureType>} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {import(\"rbush\").BBox & {value: T}} Entry\n * @template T\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template {Object} T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     * @type {RBush_<Entry<T>>}\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry<T>>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry<T>} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry<T>} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {import(\"rbush\").BBox} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush<T>} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is a {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @private\n     */\n    this.initialOptions_;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   * @override\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   * @override\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const ctx = createCanvasContext2D(\n      Math.ceil(image.width * pixelRatio),\n      Math.ceil(image.height * pixelRatio),\n    );\n    const canvas = ctx.canvas;\n\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          const onChange = () => {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          };\n          this.addEventListener(EventType.CHANGE, onChange);\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    /**\n     * @private\n     */\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio,\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * * **declutter**: Overlapping symbols and text are decluttered.\n * * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return hashZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {number} Hash.\n */\nexport function hashZXY(z, x, y) {\n  return (x << z) + y;\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e6, 1e6, 1e6, 1e6, 2, 2];\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString =\n    'matrix(' +\n    mat\n      .map(\n        (value, i) =>\n          Math.round(value * matrixPrecision[i]) / matrixPrecision[i],\n      )\n      .join(', ') +\n    ')';\n  return transformString;\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '10.2.1';\n","\n/**\n * Rearranges items so that all items in the [left, k] are the smallest.\n * The k-th element will have the (k - left + 1)-th smallest value in [left, right].\n *\n * @template T\n * @param {T[]} arr the array to partially sort (in place)\n * @param {number} k middle index for partial sorting (as defined above)\n * @param {number} [left=0] left index of the range to sort\n * @param {number} [right=arr.length-1] right index\n * @param {(a: T, b: T) => number} [compare = (a, b) => a - b] compare function\n */\nexport default function quickselect(arr, k, left = 0, right = arr.length - 1, compare = defaultCompare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight, compare);\n        }\n\n        const t = arr[k];\n        let i = left;\n        /** @type {number} */\n        let j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\n/**\n * @template T\n * @param {T[]} arr\n * @param {number} i\n * @param {number} j\n */\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @returns {number}\n */\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n"],"names":["Property","CollectionEvent","Event","constructor","type","element","index","super","this","Collection","BaseObject","array","options","on","once","un","unique_","unique","array_","i","ii","length","assertUnique_","updateLength_","clear","getLength","pop","extend","arr","push","forEach","f","getArray","item","get","insertAt","elem","Error","splice","dispatchEvent","CollectionEventType","ADD","removeAt","n","remove","prev","REMOVE","setAt","set","except","disposed","dispose","disposeInternal","Feature","geometryOrProperties","id_","undefined","geometryName_","style_","styleFunction_","geometryChangeKey_","addChangeListener","handleGeometryChanged_","geometry","setGeometry","properties","setProperties","clone","hasProperties","getProperties","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","changed","unlistenByKey","listen","EventType","CHANGE","obj","styles","Array","isArray","assert","createStyleFunction","setId","id","name","removeChangeListener","EventTarget","listenImage","image","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","listenOnce","LOAD","src","IMAGE_DECODE","decode","then","catch","error","ERROR","decodeFallback","Promise","resolve","reject","e","complete","width","handleLoad","unlisten","handleError","removeEventListener","addEventListener","load","IDLE","LOADING","LOADED","EMPTY","ImageTile","Tile","tileCoord","state","crossOrigin","tileLoadFunction","crossOrigin_","src_","key","image_","Image","unlisten_","tileLoadFunction_","getImage","setImage","TileState","unlistenImage_","handleImageError_","ctx","createCanvasContext2D","fillStyle","fillRect","canvas","getBlankImage","handleImageLoad_","naturalWidth","naturalHeight","bind","MapRenderer","Disposable","map","map_","dispatchRenderEvent","frameState","abstract","calculateMatrices2D","viewState","coordinateToPixelTransform","pixelToCoordinateTransform","composeTransform","size","resolution","rotation","center","makeInverse","forEachFeatureAtCoordinate","coordinate","hitTolerance","checkWrapped","callback","thisArg","layerFilter","thisArg2","result","managed","feature","layer","call","projection","translatedCoordinate","wrapX","slice","offsets","canWrapX","projectionExtent","getExtent","worldWidth","getWidth","layerStates","layerStatesArray","numLayers","matches","tmpCoord","j","layerState","hasRenderer","inView","layerRenderer","getRenderer","source","getSource","coordinates","getWrapX","order","m","distanceSq","sort","a","b","some","hasFeatureAtCoordinate","TRUE","getMap","renderFrame","scheduleExpireIconCache","iconImageCache","canExpireCache","postRenderFunctions","expireIconCache","expire","fontChangeListenerKey_","checkedFonts","ObjectEventType","PROPERTYCHANGE","redrawText","element_","document","createElement","position","height","zIndex","className","CLASS_UNSELECTABLE","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","hasListener","event","RenderEvent","display","RenderEventType","PRECOMPOSE","BaseVectorLayer","getDeclutter","declutter","renderedLayerStates","previousElement","layerIndex","sourceState","getSourceState","unrender","render","replaceChildren","POSTCOMPOSE","renderDeclutter","renderDeferred","GroupEvent","LayerGroup","BaseLayer","baseOptions","Object","assign","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","getUid","collectionEvent","collection","currentLayers","getLayersArray","getLayerStatesArray","dest","states","pos","ownLayerState","getLayerState","defaultZIndex","opacity","visible","maxResolution","Math","min","minResolution","max","minZoom","maxZoom","extent","getIntersection","MapBrowserEventHandler","Target","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","TOUCHMOVE","PASSIVE_EVENT_LISTENERS","passive","emulateClick_","pointerEvent","newEvent","MapBrowserEvent","MapBrowserEventType","CLICK","clearTimeout","DBLCLICK","setTimeout","SINGLECLICK","updateActivePointers_","pointerId","POINTERUP","POINTERCANCEL","target","POINTERDOWN","POINTERMOVE","values","handlePointerUp_","defaultPrevented","isMouseActionButton_","button","PointerEvent","defineProperty","writable","value","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","POINTERDRAG","dragging","originalEvent","cancelable","preventDefault","abs","clientX","clientY","DROP","Infinity","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","PriorityQueue","tilePriorityFunction","tileChangeCallback","apply","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","getState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","Attribution","Control","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","attributions_","attributions","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","String","title","appendChild","handleClick_","cssClasses","CLASS_CONTROL","CLASS_COLLAPSED","renderedAttributions_","collectSourceAttributions_","getAllLayers","visibleAttributions","Set","flatMap","getAttributions","add","getAttributionsCollapsible","setCollapsible","from","updateElement_","all","attribution","toPromise","equals","removeChildren","innerHTML","handleToggle_","classList","toggle","replaceNode","getCollapsible","setCollapsed","getCollapsed","mapEvent","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","duration","autoHide_","autoHide","rotation_","CLASS_HIDDEN","resetNorth_","view","getView","getRotation","PI","animate","easing","easeOut","setRotation","transform","contains","Zoom","delta","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","getZoom","newZoom","getConstrainedZoom","getAnimating","cancelAnimations","zoom","setZoom","removeLayerMapProperty","Layer","setMapInternal","setLayerMapProperty","Map","optionsInternal","keyboardEventTarget","getElementById","layerGroup","controls","interactions","overlays","MapProperty","View","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","DEVICE_PIXEL_RATIO","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","createTransform","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","window","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","zoomOptions","rotate","rotateOptions","attributionOptions","defaultControls","defaultInteractions","onFocusOnly","overlays_","overlayIdIndex_","renderer_","postRenderFunctions_","tileQueue_","TileQueue","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","setMap","addOverlayInternal_","toString","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","setTarget","forEachFeatureAtPixel","pixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getCoordinateFromPixel","getEventPixel","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","viewportSize","getSize","scaleX","scaleY","eventPosition","changedTouches","left","top","getTarget","getTargetElement","toUserCoordinate","getProjection","applyTransform","getOverlayById","group","getLoadingOrNotReady","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","fromUserCoordinate","getPixelFromCoordinateInternal","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","log","sqrt","browserEvent","mapBrowserEvent","handleMapBrowserEvent","eventType","WHEEL","KEYDOWN","rootNode","currentDoc","ShadowRoot","host","documentElement","interactionsArray","getActive","handleEvent","propagationStopped","handlePostRender","tileQueue","hints","viewHints","ViewHint","ANIMATING","INTERACTING","lowOnFrameBudget","Date","now","time","RENDERCOMPLETE","MapEvent","MapEventType","LOADEND","LOADSTART","resolveConstraints","CONTEXTMENU","unobserve","setSize","CompositeMapRenderer","targetRoot","KEYPRESS","observe","cancelAnimationFrame","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","requestAnimationFrame","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","hasArea","isDef","getHints","getForViewAndSize","usedTiles","mapId","renderTargets","nextCenter","nextResolution","isNaN","nextRotation","nextExtent","prototype","equalsExtent","MOVESTART","createOrUpdateEmpty","MOVEEND","POSTRENDER","setLayerGroup","oldLayerGroup","computedStyle","getComputedStyle","offsetWidth","parseFloat","offsetHeight","getClientRects","warn","oldSize","setViewportSize","activePointers","pixel_","coordinate_","stopPropagation","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","ObjectEvent","oldValue","Observable","values_","hasOwnProperty","getKeys","keys","getPropertiesInternal","notify","listener","silent","applyProperties","unset","onInternal","onceInternal","unInternal","revision_","getRevision","len","ol_key","unByKey","transition_","transition","transitionStarts_","interpolate","release","setState","getTileCoord","getAlpha","start","easeIn","inTransition","endTransition","TileRange","minX","maxX","minY","maxY","containsXY","containsTileRange","tileRange","x","y","getHeight","intersects","createOrUpdate","CENTER","RESOLUTION","ROTATION","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","clamp","ratio","none","getViewportClampedResolution","maxExtent","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createMinMaxResolution","direction","cappedMaxRes","hints_","animations_","updateAnimationKey_","projection_","createProjection","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","disableCoordinateWarning","fromUserExtent","applyOptions_","ViewProperty","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","isGlobal","resolutions","constrainResolution","capped","z","floor","linearFindNearest","createSnapToResolutions","defaultMaxResolution","METERS_PER_UNIT","degrees","getMetersPerUnit","DEFAULT_TILE_SIZE","pow","defaultMinResolution","power","tolerance","minZoomLevel","ceil","offset","cappedZoomLevel","zoomLevel","newResolution","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","centerNone","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createSnapToZero","rotationNone","createSnapToN","disable","createRotationConstraint","constraints_","setCenterInternal","setResolution","oldPadding","getCenterInternal","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","var_args","args","arguments","anchor","animateInternal","animationCount","animationCallback","series","animation","inAndOut","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","modulo","targetRotation","isNoopAnimation","setHint","updateAnimations_","getInteracting","jj","NaN","more","seriesComplete","elapsed","fraction","progress","x0","y0","x1","y1","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","currentCenter","rotateCoordinate","addCoordinate","currentResolution","w","h","cos","sin","getCenter","getConstraints","getConstrainResolution","calculateExtent","calculateExtentInternal","toUserExtent","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","getViewStateAndExtent","nearest","baseLevel","fit","geometryOrExtent","polygonFromExtent","getType","userProjection","getUserProjection","fitInternal","rotatedExtentForGeometry","cosAngle","sinAngle","coords","getFlatCoordinates","stride","getStride","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","VOID","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","targetZoom","targetRes","returnValue","coordinatesEqual","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","found","candidate","reverseSubArray","begin","end","tmp","data","extension","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","res","assertion","errorMessage","channel","alias","xyz","A","C","D50","D55","D65","D75","F2","F7","F11","E","whitepoint","rgb","_xyz","white","r","g","arg","o","_u","_v","l","u","v","xn","yn","zn","luv","vn","yr","lchuv","hr","c","atan2","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","whitesmoke","yellow","yellowgreen","cstr","space","parts","alpha","toLowerCase","names","base","parseInt","exec","dims","replace","trim","split","shift","baseHues","endsWith","test","match","join","hsl","t1","t2","t3","val","s","NO_COLOR","asString","color","MAX_CACHE_SIZE","cache","cacheSize","withAlpha","output","rgbaToLcha","lchaToRgba","fromString","raw","Number","parsed","parse","parseRgba","normalize","asArray","round","asColorLike","pattern","iconCache","getPattern","cacheKey","canvasPattern","iconImage","getImageState","ImageState","patternCanvasContext","drawImage","getIconImage","asCanvasPattern","levels","info","level","console","target_","closestOnSegment","segment","x2","y2","dx","dy","along","coordinate1","coordinate2","angle","scale","squaredDistance","coord1","coord2","distance","squaredDistanceToSegment","worldsAway","sourceExtentWidth","getWorldsAway","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","lineHeight","weight","variant","families","family","canvasPool","settings","WORKER_OFFSCREEN_CANVAS","OffscreenCanvas","getContext","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","clearRect","newNode","oldNode","parent","parentNode","replaceChild","node","lastChild","children","oldChildren","childNodes","oldChild","newChild","removeChild","t","linear","originalListener","eventsKey","BLUR","CLEAR","DRAGENTER","DRAGOVER","FOCUS","RESIZE","eventTarget_","pendingRemovals_","dispatching_","listeners_","listeners","listenersForType","includes","isString","evt","dispatching","pendingRemovals","propagate","pr","getListeners","indexOf","conditions","pass","altKeyOnly","altKey","metaKey","ctrlKey","shiftKey","altShiftKeysOnly","focusWithTabindex","hasAttribute","activeElement","focus","always","click","mouseActionButton","WEBKIT","MAC","never","FALSE","singleClick","noModifierKeys","platformModifierKeyOnly","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","boundingExtent","createEmpty","extendCoordinate","buffer","closestSquaredDistanceXY","containsCoordinate","containsExtent","extent1","extent2","coordinateRelationship","relationship","Relationship","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","extendFlatCoordinates","extendXY","forEachCorner","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getCorner","corner","x3","y3","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getRotatedViewport","intersection","returnOrUpdate","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","transformFn","stops","xs","ys","_boundingExtentXYs","wrapAndSliceX","isFinite","dataProjection","defaultFeatureProjection","featureClass","supportedMediaTypes","getReadOptions","readProjection","getUnits","setWorldExtent","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","write","transformed","equivalentProjection","fromProjection","toProjection","getTransform","decimals","GeometryConstructor","Point","LineString","Polygon","MultiPoint","MultiLineString","MultiPolygon","createRenderFeature","object","flat","geometryType","layout","RenderFeature","ends","linearRingssAreOriented","orientLinearRingsArray","linearRingsAreOriented","orientLinearRings","orientFlatCoordinates","enableSimplifyTransformed","createGeometry","geometries","GeometryCollection","Geometry","getObject","JSON","FeatureFormat","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","readGeometryInternal","getLayoutForStride","readPointGeometry","readLineStringGeometry","deflateCoordinatesArray","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","endss","deflateMultiCoordinatesArray","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","getCoordinates","writePointGeometry","writeLineStringGeometry","right","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","getGeometriesArray","writeGeometryCollectionGeometry","JSONFeature","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","featureObject","geometryObject","crs","objects","memoizeOne","fn","lastResult","lastArgs","lastThis","nextArgs","arrayEquals","getter","err","promiseGetter","tmpTransform","extent_","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","point","intersectsCoordinate","computeExtent","sx","sy","simplify","intersectsExtent","translate","destination","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","transform2D","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","cloneGeometries","getGeometries","getGeometriesArrayRecursive","geometriesArray","concat","simplifiedGeometries","simplified","simplifiedGeometry","setGeometries","setGeometriesArray","SimpleGeometry","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","setCoordinates","setFlatCoordinates","appendCoordinate","lineString","maxSquaredDelta","assignClosestPoint","forEachSegment","getCoordinateAtM","extrapolate","lineStringCoordinateAtM","inflateCoordinates","getCoordinateAt","interpolatePoint","lineStringLength","getFlatMidpoint","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","douglasPeucker","intersectsLineString","setLayout","deflateCoordinates","ends_","lineStrings","getLayout","appendLineString","multiLineString","arrayMaxSquaredDelta","assignClosestArrayPoint","lineStringsCoordinateAtM","inflateCoordinatesArray","getEnds","getLineString","getLineStrings","getFlatMidpoints","midpoints","midpoint","simplifiedEnds","douglasPeuckerArray","intersectsLineStringArray","appendPoint","multiPoint","squaredDx","getPoint","getPoints","points","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","polygons","thisEndss","polygon","appendPolygon","newEndss","multiPolygon","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","getOrientedFlatCoordinates","linearRingssContainsXY","linearRingssArea","inflateMultiCoordinatesArray","getEndss","getFlatInteriorPoints","flatCenters","linearRingssCenter","getInteriorPointsOfMultiArray","getInteriorPoints","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","lastEnds","deflateCoordinate","LinearRing","linearRingArea","flatInteriorPointRevision_","flatInteriorPoint_","appendLinearRing","linearRing","linearRingsContainsXY","linearRingsArea","getFlatInteriorPoint","flatCenter","getInteriorPointOfArray","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","quantizeArray","intersectsLinearRingArray","fromExtent","fromCircle","circle","sides","arrayLength","radius","startAngle","makeRegular","getRadius","getFirstCoordinate","getLastCoordinate","getStrideForLayout","nesting","startsWith","transformGeom2D","simpleGeometry","twiceArea","dx1","dy1","dx2","dy2","linearRingss","assignClosest","offset1","offset2","lerp","squaredDelta","maxDelta","isRing","tmpPoint","linearRingContainsExtent","linearRingContainsXY","wn","coordinatess","coordinatesss","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","interiorPoints","dimension","cumulativeLengths","lo","hi","m0","coordinatesExtent","point1","point2","intersectsLinearRing","linearRingIsClockwise","edge","isClockwise","reverseCoordinates","inflateEnds","startOrientation","prevEndIndex","orientation","ret","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredSegmentDistance","snap","quantize","destinationStride","k","anchorX","anchorY","ua","navigator","userAgent","FIREFOX","devicePixelRatio","WorkerGlobalScope","self","DoubleClickZoom","Interaction","delta_","stopEvent","zoomByDelta","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","DragBoxEventType","DragBoxEvent","DragBox","PointerInteraction","box_","minArea_","minArea","onBoxEnd","condition_","condition","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","handleDragEvent","handleUpEvent","completeBox","handleDownEvent","setActive","active","InteractionProperty","ACTIVE","pan","handleMoveEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","centroid","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","noKinetic_","centroidFromPointers","update","scaleCoordinate","getDistance","getAngle","centerpx","DragRotate","lastAngle_","theta","DragZoom","out_","out","factor","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","Key","mapUnitsDelta","KeyboardZoom","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","defaults","Kinetic","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","background_","background","LayerProperty","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MIN_ZOOM","MAX_ZOOM","className_","state_","getBackground","getClassName","getZIndex","getOpacity","getVisible","EXTENT","setBackground","setExtent","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","SizeType","AnyType","typeNames","namedTypes","typeName","namedType","includesType","broad","specific","isType","expected","LiteralExpression","isSpecific","CallExpression","operator","_len","_key","newParsingContext","variables","featureId","encoded","expectedType","toSize","colorFromString","returnType","parser","parsers","parseCallExpression","Ops","createCallExpressionParser","hasArgsCount","withGetArgs","withNoArgs","withArgsOfType","withArgsOfReturnType","hasEvenArgs","argsCount","inputType","input","fallback","message","interpolationType","interpolation","stop","operation","argCount","needleType","colors","parsedColors","minArgs","maxArgs","expression","argType","_len2","validators","_key2","computeGeometryType","substring","buildExpression","compileExpression","colorValue","compileAssertionExpression","nameExpression","hasOwn","compileAccessorExpression","op","compileLogicalExpression","compileComparisonExpression","atan","compileNumericExpression","compileCaseExpression","compileMatchExpression","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","compileInterpolateExpression","compileConvertExpression","input1","output1","input2","output2","rgba1","rgba2","lcha1","lcha2","deltaHue","lcha","rulesToStyleFunction","rules","parsingContext","evaluator","compiledRules","rule","styleLength","buildStyle","someMatched","filterEvaluator","else","styleEvaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","nonNullCount","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","numberArrayEvaluator","declutterMode","optionalDeclutterMode","text","Text","setText","setFill","setBackgroundFill","setStroke","setBackgroundStroke","setFont","setMaxAngle","setOffsetX","setOffsetY","setOverflow","placement","setPlacement","setRepeat","setScale","setRotateWithView","textAlign","setTextAlign","justify","setJustify","textBaseline","setTextBaseline","setPadding","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","anchorOrigin","optionalIconOrigin","anchorXUnits","optionalIconAnchorUnits","anchorYUnits","property","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","offsetOrigin","optionalNumber","optionalSize","icon","Icon","setDisplacement","setAnchor","buildIcon","pointsName","radiusName","requireNumber","radius2","shape","RegularShape","buildShape","evaluateRadius","Circle","setRadius","buildCircle","buildImage","evaluateZIndex","Style","empty","fill","stroke","evaluateColor","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","colorLikeEvaluator","patternEvaluator","Fill","setColor","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","Stroke","setWidth","lineCap","setLineCap","lineJoin","setLineJoin","setLineDash","setLineDashOffset","setMiterLimit","requireSize","requireSizeLike","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getFeatures","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","declutterGroup","RBush","setRenderOrder","renderOrder","createDefaultStyle","styleLike","toStyleLike","toStyleFunction","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","sourceReady_","rendered","SOURCE","handleSourcePropertyChange_","setSource","getRenderSource","handleSourceChange_","getData","isVisible","getMapInternal","find","layerExtent","prepareFrame","MAP","handlePrecompose_","renderEvent","arrayLayerState","createRenderer","BaseTileLayer","preload","useInterimTilesOnError","cacheSize_","setPreload","setUseInterimTilesOnError","getCacheSize","getPreload","TileProperty","getUseInterimTilesOnError","asImageLike","HTMLCanvasElement","HTMLVideoElement","ImageBitmap","disposedError","sharedContext","defaultSize","DataTile","loader_","loader","data_","error_","size_","controller_","controller","imageData","getError","abort","highWaterMark","count_","entries_","oldest_","newest_","expireCache","keep","entry","containsKey","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","Uint8ClampedArray","gutter_","gutter","reprojData_","reprojError_","reprojSize_","sourceTileGrid_","sourceTileGrid","targetTileGrid_","targetTileGrid","wrappedTileCoord_","wrappedTileCoord","sourceTiles_","sourcesListenerKeys_","sourceZ_","sourceProjExtent","sourceTileGridExtent","clipExtent_","targetExtent","getTileCoordExtent","maxTargetExtent","maxSourceExtent","limitedTargetExtent","targetProj","calculateSourceExtentResolution","errorThresholdInPixels","errorThreshold","ERROR_THRESHOLD","triangulation_","Triangulation","getTriangles","getZForResolution","sourceExtent","calculateSourceExtent","sourceRange","getTileRangeForExtentAndZ","getTile","getTileFunction","srcX","srcY","reproject_","dataSources","imageLike","tileData","arrayData","Uint8Array","Float32Array","DataView","willReadFrequently","getImageData","toArray","pixelSize","isFloat","pixelCount","DataType","tileDataR","bytesPerElement","BYTES_PER_ELEMENT","bytesPerPixel","bytesPerRow","byteLength","bandCount","packedLength","packedData","dataIndex","rowOffset","colCount","rowIndex","colIndex","clipExtent","dataType","getTileSize","targetWidth","targetHeight","dataR","dataU","reproj","sources","dataSource","createImageData","putImageData","renderReprojected","ImageData","leftToLoad","_ref","sourceListenKey","unlistenSources_","_ref2","getCacheKey","sourceKey","getKeyZXY","addTileToLookup","tilesByZ","existing","has","removeTileFromLookup","delete","getRenderExtent","gridExtent","getTileGridForProjection","CanvasTileLayerRenderer","CanvasLayerRenderer","tileLayer","extentChanged","renderComplete","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","renderedSourceKey_","renderedSourceRevision_","tempExtent","tempTileRange_","tempTileCoord_","createTileCoord","tileCache_","LRUCache","renderedProjection_","maxStaleKeys","getTileCache","getOrCreateTile","tileCache","tileSource","getLayer","tileGrid","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","getOrigin","tileSize","ReprojTile","col","row","getGutterForProjection","sourceRevision","renderedRevision_","enqueueTiles","initialZ","minZ","zDirection","tileQueueKey","getTileCoordCenter","findStaleTile_","staleKeys","getStaleKeys","findAltTiles_","altZ","getTileRangeForTileCoordAndZ","covered","viewResolution","viewCenter","prependStaleKey","frameExtent","prepareContainer","canvasExtent","targetZ","renderExtent","uid","tileState","ReprojDataTile","parentZ","canvasScale","getRenderContext","tempTransform","clipUnrotated","getInterpolate","imageSmoothingEnabled","preRender","zs","currentClip","clips","clipZs","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","origin","tileGutter","xIndex","nextX","yIndex","nextY","contextSaved","clip","save","beginPath","moveTo","lineTo","drawTile","restore","unshift","updateUsedTiles","renderedResolution","postRender","postRenderFunction","tilesCount","updateCacheSize","tileCount","getTileImage","alphaChanged","globalAlpha","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","drawCustom","hitDetectionRenderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","strokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","VectorContext","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","CanvasInstruction","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","getColor","fillPatternScale","defaultFillStyle","strokeStyleColor","defaultStrokeStyle","strokeStyleLineCap","getLineCap","defaultLineCap","strokeStyleLineDash","getLineDash","lineDash","defaultLineDash","strokeStyleLineDashOffset","getLineDashOffset","lineDashOffset","defaultLineDashOffset","strokeStyleLineJoin","getLineJoin","defaultLineJoin","strokeStyleWidth","lineWidth","defaultLineWidth","strokeStyleMiterLimit","getMiterLimit","miterLimit","defaultMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","scale_","width_","declutterMode_","declutterImageWithText_","myBegin","filteredFlatCoordinates","sharedData","getAnchor","getPixelRatio","getHitDetectionImage","getRotateWithView","getScaleArray","getDeclutterMode","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","missing","matchingChunk","maxAngle","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","labels_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryWidths","beg","saveTextStates_","backgroundFill","backgroundStroke","defaultPadding","p0","p1","p2","p3","p","repeat","flatOffset","oo","cc","chunk","chunkBegin","range","drawChars_","strokeKey","textKey","font","defaultTextAlign","defaultTextBaseline","fillKey","baseline","strokeWidth","textFillStyle","getFill","textStrokeStyle","getStroke","getFont","defaultFont","registerFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getRepeat","getJustify","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","getText","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","singleSegment","previousAngle","iStart","charLength","chars","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","fromCharCode","horizontalTextAlign","align","createTextChunks","acc","line","overlaps","deferredRendering","alignAndScaleFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","zIndexContext_","ZIndexContext","getZIndexContext","createLabel","reduce","widths","heights","lineWidths","getTextDimensions","renderWidth","contextInstructions","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","fill_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","originX","originY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","scaledCanvasSize","imageOrLabel","dimensions","box","strokePadding","drawImageOrLabel","alignAndScale","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","declutterTree","zIndexContext","pixelCoordinates","transformSetFromArray","dd","prevX","prevY","roundX","roundY","d","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","arc","closePath","rotateWithView","labelWithAnchor","widthIndex","imageArgs","imageDeclutterMode","imageDeclutterBox","renderImage","renderText","imageDeclutter","collides","insert","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","drawChars","part","execute","executeHitDetection","ALL","DECLUTTER","NON_DECLUTTER","circlePixelIndexArrayCache","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","renderedContext_","deferredZIndexContexts_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","Executor","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","indexes","maxDistanceSq","distances","pixelIndex","getPixelIndexArray","idx","executor","targetContext","builderTypes","maxBuilderTypes","requireClip","pushFunction","getDeferredZIndexContexts","getRenderedContext","deferredZIndexContexts","draw","userTransform","context_","transform_","transformRotation_","toFixed","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","setTransform","getGeometryFunction","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","GEOMETRY_RENDERERS","builderGroup","hasText","imageReplay","textReplay","lineStringReplay","polygonReplay","hasImage","replayGroup","declutterBuilderGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","loadingPromises","imageState","renderGeometry","renderFeatureInternal","getHitDetectionRenderer","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","clipped_","renderedFeatures_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedPixelRatio_","renderedRenderOrder_","renderedFrameDeclutter_","replayGroup_","replayGroupChanged","clipping","targetContext_","renderWorlds","executorGroup","declutterable","vectorSource","endWorld","world","getRenderTransform","setDrawContext_","resetDrawContext_","renderDeferredInternal","PRERENDER","transforms","styleFunction","userExtent","CanvasImmediateRenderer","getTransformFromProjections","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","getImageSize","imgContext","getScale","byGeometryType","zIndexKeys","geomAndStyle","kk","createHitDetectionImageData","getSquaredRenderTolerance","resultFeatures","hitDetect","lastIndexOf","executorGroups","renderIfReadyAndVisible","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","loadFeatures","toUserResolution","dirty","getFeaturesInExtent","replayGroupInstructions","ExecutorGroup","getOverlaps","VectorLayer","solveLinearSystem","mat","maxRow","maxEl","absValue","coef","toRadians","angleInDegrees","code_","code","units_","units","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getAxisOrientation","setGlobal","getDefaultTileGrid","setDefaultTileGrid","setGetPointResolution","getPointResolutionFunc","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","EPSG3857Projection","Projection","cosh","PROJECTIONS","fromEPSG4326","toEPSG4326","exp","EPSG4326Projection","sourceCode","destinationCode","DEFAULT_RADIUS","c1","c2","lat1","lat2","deltaLatBy2","deltaLonBy2","showCoordinateWarning","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","projectionLike","pointResolution","projUnits","vertices","addEquivalentProjections","projections","addProjections","defaultCode","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","transformExtent","destProjection","sourceMetersPerUnit","userMetersPerUnit","projections2","forwardTransform","inverseTransform","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","addCommon","inversePixelTransform","type_","flatCoordinates_","flatMidpoints_","properties_","stride_","simplifiedGeometry_","measureFont","measureContext","textHeights","referenceFonts","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","border","body","curr","baseStyle","currentWidth","currentHeight","labelOrImage","executeLabelInstructions","instructions_","offset_","Proxy","pushMethodArgs_","_this","instructionsAtIndex","instructionAtIndex","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","staleKeys_","loadImage","pixelContext","pixelTransform","deferredContext_","containerReused","useContainer","backgroundColor","layerClassName","firstElementChild","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","inverted","toTransformString","dispatchRenderEvent_","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","compensationFactor","triangulation","renderEdges","drawSingle","pixelRound","globalCompositeOperation","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","rect","srcWidth","srcHeight","targetTopLeft","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","isBrokenDiagonalRendering","steps","ud","vd","step","renderEdges_","canvas_","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","tmpTileCoord","origins","origin_","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","tempTileRange","tileCoordExtent","createOrUpdateTileRange","getTileCoordChildTileRange","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordResolution","getFullTileRange","opt_direction","tileCoordIntersectsViewport","viewport","fullTileRanges","getForProjection","extentFromProjection","resolutionsFromExtent","TileGrid","createForExtent","createForProjection","DEFAULT_MAX_ZOOM","half","TileSource","Source","attributionsCollapsible","tilePixelRatio_","tmpSize","tileOptions","setKey","getTileGrid","scaleSize","getTileCoordForTileUrlFunction","withinExtentAndZ","refresh","TileSourceEvent","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplate","template","renderXYZTemplate","createFromTemplates","templates","tileUrlFunctions","tileCoordHash","createFromTileUrlFunctions","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","TileEventType","setTileLoadFunction","setTileUrlFunction","startCharCode","charCodeAt","stopCharCode","charCode","expandUrl","defaultTileLoadFunction","imageTile","tileClass","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","TileImage","xyzOptions","gridOptions","createXYZ","XYZ","adaptAttributions","attributionsCollapsible_","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","setAttributions","attributionLike","withCredentials","xhr","format","success","failure","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","response","onerror","send","loadFeaturesXhr","addFeatures","VectorSourceEvent","VectorSource","format_","url_","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","ADDFEATURE","handleFeatureChange_","valid","indexedFeature","extents","newFeatures","geometryFeatures","modifyingCollection","REMOVEFEATURE","removeFeature","fast","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getAll","getFeaturesAtCoordinate","getInExtent","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","CHANGEFEATURE","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","removeLoadedExtent","removeFeatures","removed","featureChangeKeys","idString","setLoader","maxEntries","rbush_","RBush_","items_","items","bbox","search","forEach_","toJSON","rbush","CircleStyle","displacement","getDisplacement","patternImage_","color_","patternImage","calculateScale","wantedWidth","wantedHeight","ImageStyle","normalizedAnchor_","anchorOrigin_","anchorXUnits_","anchorYUnits_","iconImage_","offsetOrigin_","initialOptions_","HTMLImageElement","unlistenImageChange","listenImageChange","getSrc","iconImageSize","taintedTestContext","IconImage","imageState_","tainted_","ready_","initializeImage_","isTainted_","dispatchChangeEvent_","replaceColor_","onChange","IconImageCache","cache_","patternCache_","maxCacheSize_","createPattern","maxCacheSize","shared","scaleArray_","displacement_","canvases_","hitDetectionCanvas_","radius2_","stroke_","renderOptions_","getRadius2","createHitDetectionCanvas_","renderOptions","draw_","calculateLineJoinSize_","r1","r2","miterRatio","bevelAdd","aa","innerMiterRatio","innerLength","createRenderOptions","maxRadius","createPath_","drawHitDetectionCanvas_","angle0","radiusC","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","geometryFunction_","defaultGeometryFunction","hitDetectionRenderer_","zIndex_","setRenderer","setHitDetectionRenderer","toFunction","defaultStyles","createEditingStyle","font_","textAlign_","justify_","repeat_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","hash","create","setFromArray","transform1","transform2","compose","det","matrixPrecision","uidCounter_","ol_uid","quickselect","defaultCompare","sd","swap","_maxEntries","_minEntries","_all","toBBox","nodesToSearch","child","childBBox","leaf","_build","_splitRoot","tmpNode","_insert","createNode","equalsFn","path","goingUp","findItem","_condense","compareMinX","compareMinY","fromJSON","N","M","calcBBox","N2","N1","multiSelect","right2","right3","_chooseSubtree","targetNode","minEnlargement","bboxArea","enlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareNodeMinX","compareNodeMinY","_allDistMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","destNode"],"sourceRoot":""}