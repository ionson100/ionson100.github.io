"use strict";(self.webpackChunkionson100_github_io=self.webpackChunkionson100_github_io||[]).push([[3968],{13968:(e,n,a)=>{a.r(n),a.d(n,{default:()=>r});var t=a(61225),s=(a(65043),a(70579));function r(){return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)("p",{children:["In this example I connect to another database (Postgres), ",(0,s.jsx)("br",{}),"create a table, and copy data from one database to another,  ",(0,s.jsx)("br",{}),"the other database could be database: MySql, MSSQL, Sqlite"]}),(0,s.jsx)("br",{}),(0,s.jsx)("div",{children:(0,s.jsx)(t.L8,{code:' internal class Super\n {\n     [MapPrimaryKey("id", Generator.Assigned)]\n     public Guid Id { get; set; } = Guid.NewGuid();\n\n     [MapColumn("name")] \n     public string Name { get; set; }\n\n     [MapColumn("age")] \n     public int Age { get; set; }\n\n }\n\n [MapTable("table_12")]\n internal class Table1 : Super\n {\n }\n\n [MapTable("table_12")]\n internal class Table2 : Super\n {\n   \n }\n\n public class MyDbPostgres : IOtherDataBaseFactory\n {\n     private static readonly Lazy<DbProviderFactory> DbProviderFactory =\n         new Lazy<DbProviderFactory>(() => Npgsql.NpgsqlFactory.Instance);\n     public ProviderName GetProviderName()\n     {\n         return ProviderName.PostgreSql;\n     }\n     public string GetConnectionString()\n     {\n         return "Server=localhost;Port=5432;Database=test123_1;User Id=postgres;Password=postgres;";\n     }\n\n     public DbProviderFactory GetDbProviderFactories()\n     {\n         return DbProviderFactory.Value;\n     }\n }\n \n //---------------------------------//\n \nusing ORM_1_21_;\n \nstring? path = null;\n#if DEBUG\npath = "SqlLog.txt";\n#endif\nvar _ = new Configure("Server=localhost;Port=5432;Database=test123;User Id=postgres;Password=postgres;",\n    ProviderName.PostgreSql, path);\n\n// create table from database:test123\nusing var session = Configure.Session;\nsession.DropTableIfExists<Table1>();\nsession.TableCreate<Table1>();\n\n// create table from database:test123_1\nusing var sessionOther = Configure.GetSession<MyDbPostgres>();\nsessionOther.DropTableIfExists<Table2>();\nsessionOther.TableCreate<Table2>();\n\n// insert data to table database test123\nfor (int i = 0; i < 10; i++)\n{\n    session.Insert(new Table1 { Name = $"Name_{i}", Age = 10 + i });\n}\n\nvar listTable1 = session.Query<Table1>().ToList();\n\n//Copying data from one database to another\nforeach (Table1 table1 in listTable1)\n{\n    sessionOther.Insert(new Table2 { Name = table1.Name,Age = table1.Age });\n}\nvar listTable2=sessionOther.Query<Table2>().ToList();'})})]})}}}]);
//# sourceMappingURL=3968.9399de08.chunk.js.map