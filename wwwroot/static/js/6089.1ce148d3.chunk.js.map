{"version":3,"file":"static/js/6089.1ce148d3.chunk.js","mappings":"6LAMA,MAAMA,EAAwBC,IAAa,IAAZ,KAACC,GAAKD,EACjC,OAEIE,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACC,MAAM,eAAeC,UAC9BH,EAAAA,EAAAA,KAACI,EAAAA,EAAiB,CAACC,SAAS,MAAMJ,MAAOK,EAAAA,EAAQH,SAC5CJ,KAEH,EAIRQ,EAAiBC,IAAa,IAAZ,KAACT,GAAKS,EAC1B,OACIR,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACC,MAAM,eAAeC,UAC9BH,EAAAA,EAAAA,KAACI,EAAAA,EAAiB,CAACC,SAAS,MAAMJ,MAAOK,EAAAA,EAAQH,SAC5CJ,KAEH,EAIRU,EAAoBC,IAAa,IAAZ,KAACX,GAAKW,EAC7B,OAEIV,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACC,MAAM,eAAeC,UAC9BH,EAAAA,EAAAA,KAACI,EAAAA,EAAiB,CAACC,SAAS,SAASJ,MAAOK,EAAAA,EAAQH,SAC/CJ,KAEH,C,qHCxBd,MAAMA,EAAK,ilEAqEX,SAASY,IACL,MAAMC,EAAuB,GACvBC,EAAI,IAAIC,EAAAA,GACdD,EAAEE,QAAU,OACZ,CAAC,IAADC,EACI,MAAMC,EAAQ,IAAIH,EAAAA,GAClBG,EAAMF,QAAU,aACT,QAAPC,EAAAH,EAAEK,aAAK,IAAAF,GAAPA,EAASG,KAAKF,EAClB,CACA,CAAC,IAADG,EACI,MAAMH,EAAQ,IAAIH,EAAAA,GAClBG,EAAMF,QAAU,aACT,QAAPK,EAAAP,EAAEK,aAAK,IAAAE,GAAPA,EAASD,KAAKF,EAClB,CAGA,OADAL,EAASO,KAAKN,GACPD,CACX,CAEe,SAASS,IACpB,MAAMC,GAAWC,EAAAA,EAAAA,QAAsC,MAEvD,OACIC,EAAAA,EAAAA,MAAA,OAAKvB,MAAO,CAACC,MAAM,KAAKC,SAAA,EACpBH,EAAAA,EAAAA,KAACyB,EAAAA,GAAQ,CACLC,IAAKJ,EACLK,MAAO,IACP1B,MAAO,CAAC2B,UAAU,GAClBC,UAAU7B,EAAAA,EAAAA,KAAC8B,EAAAA,IAA+B,CAACC,MAAO,QAASC,KAAM,KACjEC,WAAWjC,EAAAA,EAAAA,KAACkC,EAAAA,IAAe,CAACH,MAAO,QAASC,KAAM,KAClDG,UAAUnC,EAAAA,EAAAA,KAACoC,EAAAA,IAAgB,CAACL,MAAO,QAASC,KAAM,KAClDd,MAAOP,IACP0B,gBAAiBA,CAACC,EAAEC,KAChBC,QAAQC,IAAI,YAAYF,EAAEG,KAAMC,GAAG,KAG3C3C,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UAAQ4C,QAASA,KACb,MAAMhC,EAASU,EAASuB,QAASC,eAC3BjC,GAAEkC,EAAAA,EAAAA,IAAW,CAAChC,QAAQ,QAC5BH,EAAUO,KAAKN,GACfS,EAASuB,QAASG,aAAa,EAEjC7C,SAAC,sBACHH,EAAAA,EAAAA,KAAA,UAAQ4C,QAASA,KACbtB,EAASuB,QAASI,gBAAgB,EACpC9C,SAAC,sBAEHH,EAAAA,EAAAA,KAAA,UAAQ4C,QAASA,KACd,MAAMM,EAAmBvC,IACzBW,EAASuB,QAASM,gBAAgBD,EAAQ,EAC3C/C,SAAC,+BACHH,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,OAAAG,UACIH,EAAAA,EAAAA,KAACH,EAAAA,GAAqB,CAACE,KAAMA,QAI7C,C","sources":["ViewStorage/codeSnippetJavaScript.jsx","ViewStorage/menu/bsrtree/5-19.tsx"],"sourcesContent":["\r\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport { coldarkDark as myStyle } from 'react-syntax-highlighter/dist/esm/styles/prism';\r\n\r\n\r\n\r\nconst CodeSnippetJavaScript = ({code}) => {\r\n    return (\r\n\r\n        <div style={{width:\"fit-content\"}}>\r\n            <SyntaxHighlighter language=\"jsx\" style={myStyle}  >\r\n                {code}\r\n            </SyntaxHighlighter>\r\n        </div>\r\n\r\n    );\r\n};\r\nconst CodeSnippetCss = ({code}) => {\r\n    return (\r\n        <div style={{width:\"fit-content\"}}>\r\n            <SyntaxHighlighter language=\"css\" style={myStyle} >\r\n                {code}\r\n            </SyntaxHighlighter>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst CodeSnippetDotNet = ({code}) => {\r\n    return (\r\n\r\n        <div style={{width:\"fit-content\"}}>\r\n            <SyntaxHighlighter language=\"csharp\" style={myStyle} >\r\n                {code}\r\n            </SyntaxHighlighter>\r\n        </div>\r\n    );\r\n};\r\nexport {\r\n    CodeSnippetJavaScript,CodeSnippetCss,CodeSnippetDotNet\r\n}\r\n\r\n\r\n\r\n","import React, {useRef} from \"react\";\r\nimport {MenuItem, TreeMenu} from \"bsr-tree-virtual\";\r\nimport {MdOutlineSubdirectoryArrowRight} from \"react-icons/md\";\r\nimport {FaRegMinusSquare, FaRegPlusSquare} from \"react-icons/fa\";\r\nimport {CodeSnippetJavaScript} from \"../../codeSnippetJavaScript\";\r\nimport {CreateItem} from \"bsr-left-sidebar\";\r\nimport { LiaElementor } from \"react-icons/lia\";\r\n\r\n\r\n/**----------------------------------------**/\r\nconst code=`\r\nimport React, {useRef} from \"react\";\r\nimport {MenuItem, TreeMenu} from \"bsr-tree-virtual\";\r\nimport \"bsr-tree-virtual/dist/index.css\"\r\nimport {MdOutlineSubdirectoryArrowRight} from \"react-icons/md\";\r\nimport {FaRegMinusSquare, FaRegPlusSquare} from \"react-icons/fa\";\r\nimport {CodeSnippetJavaScript} from \"../../codeSnippetJavaScript\";\r\n\r\nfunction getListItem() {\r\n    const listItem: MenuItem[] = [];\r\n    const m = new MenuItem();\r\n    m.content = \"root\"\r\n    {\r\n        const sub_m = new MenuItem();\r\n        sub_m.content = \"sub_item:1\"\r\n        m.items?.push(sub_m)\r\n    }\r\n    {\r\n        const sub_m = new MenuItem();\r\n        sub_m.content = \"sub_item:2\"\r\n        m.items?.push(sub_m)\r\n    }\r\n\r\n    listItem.push(m)\r\n    return listItem;\r\n}\r\n\r\nexport default function P5_19() {\r\n    const mRefTree = useRef<InstanceType<typeof TreeMenu>>(null);\r\n   \r\n    return (\r\n        <div style={{width:600}} >\r\n            <TreeMenu\r\n                ref={mRefTree}\r\n                wight={600}\r\n                style={{marginTop:5}}\r\n                iconTree={<MdOutlineSubdirectoryArrowRight color={\"black\"} size={20}/>}\r\n                iconClose={<FaRegPlusSquare color={\"black\"} size={20}/>}\r\n                iconOpen={<FaRegMinusSquare color={\"black\"} size={20}/>}\r\n                items={getListItem()}\r\n                onClickMenuItem={(s,o)=>{\r\n                    console.log('clicked: '+o.item!.id)\r\n                }}\r\n            />\r\n            <br/>\r\n            <br/>\r\n            <button onClick={()=>{\r\n                const listItem=mRefTree.current!.GetListItems()\r\n                const m=CreateItem({content:\"add\"})\r\n                listItem!.push(m)\r\n                mRefTree.current!.RefreshMenu()\r\n\r\n            }}>Add Items manual</button>\r\n            <button onClick={()=>{\r\n                mRefTree.current!.DeleteAllItems()\r\n            }}>Delete all items</button>\r\n\r\n            <button onClick={()=>{\r\n               const newList:MenuItem[]=getListItem();\r\n               mRefTree.current!.RewriteItems(...newList)\r\n            }}>Replaces list to now list</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n`\r\n\r\n/**----------------------------------------**/\r\n\r\nfunction getListItem() {\r\n    const listItem: MenuItem[] = [];\r\n    const m = new MenuItem();\r\n    m.content = \"root\"\r\n    {\r\n        const sub_m = new MenuItem();\r\n        sub_m.content = \"sub_item:1\"\r\n        m.items?.push(sub_m)\r\n    }\r\n    {\r\n        const sub_m = new MenuItem();\r\n        sub_m.content = \"sub_item:2\"\r\n        m.items?.push(sub_m)\r\n    }\r\n\r\n    listItem.push(m)\r\n    return listItem;\r\n}\r\n\r\nexport default function P5_19() {\r\n    const mRefTree = useRef<InstanceType<typeof TreeMenu>>(null);\r\n\r\n    return (\r\n        <div style={{width:600}} >\r\n            <TreeMenu\r\n                ref={mRefTree}\r\n                wight={600}\r\n                style={{marginTop:5}}\r\n                iconTree={<MdOutlineSubdirectoryArrowRight color={\"black\"} size={20}/>}\r\n                iconClose={<FaRegPlusSquare color={\"black\"} size={20}/>}\r\n                iconOpen={<FaRegMinusSquare color={\"black\"} size={20}/>}\r\n                items={getListItem()}\r\n                onClickMenuItem={(s,o)=>{\r\n                    console.log('clicked: '+o.item!.id)\r\n                }}\r\n            />\r\n            <br/>\r\n            <button onClick={()=>{\r\n                const listItem=mRefTree.current!.GetListItems()\r\n                const m=CreateItem({content:\"add\"})\r\n                listItem!.push(m)\r\n                mRefTree.current!.RefreshMenu()\r\n\r\n            }}>Add Items manual</button>\r\n            <button onClick={()=>{\r\n                mRefTree.current!.DeleteAllItems()\r\n            }}>Delete all items</button>\r\n\r\n            <button onClick={()=>{\r\n               const newList:MenuItem[]=getListItem();\r\n               mRefTree.current!.RewriteItems(...newList)\r\n            }}>Replaces list to now list</button>\r\n            <br/>\r\n            <div>\r\n                <CodeSnippetJavaScript code={code}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n"],"names":["CodeSnippetJavaScript","_ref","code","_jsx","style","width","children","SyntaxHighlighter","language","myStyle","CodeSnippetCss","_ref2","CodeSnippetDotNet","_ref3","getListItem","listItem","m","MenuItem","content","_m$items","sub_m","items","push","_m$items2","P5_19","mRefTree","useRef","_jsxs","TreeMenu","ref","wight","marginTop","iconTree","MdOutlineSubdirectoryArrowRight","color","size","iconClose","FaRegPlusSquare","iconOpen","FaRegMinusSquare","onClickMenuItem","s","o","console","log","item","id","onClick","current","GetListItems","CreateItem","RefreshMenu","DeleteAllItems","newList","RewriteItems"],"sourceRoot":""}