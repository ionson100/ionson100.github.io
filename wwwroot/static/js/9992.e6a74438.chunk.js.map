{"version":3,"file":"static/js/9992.e6a74438.chunk.js","mappings":"4LAEA,MAAMA,EAAK,kxCA6CLC,EAAQ,qsBAiBC,SAASC,IACpB,OACIC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACID,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,yBACsBC,EAAAA,EAAAA,KAAA,SAAK,sBACRA,EAAAA,EAAAA,KAAA,SAAK,kBACTA,EAAAA,EAAAA,KAAA,SAAK,4EACqDA,EAAAA,EAAAA,KAAA,SAAK,qDAC5BA,EAAAA,EAAAA,KAAA,aAErDA,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACC,EAAAA,GAAiB,CAACN,KAAMA,OAE7BK,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACE,EAAAA,GAAc,CAACP,KAAMC,QAMtC,C","sources":["ViewStorage/menu/orm/6-1.tsx"],"sourcesContent":["import React from \"react\";\r\nimport {CodeSnippetDotNet, CodeSnippetJavaScript, CodeSnippetSql} from \"../../codeSnippetJavaScript\";\r\nconst code=`\r\nusing Newtonsoft.Json;\r\nusing ORM_1_21_;\r\n\r\n//Attention, the log file is not cleared, use only for debugging purposes,\r\n//there may be problems due to the large file size;\r\nstring? path = null;\r\n#if DEBUG\r\npath = \"SqlLog.txt\";\r\n#endif\r\n\r\n//creation only at program startup\r\nvar _ = new Configure(\"Server=localhost;Port=5432;Database=test123;User Id=postgres;Password=postgres;\",\r\n    ProviderName.PostgreSql, path);\r\n\r\nusing var ses = Configure.Session;\r\nses.TableCreate<MyClass>();\r\nList<MyClass> classes = new List<MyClass>\r\n{\r\n    new() { Name = \"NAME1\", Description = \"DES1\", Age = 30 },\r\n    new() { Name = \"NAME2\", Description = \"DES2\", Age = 31 }\r\n};\r\nses.InsertBulk(classes);\r\nses.Query<MyClass>().ToList().ForEach(a => { Console.WriteLine(JsonConvert.SerializeObject(a)); });\r\nses.DropTable<MyClass>();\r\n\r\nConsole.ReadKey();\r\n\r\n[MapTable(\"m_t_123\")]\r\nclass MyClass\r\n{\r\n    [MapPrimaryKey(\"id\", Generator.Assigned)]\r\n    public Guid Id { get; set; } = Guid.NewGuid();\r\n\r\n    [MapColumn(\"name\")] public string? Name { get; set; }\r\n\r\n    [MapColumn(\"age\")] [MapIndex] public int Age { get; set; }\r\n\r\n    [MapColumnType(\"text\")]\r\n    [MapColumn(\"des\")]\r\n    public string? Description { get; set; }\r\n\r\n    [MapColumn(\"date\")] public DateTime DateTime { get; set; } = DateTime.UtcNow;\r\n}\r\n`\r\nconst sqlCode=`\r\nORM: CREATE TABLE IF NOT EXISTS \"m_t_123\" (\r\n \"id\" UUID  PRIMARY KEY,\r\n \"name\" VARCHAR(256) NULL ,\r\n \"age\" INTEGER NOT NULL DEFAULT '0' ,\r\n \"des\" text NULL ,\r\n \"date\" TIMESTAMP NOT NULL DEFAULT '0001-01-01 00:00:00.000' );\r\nCREATE INDEX IF NOT EXISTS  \"INDEX_m_t_123_age\" ON \"m_t_123\" (\"age\");\r\n\r\nORM: INSERT INTO \"m_t_123\" ( \"id\",\"name\",\"age\",\"des\",\"date\") VALUES('ccaf8544-dc2b-404a-9ca2-8a967041f1e9',\r\n'NAME1',30,'DES1','2024-06-24 11:19:39.480'),\r\n('40393af7-6224-41ce-8362-8024ca3d61ec','NAME2',31,'DES2','2024-06-24 11:19:39.481')\r\nORM: SELECT \"m_t_123\".\"id\", \"m_t_123\".\"name\", \"m_t_123\".\"age\", \"m_t_123\".\"des\", \"m_t_123\".\"date\" FROM \"m_t_123\";\r\nORM: DROP TABLE  \"m_t_123\";\r\n\r\n`\r\n\r\nexport default function P6_1(){\r\n    return(\r\n        <div>\r\n            <p>\r\n                NuGet Package Manager<br/>\r\n                install bitnik.orm<br/>\r\n                install Npgsql<br/>\r\n                Attention, the log file is not cleared, use only for debugging purposes,<br/>\r\n                there may be problems due to the large file size;<br/>\r\n            </p>\r\n            <br/>\r\n            <div>\r\n                <CodeSnippetDotNet code={code}/>\r\n            </div>\r\n            <br/>\r\n            <div>\r\n                <CodeSnippetSql code={sqlCode}/>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}"],"names":["code","sqlCode","P6_1","_jsxs","children","_jsx","CodeSnippetDotNet","CodeSnippetSql"],"sourceRoot":""}