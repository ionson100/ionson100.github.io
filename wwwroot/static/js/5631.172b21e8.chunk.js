"use strict";(self.webpackChunkionson100_github_io=self.webpackChunkionson100_github_io||[]).push([[5631],{35631:(e,s,n)=>{n.r(s),n.d(s,{default:()=>i});var a=n(61225),r=(n(65043),n(70579));function i(){return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("p",{children:" head part: "}),(0,r.jsx)("div",{children:(0,r.jsx)(a.L8,{code:'using Newtonsoft.Json;\nusing ORM_1_21_;\n\n[MapTable("m_t_123")]\nclass MyClass\n{\n    [MapPrimaryKey("id", Generator.Native)]\n    public long Id { get; set; };\n\n    [MapColumn("name")] public string? Name { get; set; }\n\n    [MapColumn("age")] [MapIndex] public int Age { get; set; }\n\n    [MapColumnType("text")]\n    [MapColumn("des")]\n    public string? Description { get; set; }\n\n    [MapColumn("date")] public DateTime DateTime { get; set; } = DateTime.UtcNow;\n}\n\n\nvoid WriteLineClass(object a)\n{\n    Console.WriteLine(JsonConvert.SerializeObject(a));\n}\n\nusing var session = Configure.Session;\nsession.DropTableIfExists<MyClass>();\n\nsession.TableCreate<MyClass>();\n List<MyClass> classes = new List<MyClass>\n {\n     new() { Name = "NAME1",DateTime  = DateTime.Now,Age = 10},\n     new() { Name = "NAME2",DateTime  = DateTime.Now,Age = 20}\n };\nsession.InsertBulk(classes);\n                '})}),(0,r.jsx)("br",{}),(0,r.jsxs)("details",{children:[(0,r.jsx)("summary",{children:"FreeSql and sql request"}),(0,r.jsx)("div",{children:(0,r.jsx)(a.L8,{code:'var sql = $"select * from {session.TableName<MyClass>()}";\n//select * from "m_t_123"\nvar sql = $"select {session.StarSql<MyClass>()} from {session.TableName<MyClass>()}";\n//select "id", "name", "age", "des", "date" from "m_t_123"\n\nvar sql = $"select {session.StarSql<MyClass>()} from {session.TableName<MyClass>()} where {session.ColumnName<MyClass>(a=>a.Age)} > 20";\n//sql="select \\"id\\", \\"name\\", \\"age\\", \\"des\\", \\"date\\" from \\"m_t_123\\" where \\"age\\" > 20"\n\nvar res =session.FreeSql<MyClass>(sql).ToList();'})})]}),(0,r.jsx)("br",{}),(0,r.jsxs)("details",{children:[(0,r.jsx)("summary",{children:"FreeSql as dynamic"}),(0,r.jsx)("div",{children:(0,r.jsx)(a.L8,{code:'var sql = $"select * from {session.TableName<MyClass>()} ";\nvar res =session.FreeSql<dynamic>(sql).ToList();\nres.ForEach(WriteLineClass);\n\nvar sql = $"SELECT  tt.name AS tt_name, tt1.name AS tt1_name FROM m_t_123 AS tt JOIN m_t_123 AS tt1  ON tt.age=tt1.age";\nvar res =session.FreeSql<dynamic>(sql).ToList();\nres.ForEach(WriteLineClass);'})})]}),(0,r.jsx)("br",{}),(0,r.jsxs)("details",{children:[(0,r.jsx)("summary",{children:"FreeSql as other type"}),(0,r.jsx)("div",{children:(0,r.jsx)(a.L8,{code:'var sql = $"SELECT  age FROM m_t_123 ";\nvar res =session.FreeSql<int>(sql).ToList();\nres.ForEach(Console.WriteLine);\n\nvar sql = $"SELECT  date FROM m_t_123 ";\nvar res =session.FreeSql<DateTime>(sql).ToList();\nres.ForEach(a =>\n{\n    Console.WriteLine(a.ToString("D"));\n});'})})]}),(0,r.jsx)("br",{}),(0,r.jsxs)("details",{children:[(0,r.jsx)("summary",{children:"FreeSql custom type with constructor"}),(0,r.jsx)("div",{children:(0,r.jsx)(a.L8,{code:'//(using attribute:MapReceiverFreeSqlAttribute) the presence of a constructor with parameters\n[MapReceiverFreeSql]\nclass MyFreeSql\n{\n    public long IdGuid { get; }\n    public string Name { get; }\n    public int Age { get; }\n    public MyFreeSql(long idGuid, string myName, int myAge)\n    {\n        IdGuid = idGuid;\n        Name = myName;\n        Age = myAge;\n\n    }\n}\n//Caution!\n//Sequence of types from select: select id,name,age,enum \n//Must match the sequence of constructor parameter types.: MyFreeSql(long id, string myName, int myAge)\n\n\nvar sql = $"SELECT id, name as \\"myName\\", age as \\"myAge\\" from {session.TableName<MyClass>()}";\nvar res =session.FreeSql<MyFreeSql>(sql).ToList();\nres.ForEach(WriteLineClass);'})})]}),(0,r.jsx)("br",{}),(0,r.jsxs)("details",{children:[(0,r.jsx)("summary",{children:"FreeSql custom type "}),(0,r.jsx)("div",{children:(0,r.jsx)(a.L8,{code:'class MyFreeSql\n{\n    public long id { get; set; }\n    public string name { get; set; }\n\nvar sql = $"SELECT id,name from {session.TableName<MyClass>()}";\nvar res =session.FreeSql<MyFreeSql>(sql).ToList();\nres.ForEach(WriteLineClass);'})})]}),(0,r.jsx)("br",{}),(0,r.jsxs)("details",{children:[(0,r.jsx)("summary",{children:"FreeSql anonymous type"}),(0,r.jsx)("div",{children:(0,r.jsx)(a.L8,{code:'static List<T> TempSql<T>(T t,string sql)\n{\n    return Configure.Session.FreeSql<T>(sql).ToList();\n}\n\nvar sql = "SELECT name, age from m_t_123";\nvar res=TempSql(new { name = "", age = 0 }, sql);\nres.ForEach(WriteLineClass);'})})]})]})}}}]);
//# sourceMappingURL=5631.172b21e8.chunk.js.map